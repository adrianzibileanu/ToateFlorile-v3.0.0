{"version":3,"sources":["../../components/_common/_igx-display-container.scss","../../components/_common/_igx-drag.scss","../../components/_common/_igx-vhelper.scss","../_core.scss","../../../../../../../../node_modules/igniteui-theming/sass/bem/_index.scss","../../components/icon/_icon-component.scss","../../components/radio/_radio-component.scss","../../print/_index.scss","../../typography/_typography.scss","../../../../../../../../node_modules/igniteui-theming/sass/themes/charts/_category-chart-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/themes/_mixins.scss","../../../../../../../../node_modules/igniteui-theming/sass/themes/charts/_data-chart-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/themes/charts/_financial-chart-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/themes/charts/_funnel-chart-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/themes/charts/_gauge-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/themes/charts/_graph-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/themes/charts/_pie-chart-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/themes/charts/_shape-chart-theme.scss","../../components/banner/_banner-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/typography/_mixins.scss","../../components/bottom-nav/_bottom-nav-theme.scss","../../components/button/_button-theme.scss","../../components/calendar/_calendar-theme.scss","../../components/card/_card-theme.scss","../../components/checkbox/_checkbox-theme.scss","../../components/chip/_chip-theme.scss","../../components/column-actions/_column-actions-theme.scss","../../components/dialog/_dialog-theme.scss","../../components/dock-manager/_dock-manager-theme.scss","../../components/drop-down/_drop-down-theme.scss","../../components/expansion-panel/_expansion-panel-theme.scss","../../components/grid/_excel-filtering-theme.scss","../../components/input/_input-group-theme.scss","../../components/list/_list-theme.scss","../../components/navbar/_navbar-theme.scss","../../components/navdrawer/_navdrawer-theme.scss","../../components/radio/_radio-theme.scss","../../components/slider/_slider-theme.scss","../../components/snackbar/_snackbar-theme.scss","../../components/switch/_switch-theme.scss","../../components/tabs/_tabs-theme.scss","../../components/time-picker/_time-picker-theme.scss","../../components/stepper/_stepper-theme.scss","../../components/toast/_toast-theme.scss","../../components/tooltip/_tooltip-theme.scss","../../components/tree/_tree-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/color/_mixins.scss","../../../../../../../../node_modules/igniteui-theming/sass/elevations/_mixins.scss","../generators/_base.scss","../../components/ripple/_ripple-theme.scss","../../components/avatar/_avatar-theme.scss","../../components/action-strip/_action-strip-theme.scss","../../components/badge/_badge-theme.scss","../../components/button-group/_button-group-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/animations/_mixins.scss","../../../../../../../../node_modules/igniteui-theming/sass/animations/entrances/_scale.scss","../../../../../../../../node_modules/igniteui-theming/sass/animations/exits/_scale.scss","../../components/carousel/_carousel-theme.scss","../../components/splitter/_splitter-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/animations/generic/_scale.scss","../../components/combo/_combo-theme.scss","../../components/date-picker/_date-picker-theme.scss","../../components/date-range-picker/_date-range-picker-theme.scss","../../components/divider/_divider-theme.scss","../../components/rating/_rating-theme.scss","../../components/grid/_grid-theme.scss","../../components/grid-summary/_grid-summary-theme.scss","../../components/grid-toolbar/_grid-toolbar-theme.scss","../../components/grid/_pivot-data-selector-theme.scss","../../components/highlight/highlight-theme.scss","../../components/icon/_icon-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/animations/_easings.scss","../../components/overlay/_overlay-theme.scss","../../components/paginator/_paginator-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/animations/generic/_rotate.scss","../../components/progress/_progress-theme.scss","../../components/query-builder/_query-builder-theme.scss","../../components/scrollbar/scrollbar-theme.scss","../../../../../../../../node_modules/igniteui-theming/sass/animations/entrances/_fade.scss","../../components/watermark/_watermark-theme.scss"],"names":[],"mappings":"AAEA,uBACI,eAAA,CACA,iBAAA,CACA,iBAAA,CACA,UAAA,CACA,eAAA,CACA,aAAA,CAGJ,iCACI,UAAA,CCVJ,UACI,iBAAA,CAGJ,2BACI,gBAAA,CAGJ,kBACI,gBAAA,CCPJ,gDACI,aAAA,CACA,aAAA,CACA,aAAA,CAGJ,uBACI,iBAAA,CACA,KAAA,CACA,kBAAA,CAGJ,yBACI,UAAA,CAGJ,yDACI,SAAA,CAGJ,2DACI,UAAA,CC+DA,SACI,uBAAA,CAWA,sJAII,qBAAA,CCmGJ,mBC9KA,iBAAA,CACA,OAAA,CACA,QAAA,CACA,WAAA,CACA,eAAA,CD0KA,iBE/EA,aAAA,CF6LA,2BE1LI,YAAA,CACA,gBAAA,CC7HR,aACI,mBAGI,gBAAA,CACA,eAAA,CACA,QAAA,CAGJ,SACI,aAAA,CAGJ,EACI,gCAAA,CAGA,iBAAA,CAEA,wBAAA,CACA,2BAAA,CAGJ,qBACI,0BAAA,CACA,UAAA,CAGJ,cACI,uBAAA,CAIJ,cAGI,sBAAA,CAGJ,6LASI,uBAAA,CAIA,yDAEI,4BAAA,CACA,gCAAA,CACA,2BAAA,CAAA,CCHZ,eAvCA,iCAAA,CCsSA,kCClRQ,6FAAA,CAAA,gGAAA,CAAA,4GAAA,CAAA,4GAAA,CAAA,4GAAA,CAAA,4GAAA,CCqGR,8BDrGQ,yFAAA,CAAA,4FAAA,CEwRR,mCFxRQ,8FAAA,CAAA,iGAAA,CAAA,6GAAA,CAAA,6GAAA,CAAA,6GAAA,CAAA,6GAAA,CGyDR,gCHzDQ,oGAAA,CAAA,4EAAA,CI2HR,gCACI,mDAAA,CAGJ,gCACI,mDAAA,CCnCJ,gCACI,mDAAA,CC1BJ,6BNpEQ,6EAAA,COkOR,+BPlOQ,0FAAA,CAAA,6FAAA,CAAA,qGAAA,CAAA,yGAAA,CAAA,qGAAA,CAAA,yGAAA,CQgIR,iCC3IY,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CD2IJ,oBAAA,CACA,kBAAA,CEcR,gcD5JY,gEAAA,CAEA,qCAAA,CAAA,yCAAA,CAAA,uCAAA,CAAA,yCAAA,CAAA,+CAAA,CAAA,+CAAA,CAAA,uCAAA,CAAA,6CAAA,CC4JJ,QAAA,CC81BR,2BF5/BY,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CE4/BJ,iBAAA,CAIR,gCFlgCY,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CEkgCJ,iBAAA,CACA,QAAA,CCmKR,0CHxqCY,iEAAA,CAEA,sCAAA,CAAA,0CAAA,CAAA,wCAAA,CAAA,0CAAA,CAAA,gDAAA,CAAA,gDAAA,CAAA,wCAAA,CAAA,8CAAA,CGwqCJ,QAAA,CAIR,0CH9qCY,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CG8qCJ,QAAA,CAIR,0CHprCY,mEAAA,CAEA,wCAAA,CAAA,4CAAA,CAAA,0CAAA,CAAA,4CAAA,CAAA,kDAAA,CAAA,kDAAA,CAAA,0CAAA,CAAA,gDAAA,CGorCJ,QAAA,CAIR,2CH1rCY,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CG0rCJ,QAAA,CAIR,oCHhsCY,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CGgsCR,QAAA,CAGJ,4CHrsCY,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CGqsCJ,gBAAA,CACA,mBAAA,CACA,QAAA,CC12BR,qFJ/VY,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CI+VJ,QAAA,CAIR,8CJrWY,mEAAA,CAEA,wCAAA,CAAA,4CAAA,CAAA,0CAAA,CAAA,4CAAA,CAAA,kDAAA,CAAA,kDAAA,CAAA,0CAAA,CAAA,gDAAA,CIqWJ,QAAA,CAIR,0CJ3WY,mEAAA,CAEA,wCAAA,CAAA,4CAAA,CAAA,0CAAA,CAAA,4CAAA,CAAA,kDAAA,CAAA,kDAAA,CAAA,0CAAA,CAAA,gDAAA,CI2WJ,QAAA,CAIR,mCJjXY,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CIiXJ,QAAA,CC6DR,gFLhbY,mEAAA,CAEA,wCAAA,CAAA,4CAAA,CAAA,0CAAA,CAAA,4CAAA,CAAA,kDAAA,CAAA,kDAAA,CAAA,0CAAA,CAAA,gDAAA,CKgbJ,YAAA,CACA,eAAA,CCyKR,yBN5lBY,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CM4lBJ,eAAA,CAMJ,iHNpmBQ,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CMomBA,gBAAA,CACA,eAAA,CCrhBZ,iDPlFY,mEAAA,CAEA,wCAAA,CAAA,4CAAA,CAAA,0CAAA,CAAA,4CAAA,CAAA,kDAAA,CAAA,kDAAA,CAAA,0CAAA,CAAA,gDAAA,COkFJ,QAAA,CC4FR,yCRhLY,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CQgLJ,QAAA,CAIR,2CRtLY,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CQsLJ,QAAA,CAGJ,6CACI,qBAAA,CCvIR,gCACI,iDAAA,CCiZJ,4HVvcY,iEAAA,CAEA,sCAAA,CAAA,0CAAA,CAAA,wCAAA,CAAA,0CAAA,CAAA,gDAAA,CAAA,gDAAA,CAAA,wCAAA,CAAA,8CAAA,CUwcJ,QAAA,CAIR,oCV9cY,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CU8cJ,QAAA,CCtQR,kDX1MY,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CW0MJ,QAAA,CAIR,wDXhNY,mEAAA,CAEA,wCAAA,CAAA,4CAAA,CAAA,0CAAA,CAAA,4CAAA,CAAA,kDAAA,CAAA,kDAAA,CAAA,0CAAA,CAAA,gDAAA,CWgNJ,QAAA,CAIR,0CXtNY,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CWsNJ,QAAA,CCiXJ,uJZzkBQ,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CY6kBR,iKZ/kBQ,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CYolBR,4FZtlBQ,iEAAA,CAEA,sCAAA,CAAA,0CAAA,CAAA,wCAAA,CAAA,0CAAA,CAAA,gDAAA,CAAA,gDAAA,CAAA,wCAAA,CAAA,8CAAA,CY0lBR,mKZ5lBQ,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CYgmBR,yKZlmBQ,mEAAA,CAEA,wCAAA,CAAA,4CAAA,CAAA,0CAAA,CAAA,4CAAA,CAAA,kDAAA,CAAA,kDAAA,CAAA,0CAAA,CAAA,gDAAA,CYsmBJ,8JZxmBI,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CYwmBA,yBAAA,CAKJ,0xBZ/mBI,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CYknBR,kJZpnBQ,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CYwnBR,6KZ1nBQ,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CY8nBR,mLZhoBQ,mEAAA,CAEA,wCAAA,CAAA,4CAAA,CAAA,0CAAA,CAAA,4CAAA,CAAA,kDAAA,CAAA,kDAAA,CAAA,0CAAA,CAAA,gDAAA,Ca+qDZ,iFbjrDY,mEAAA,CAEA,wCAAA,CAAA,4CAAA,CAAA,0CAAA,CAAA,4CAAA,CAAA,kDAAA,CAAA,kDAAA,CAAA,0CAAA,CAAA,gDAAA,CairDJ,QAAA,CAIR,sCbvrDY,gEAAA,CAEA,qCAAA,CAAA,yCAAA,CAAA,uCAAA,CAAA,yCAAA,CAAA,+CAAA,CAAA,+CAAA,CAAA,uCAAA,CAAA,6CAAA,CaurDJ,QAAA,CAIR,gwBb7rDY,mEAAA,CAEA,wCAAA,CAAA,4CAAA,CAAA,0CAAA,CAAA,4CAAA,CAAA,kDAAA,CAAA,kDAAA,CAAA,0CAAA,CAAA,gDAAA,Ca8rDJ,QAAA,CC/qCR,iCdjhBY,iEAAA,CAEA,sCAAA,CAAA,0CAAA,CAAA,wCAAA,CAAA,0CAAA,CAAA,gDAAA,CAAA,gDAAA,CAAA,wCAAA,CAAA,8CAAA,CcihBJ,QAAA,CAUR,+Ed7hBY,mEAAA,CAEA,wCAAA,CAAA,4CAAA,CAAA,0CAAA,CAAA,4CAAA,CAAA,kDAAA,CAAA,kDAAA,CAAA,0CAAA,CAAA,gDAAA,Cc8hBJ,QAAA,CAIR,6CdpiBY,gEAAA,CAEA,qCAAA,CAAA,yCAAA,CAAA,uCAAA,CAAA,yCAAA,CAAA,+CAAA,CAAA,+CAAA,CAAA,uCAAA,CAAA,6CAAA,CcoiBJ,QAAA,CCnZR,kGfnJY,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CemJR,eAAA,CC4PJ,kFhBjZY,mEAAA,CAEA,wCAAA,CAAA,4CAAA,CAAA,0CAAA,CAAA,4CAAA,CAAA,kDAAA,CAAA,kDAAA,CAAA,0CAAA,CAAA,gDAAA,CgBmZZ,6ChBrZY,mEAAA,CAEA,wCAAA,CAAA,4CAAA,CAAA,0CAAA,CAAA,4CAAA,CAAA,kDAAA,CAAA,kDAAA,CAAA,0CAAA,CAAA,gDAAA,CgBqZJ,QAAA,CCrCR,0EjBlXY,mEAAA,CAEA,wCAAA,CAAA,4CAAA,CAAA,0CAAA,CAAA,4CAAA,CAAA,kDAAA,CAAA,kDAAA,CAAA,0CAAA,CAAA,gDAAA,CiBkXJ,YAAA,CACA,eAAA,CCuMR,4GlB5jBY,gEAAA,CAEA,qCAAA,CAAA,yCAAA,CAAA,uCAAA,CAAA,yCAAA,CAAA,+CAAA,CAAA,+CAAA,CAAA,uCAAA,CAAA,6CAAA,CkB8jBZ,wClBhkBY,gEAAA,CAEA,qCAAA,CAAA,yCAAA,CAAA,uCAAA,CAAA,yCAAA,CAAA,+CAAA,CAAA,+CAAA,CAAA,uCAAA,CAAA,6CAAA,CmB+GZ,sCnBjHY,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CoBifZ,4EpBnfY,mEAAA,CAEA,wCAAA,CAAA,4CAAA,CAAA,0CAAA,CAAA,4CAAA,CAAA,kDAAA,CAAA,kDAAA,CAAA,0CAAA,CAAA,gDAAA,CoBmfJ,YAAA,CACA,eAAA,CCuDR,gErB7iBY,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CqB6iBJ,YAAA,CACA,eAAA,CCvPR,6CtBzTY,mEAAA,CAEA,wCAAA,CAAA,4CAAA,CAAA,0CAAA,CAAA,4CAAA,CAAA,kDAAA,CAAA,kDAAA,CAAA,0CAAA,CAAA,gDAAA,CsB2TZ,6CtB7TY,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CsB6TJ,YAAA,CAIR,wCtBnUY,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CsBmUJ,YAAA,CACA,eAAA,CCimBR,wCvBv6BY,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CuBu6BJ,YAAA,CACA,eAAA,CAIR,2CvB96BY,gEAAA,CAEA,qCAAA,CAAA,yCAAA,CAAA,uCAAA,CAAA,yCAAA,CAAA,+CAAA,CAAA,+CAAA,CAAA,uCAAA,CAAA,6CAAA,CuB86BJ,YAAA,CACA,eAAA,CAKJ,2EACI,eAAA,CCz1BR,sDxB9FY,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CwB+FJ,QAAA,CCpBR,oCzB7EY,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CyBoFR,qCACI,iBAAA,CACA,eAAA,CCiOR,uC1BzTY,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CAmGZ,MACI,6CAAA,CA9EI,uBAAA,CAAA,wBAAA,CAAA,0BAAA,CAAA,yBAAA,CAAA,mCAAA,CAAA,4BAAA,CAAA,2BAAA,CAAA,6BAAA,CAAA,0BAAA,CAAA,wBAAA,CAAA,0BAAA,CAAA,8BAAA,CAAA,mCAAA,CAAA,4BAAA,CAAA,2BAAA,CAAA,8BAAA,CAAA,uBAAA,CAAA,wBAAA,CAAA,0BAAA,CAAA,8BAAA,CAAA,yBAAA,CAAA,4BAAA,CAAA,2BAAA,CAAA,wBAAA,CAAA,2BAAA,CAAA,wBAAA,CAAA,0BAAA,CAAA,2BAAA,CAAA,mCAAA,CAAA,4BAAA,CAAA,2BAAA,CAAA,wBAAA,CAAA,yBAAA,CAAA,wBAAA,CAAA,0BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,4BAAA,CAAA,2BAAA,CAAA,wBAAA,CAAA,0BAAA,CAAA,wBAAA,CAAA,0BAAA,CAAA,2BAAA,CAAA,mCAAA,CAAA,4BAAA,CAAA,qBAAA,CAAA,wBAAA,CAAA,+BAAA,CAAA,gCAAA,CAAA,kCAAA,CAAA,mCAAA,CAAA,2CAAA,CAAA,oCAAA,CAAA,6BAAA,CAAA,gCAAA,CAAA,mCAAA,CAAA,gCAAA,CAAA,kCAAA,CAAA,mCAAA,CAAA,0CAAA,CAAA,oCAAA,CAAA,6BAAA,CAAA,gCAAA,CAAA,2BAAA,CAAA,4BAAA,CAAA,8BAAA,CAAA,gCAAA,CAAA,sCAAA,CAAA,gCAAA,CAAA,+BAAA,CAAA,+BAAA,CAAA,+BAAA,CAAA,4BAAA,CAAA,8BAAA,CAAA,gCAAA,CAAA,uCAAA,CAAA,gCAAA,CAAA,yBAAA,CAAA,4BAAA,CAAA,+BAAA,CAAA,4BAAA,CAAA,8BAAA,CAAA,6BAAA,CAAA,uCAAA,CAAA,qCAAA,CAAA,yBAAA,CAAA,4BAAA,CAAA,+BAAA,CAAA,6BAAA,CAAA,+BAAA,CAAA,8BAAA,CAAA,qCAAA,CAAA,iCAAA,CAAA,0BAAA,CAAA,6BAAA,CAAA,iCAAA,CAAA,8BAAA,CAAA,gCAAA,CAAA,+BAAA,CAAA,wCAAA,CAAA,uCAAA,CAAA,2BAAA,CAAA,8BAAA,CAiBA,kBAzCI,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CAuCJ,kBAzCI,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CAuCJ,kBAzCI,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CAuCJ,kBAzCI,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CAuCJ,kBAzCI,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CAuCJ,kBAzCI,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CAuCJ,iBAzCI,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CAoDR,kCAtDQ,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CAoDR,kCAtDQ,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CAoDR,kCAtDQ,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CAoDR,kCAtDQ,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CAoDR,kCAtDQ,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CAoDR,kCAtDQ,2DAAA,CAEA,gCAAA,CAAA,oCAAA,CAAA,kCAAA,CAAA,oCAAA,CAAA,0CAAA,CAAA,0CAAA,CAAA,kCAAA,CAAA,wCAAA,CAoDR,0CAtDQ,mEAAA,CAEA,wCAAA,CAAA,4CAAA,CAAA,0CAAA,CAAA,4CAAA,CAAA,kDAAA,CAAA,kDAAA,CAAA,0CAAA,CAAA,gDAAA,CAoDR,0CAtDQ,mEAAA,CAEA,wCAAA,CAAA,4CAAA,CAAA,0CAAA,CAAA,4CAAA,CAAA,kDAAA,CAAA,kDAAA,CAAA,0CAAA,CAAA,gDAAA,CAoDR,sCAtDQ,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CAoDR,sCAtDQ,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CAoDR,sCAtDQ,+DAAA,CAEA,oCAAA,CAAA,wCAAA,CAAA,sCAAA,CAAA,wCAAA,CAAA,8CAAA,CAAA,8CAAA,CAAA,sCAAA,CAAA,4CAAA,CAoDR,uCAtDQ,gEAAA,CAEA,qCAAA,CAAA,yCAAA,CAAA,uCAAA,CAAA,yCAAA,CAAA,+CAAA,CAAA,+CAAA,CAAA,uCAAA,CAAA,6CAAA,CAoDR,wCAtDQ,iEAAA,CAEA,sCAAA,CAAA,0CAAA,CAAA,wCAAA,CAAA,0CAAA,CAAA,gDAAA,CAAA,gDAAA,CAAA,wCAAA,CAAA,8CAAA,C2BuBZ,MAhBI,+BAAA,CAJA,wGAAA,CAIA,gCAAA,CAJA,wGAAA,CAIA,gCAAA,CAJA,yGAAA,CAIA,gCAAA,CAJA,yGAAA,CAIA,gCAAA,CAJA,0GAAA,CAjBA,sBAAA,CACA,oBAAA,CACA,mBAAA,CACA,iBAAA,CAkBA,gCAAA,CAJA,mGAAA,CAIA,gCAAA,CAJA,yGAAA,CAIA,gCAAA,CAJA,yGAAA,CAIA,gCAAA,CAJA,wGAAA,CAIA,gCAAA,CAJA,yGAAA,CAIA,iCAAA,CAJA,0GAAA,CAIA,iCAAA,CAJA,0GAAA,CAIA,iCAAA,CAJA,0GAAA,CAIA,iCAAA,CAJA,0GAAA,CAIA,iCAAA,CAJA,gHAAA,CAIA,kCAAA,CAJA,gHAAA,CAIA,kCAAA,CAJA,iHAAA,CAIA,kCAAA,CAJA,iHAAA,CAIA,kCAAA,CAJA,kHAAA,CAjBA,wBAAA,CACA,qBAAA,CACA,qBAAA,CACA,mBAAA,CAkBA,kCAAA,CAJA,2GAAA,CAIA,kCAAA,CAJA,iHAAA,CAIA,kCAAA,CAJA,iHAAA,CAIA,kCAAA,CAJA,gHAAA,CAIA,kCAAA,CAJA,iHAAA,CAIA,mCAAA,CAJA,kHAAA,CAIA,mCAAA,CAJA,kHAAA,CAIA,mCAAA,CAJA,kHAAA,CAIA,mCAAA,CAJA,kHAAA,CAIA,4BAAA,CAJA,qDAAA,CAIA,6BAAA,CAJA,sDAAA,CAIA,6BAAA,CAJA,sDAAA,CAIA,6BAAA,CAJA,sDAAA,CAIA,6BAAA,CAJA,sDAAA,CAjBA,iBAAA,CACA,eAAA,CACA,gBAAA,CACA,cAAA,CAkBA,6BAAA,CAJA,sDAAA,CAIA,6BAAA,CAJA,sDAAA,CAIA,6BAAA,CAJA,sDAAA,CAIA,6BAAA,CAJA,sDAAA,CAIA,6BAAA,CAJA,sDAAA,CAIA,+BAAA,CAJA,wGAAA,CAIA,gCAAA,CAJA,wGAAA,CAIA,gCAAA,CAJA,yGAAA,CAIA,gCAAA,CAJA,yGAAA,CAIA,gCAAA,CAJA,0GAAA,CAjBA,oBAAA,CACA,kBAAA,CACA,oBAAA,CACA,iBAAA,CAkBA,gCAAA,CAJA,mGAAA,CAIA,gCAAA,CAJA,yGAAA,CAIA,gCAAA,CAJA,yGAAA,CAIA,gCAAA,CAJA,wGAAA,CAIA,gCAAA,CAJA,yGAAA,CAIA,iCAAA,CAJA,0GAAA,CAIA,iCAAA,CAJA,0GAAA,CAIA,iCAAA,CAJA,0GAAA,CAIA,iCAAA,CAJA,0GAAA,CAIA,4BAAA,CAJA,4FAAA,CAIA,6BAAA,CAJA,4FAAA,CAIA,6BAAA,CAJA,6FAAA,CAIA,6BAAA,CAJA,6FAAA,CAIA,6BAAA,CAJA,8FAAA,CAjBA,mBAAA,CACA,gBAAA,CACA,gBAAA,CACA,cAAA,CAkBA,6BAAA,CAJA,uFAAA,CAIA,6BAAA,CAJA,6FAAA,CAIA,6BAAA,CAJA,6FAAA,CAIA,6BAAA,CAJA,4FAAA,CAIA,6BAAA,CAJA,6FAAA,CAIA,8BAAA,CAJA,8FAAA,CAIA,8BAAA,CAJA,8FAAA,CAIA,8BAAA,CAJA,8FAAA,CAIA,8BAAA,CAJA,8FAAA,CAIA,+BAAA,CAJA,wGAAA,CAIA,gCAAA,CAJA,wGAAA,CAIA,gCAAA,CAJA,yGAAA,CAIA,gCAAA,CAJA,yGAAA,CAIA,gCAAA,CAJA,0GAAA,CAjBA,sBAAA,CACA,mBAAA,CACA,mBAAA,CACA,iBAAA,CAkBA,gCAAA,CAJA,mGAAA,CAIA,gCAAA,CAJA,yGAAA,CAIA,gCAAA,CAJA,yGAAA,CAIA,gCAAA,CAJA,wGAAA,CAIA,gCAAA,CAJA,yGAAA,CAIA,iCAAA,CAJA,0GAAA,CAIA,iCAAA,CAJA,0GAAA,CAIA,iCAAA,CAJA,0GAAA,CAIA,iCAAA,CAJA,0GAAA,CAIA,4BAAA,CAJA,4FAAA,CAIA,6BAAA,CAJA,4FAAA,CAIA,6BAAA,CAJA,6FAAA,CAIA,6BAAA,CAJA,6FAAA,CAIA,6BAAA,CAJA,8FAAA,CAjBA,kBAAA,CACA,gBAAA,CACA,gBAAA,CACA,cAAA,CAkBA,6BAAA,CAJA,uFAAA,CAIA,6BAAA,CAJA,6FAAA,CAIA,6BAAA,CAJA,6FAAA,CAIA,6BAAA,CAJA,4FAAA,CAIA,6BAAA,CAJA,6FAAA,CAIA,8BAAA,CAJA,8FAAA,CAIA,8BAAA,CAJA,8FAAA,CAIA,8BAAA,CAJA,8FAAA,CAIA,8BAAA,CAJA,8FAAA,CAIA,6BAAA,CAJA,gGAAA,CAIA,8BAAA,CAJA,gGAAA,CAIA,8BAAA,CAJA,iGAAA,CAIA,8BAAA,CAJA,iGAAA,CAIA,8BAAA,CAJA,kGAAA,CAjBA,oBAAA,CACA,kBAAA,CACA,iBAAA,CACA,eAAA,CAkBA,8BAAA,CAJA,2FAAA,CAIA,8BAAA,CAJA,iGAAA,CAIA,8BAAA,CAJA,iGAAA,CAIA,8BAAA,CAJA,gGAAA,CAIA,8BAAA,CAJA,iGAAA,CAIA,+BAAA,CAJA,kGAAA,CAIA,+BAAA,CAJA,kGAAA,CAIA,+BAAA,CAJA,kGAAA,CAIA,+BAAA,CAJA,kGAAA,CCTJ,MAEQ,sBAAA,CAAA,gYAAA,CAAA,gYAAA,CAAA,gYAAA,CAAA,iYAAA,CAAA,iYAAA,CAAA,kYAAA,CAAA,kdAAA,CAAA,kdAAA,CAAA,kdAAA,CAAA,odAAA,CAAA,odAAA,CAAA,odAAA,CAAA,odAAA,CAAA,odAAA,CAAA,odAAA,CAAA,qdAAA,CAAA,qdAAA,CAAA,qdAAA,CAAA,qdAAA,CAAA,sdAAA,CAAA,sdAAA,CAAA,sdAAA,CAAA,sdAAA,CAAA,sdAAA,CCgCJ,MACI,qBAAA,CtCSJ,YA7BI,+DAAA,CuCSR,mBACI,aAAA,CACA,iBAAA,CACA,mEAAA,CACA,uBAAA,CACA,mBAAA,CACA,uBAAA,CACA,uCAAA,CACA,6BAAA,CACA,UAAA,CACA,mBAAA,CACA,sBAAA,CAGJ,YACI,eAAA,CvCKA,WA7BI,0EAAA,CAAA,gEAAA,CAAA,yGAAA,CwCkDR,YACI,iBAAA,CACA,mBAAA,CACA,sBAAA,CACA,kBAAA,CACA,gBAAA,CACA,kBAAA,CACA,4BAAA,CACA,qBAAA,CACA,kCAAA,CACA,kBAAA,CACA,aAAA,CAEA,mBACI,eAAA,CAIA,kEAAA,CAQR,mBACI,UAAA,CACA,WAAA,CACA,qBAAA,CACA,qBAAA,CACA,2BAAA,CACA,0BAAA,CAGJ,qBACI,mCAAA,CAOJ,sBACI,cAAA,CACA,+BAAA,CACA,iCAAA,CAGJ,yCACI,YAAA,CACA,+BAAA,CACA,iCAAA,CAGJ,wCACI,cAAA,CACA,+BAAA,CACA,iCAAA,CAGJ,mBACI,cAAA,CACA,iBAAA,CACA,kBAAA,CAGJ,oBACI,YAAA,CACA,iBAAA,CACA,kBAAA,CAGJ,mBACI,cAAA,CACA,iBAAA,CACA,kBAAA,CxCjGA,iBA7BI,4GAAA,CAAA,gFAAA,CAAA,gEAAA,CAAA,oGAAA,CAAA,mIAAA,CyCqCR,kBACI,YAAA,CACA,kBAAA,CACA,wBAAA,CACA,iBAAA,CACA,UAAA,CACA,WAAA,CACA,mBAAA,CACA,KAAA,CACA,oBAAA,CACA,4BAAA,CACA,aAAA,CACA,gBAAA,CACA,YAAA,CAIA,qFACI,aAAA,CACA,cAAA,CAEA,uGACI,oCAAA,CACA,qCAAA,CACA,wCAAA,CAKZ,wBAEI,cAAA,CAGJ,2BAEI,gBAAA,CAGJ,sEAEI,YAAA,CACA,kBAAA,CACA,sBAAA,CAIA,wFACI,cAAA,CAGJ,oFACI,oCAAA,CACA,qCAAA,CACA,wCAAA,CAGJ,0GACI,0BAAA,CAIA,8JACI,2BAAA,CAKJ,oKACI,yBAAA,CAKZ,qCACI,kDAAA,CAEA,2CACI,kDAAA,CAIR,+BACI,YAAA,CACA,kBAAA,CAGJ,2BACI,mBAAA,CACA,kBAAA,CACA,sBAAA,CACA,kBAAA,CACA,iBAAA,CACA,uBAAA,CACA,0CAAA,CACA,oCAAA,CACA,kBAAA,CAEA,sCACI,mBAAA,CAGJ,oCACI,uBAAA,CAIA,qDACI,uBAAA,CAUR,+CACI,0BAAA,CAEA,6DACI,qBAAA,CAMR,mCACI,0BAAA,CzCzIJ,UA7BI,8DAAA,CAAA,yEAAA,CAAA,yEAAA,CAAA,wFAAA,CAAA,uGAAA,CAAA,gDAAA,CAAA,kHAAA,CAAA,wDAAA,C0C8DR,WACI,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBAfU,CAgBV,eAhBU,CAiBV,kBAdc,CAed,kBAdgB,CAehB,uBAAA,CACA,aAAA,CACA,kCAAA,CACA,kCAAA,CACA,wBAAA,CACA,gCAAA,CACA,gCAAA,CACA,kBAjBU,CAkBV,eAAA,CAEA,oBACI,mBAAA,CACA,sBAAA,CACA,kBAAA,CACA,mCAAA,CACA,oCAAA,CACA,uCAAA,CACA,kBAhCY,CAiCZ,uBAAA,CAIR,kBACI,kBAAA,CACA,cAnCkB,CAsCtB,oBACI,2DAAA,CAGJ,iBACI,qDAAA,CAGJ,oBACI,qDAAA,CAGJ,kBACI,uDAAA,CAGJ,mBACI,iBAAA,C1CrFA,eA7BI,mEAAA,CAAA,yFAAA,CAAA,oGAAA,CAAA,8GAAA,CAAA,6DAAA,CUwCR,uBACI,aAAA,CAEA,6BACI,kBAAA,CAGJ,6BACI,YAAA,CAIR,sBACI,YAAA,CACA,cAAA,CACA,sBAAA,CACA,kBAAA,CACA,oBAAA,CACA,kBAAA,CACA,aAxBU,CAyBV,4BAAA,CACA,eAAA,CACA,SAAA,CAGJ,2BACI,mBAAA,CACA,uBAAA,CACA,wBAAA,CAGJ,8BACI,yBAAA,CACA,iBAAA,CACA,wBAAA,CAGJ,qGACI,YAAA,CACA,iBAAA,CACA,uBAAA,CACA,MAAA,CACA,kBAAA,CACA,sBAAA,CACA,cAhDa,CAiDb,iBAhDa,CAiDb,WAAA,CACA,4BAAA,CACA,cAAA,CACA,gBAAA,CACA,eAAA,CACA,gBArDW,CAsDX,yCAAA,CACA,kBAAA,CAGJ,qCACI,UAAA,CACA,cAAA,CACA,mBAAA,CAGJ,qCACI,8BAAA,CACA,kHAAA,CAGJ,mLVhCA,kBAAA,CACA,sBAAA,CACA,eAAA,CUgCI,0BAAA,CACA,cAAA,CACA,iBAAA,CACA,uBAAA,CACA,iEAAA,CACA,SAAA,CAGJ,gLACI,YAAA,CACA,iBAAA,CACA,sBAAA,CACA,aAAA,CACA,eAAA,CACA,uBAAA,CACA,iEAAA,CACA,SAAA,CAGJ,8DACI,0BAAA,CAGJ,+DACI,0CAAA,CVxGA,mCA7BI,2DAAA,CAAA,2DAAA,CAAA,uEAAA,CAAA,uEAAA,CAAA,uFAAA,CAAA,yEAAA,CAAA,6EAAA,CAAA,yEAAA,CAAA,wGAAA,CAAA,+EAAA,CAAA,2EAAA,CAAA,2EAAA,CAAA,6EAAA,CAAA,uDAAA,CAAA,gGAAA,CAAA,2FAAA,CAAA,4GAAA,CAAA,2FAAA,CAAA,4GAAA,CAAA,2GAAA,CAAA,4HAAA,CAAA,6FAAA,CAAA,8GAAA,CAAA,+GAAA,CAAA,yEAAA,CAAA,qEAAA,CAAA,qEAAA,CAAA,uEAAA,CA6BJ,2CA7BI,2DAAA,CAAA,oGAAA,CAAA,gHAAA,CAAA,gHAAA,CAAA,gIAAA,CAAA,kHAAA,CAAA,4GAAA,CAAA,yEAAA,CAAA,wGAAA,CAAA,+EAAA,CAAA,2EAAA,CAAA,2EAAA,CAAA,6EAAA,CAAA,uDAAA,CAAA,gGAAA,CAAA,2FAAA,CAAA,4GAAA,CAAA,2FAAA,CAAA,4GAAA,CAAA,2GAAA,CAAA,4HAAA,CAAA,6FAAA,CAAA,8GAAA,CAAA,+GAAA,CAAA,yEAAA,CAAA,qEAAA,CAAA,qEAAA,CAAA,uEAAA,CA6BJ,uCA7BI,2DAAA,CAAA,2DAAA,CAAA,uEAAA,CAAA,uEAAA,CAAA,uFAAA,CAAA,yEAAA,CAAA,6EAAA,CAAA,wGAAA,CAAA,wGAAA,CAAA,+EAAA,CAAA,2EAAA,CAAA,2EAAA,CAAA,6EAAA,CAAA,gGAAA,CAAA,4EAAA,CAAA,4GAAA,CAAA,wFAAA,CAAA,4GAAA,CAAA,wFAAA,CAAA,4HAAA,CAAA,wGAAA,CAAA,8GAAA,CAAA,0FAAA,CAAA,+GAAA,CAAA,yEAAA,CAAA,qEAAA,CAAA,qEAAA,CAAA,uEAAA,CA6BJ,iCA7BI,2DAAA,CAAA,2DAAA,CAAA,uEAAA,CAAA,uEAAA,CAAA,uFAAA,CAAA,yEAAA,CAAA,6EAAA,CAAA,wGAAA,CAAA,wGAAA,CAAA,+EAAA,CAAA,4EAAA,CAAA,4EAAA,CAAA,8EAAA,CAAA,gGAAA,CAAA,4EAAA,CAAA,4GAAA,CAAA,wFAAA,CAAA,4GAAA,CAAA,wFAAA,CAAA,4HAAA,CAAA,wGAAA,CAAA,8GAAA,CAAA,0FAAA,CAAA,+GAAA,CAAA,yEAAA,CAAA,sEAAA,CAAA,sEAAA,CAAA,wEAAA,CA6BJ,mCA7BI,2DAAA,CAAA,2DAAA,CAAA,uEAAA,CAAA,sGAAA,CAAA,sHAAA,CAAA,wGAAA,CAAA,6EAAA,CAAA,yEAAA,CAAA,wGAAA,CAAA,+EAAA,CAAA,2EAAA,CAAA,2EAAA,CAAA,6EAAA,CAAA,uDAAA,CAAA,sFAAA,CAAA,mEAAA,CAAA,kGAAA,CAAA,kGAAA,CAAA,kGAAA,CAAA,kHAAA,CAAA,kHAAA,CAAA,oGAAA,CAAA,oGAAA,CAAA,+GAAA,CAAA,yEAAA,CAAA,qEAAA,CAAA,qEAAA,CAAA,uEAAA,CWwbR,YACI,iBAAA,CACA,mBAAA,CACA,kBAAA,CACA,sBAAA,CACA,gBAtQW,CAuQX,qBAAA,CACA,kBAAA,CACA,yCAAA,CACA,cAAA,CACA,gBAAA,CACA,kBAAA,CACA,yCAAA,CACA,eAAA,CACA,kBAAA,CACA,yHAzPgB,CAgQhB,qBACI,YAAA,CACA,sBAAA,CACA,oCAAA,CACA,qCAAA,CACA,wCAAA,CACA,aAAA,CAGJ,gBACI,0BAAA,CAIR,kBACI,mBAAA,CACA,mBAAA,CAEA,sBACI,yBAAA,CAIR,qBACI,qBAAA,CACA,iBAAA,CAEA,yBACI,0BAAA,CA2BR,kBACI,4BAAA,CACA,uBAAA,CACA,kCAAA,CAEA,wBACI,kCAAA,CACA,6BAAA,CACA,sCAAA,CAGJ,wBACI,kCAAA,CACA,6BAAA,CACA,6CAAA,CACA,sCAAA,CAGJ,yBACI,mCAAA,CACA,8BAAA,CACA,6CAAA,CACA,uCAAA,CAGJ,gCACI,0CAAA,CACA,qCAAA,CACA,8CAAA,CAYR,sBACI,4BAAA,CACA,uBAAA,CACA,gCAAA,CACA,kCAAA,CACA,wBAAA,CAMA,4BACI,kCAAA,CACA,6BAAA,CACA,sCAAA,CAGJ,4BACI,kCAAA,CACA,6BAAA,CACA,sCAAA,CAaJ,6BACI,mCAAA,CACA,8BAAA,CACA,uCAAA,CACA,6CAAA,CAGJ,oCACI,0CAAA,CACA,qCAAA,CACA,8CAAA,CAEA,0CACI,kCAAA,CACA,6BAAA,CACA,sCAAA,CAGJ,2CACI,mCAAA,CACA,8BAAA,CACA,uCAAA,CAmCZ,uCACI,sBAAA,CACA,mBAAA,CAEA,2CACI,yBAAA,CAIR,0CACI,wBAAA,CACA,iBAAA,CAEA,8CACI,0BAAA,CAIR,oBACI,uBAAA,CACA,4BAAA,CACA,gCAlSY,CAmSZ,kCAAA,CAEA,0BACI,6BAAA,CACA,kCAAA,CACA,sCAAA,CACA,8BAlSe,CAqSnB,0BACI,6BAAA,CACA,kCAAA,CACA,sCAAA,CAGI,iEAAA,CAMR,2BACI,8BAAA,CACA,mCAAA,CACA,uCAAA,CAGI,kEAAA,CAMR,kCACI,0CAAA,CACA,qCAAA,CACA,8CAAA,CAEA,wCACI,6BAAA,CACA,kCAAA,CACA,sCAAA,CAGJ,yCACI,8BAAA,CACA,mCAAA,CACA,uCAAA,CAmCZ,mCACI,mBAAA,CACA,iBAAA,CACA,kBAAA,CACA,sBAAA,CACA,kBAAA,CACA,YAAA,CACA,cAAA,CACA,yHAxiBgB,CAyiBhB,gBAAA,CACA,yCAAA,CACA,eAAA,CAEA,cAAA,CAGJ,iBACI,qBAAA,CACA,cAAA,CACA,eAAA,CACA,iBAAA,CACA,kBAAA,CACA,uBAAA,CACA,4BAAA,CACA,gCAAA,CACA,gCAlXS,CAmXT,kCAAA,CAOA,uBACI,6BAAA,CACA,kCAAA,CACA,sCAAA,CACA,gCA9XK,CAiYT,uBACI,6BAAA,CACA,kCAAA,CACA,sCAAA,CAGI,iEAAA,CAMR,wBACI,8BAAA,CACA,mCAAA,CACA,uCAAA,CAGI,kEAAA,CAMR,+BACI,0CAAA,CACA,qCAAA,CACA,8CAAA,CAEA,qCACI,6BAAA,CACA,kCAAA,CACA,sCAAA,CAGJ,sCACI,8BAAA,CACA,mCAAA,CACA,uCAAA,CAmCR,qBACI,0BAAA,CAIR,kCACI,sBAAA,CACA,gBAAA,CACA,iBAAA,CAOA,sCACI,yBAAA,CAIR,qCACI,iBAAA,CACA,cAAA,CACA,eAAA,CAOA,yCACI,0BAAA,CAIR,kBACI,aAAA,CACA,cAAA,CACA,eAAA,CACA,gBAAA,CACA,cAvqBoB,CAwqBpB,SAvqBkB,CAwqBlB,uBAAA,CACA,4BAAA,CACA,kCAAA,CACA,gCAAA,CAOA,wBAEQ,yHAvsBQ,CA0sBZ,6BAAA,CACA,kCAAA,CACA,sCAAA,CAGJ,wBACI,6BAAA,CACA,kCAAA,CACA,sCAAA,CAiBJ,yBACI,8BAAA,CACA,mCAAA,CACA,uCAAA,CAGJ,gCACI,qCAAA,CACA,0CAAA,CACA,8CAAA,CAEA,sCACI,6BAAA,CACA,kCAAA,CACA,8CAAA,CAGJ,uCACI,8BAAA,CACA,mCAAA,CACA,8CAAA,CAIR,iDAGQ,iEAAA,CAOZ,mCACI,cAAA,CACA,eAAA,CAGJ,sCACI,YAAA,CACA,aAAA,CAGJ,sBACI,qCAAA,CACA,gCAAA,CACA,yCAAA,CACA,mBAAA,CACA,eAAA,CAEA,4BACI,eAAA,CXx8BJ,gBA7BI,qEAAA,CAAA,2EAAA,CAAA,qGAAA,CAAA,0GAAA,CAAA,sGAAA,CAAA,kHAAA,CAAA,kHAAA,CAAA,wHAAA,CAAA,wHAAA,CAAA,uHAAA,CAAA,4HAAA,CAAA,8GAAA,CAAA,yHAAA,CAAA,gHAAA,CAAA,qHAAA,CAAA,8CAAA,CAAA,+DAAA,C2CyIR,kBACI,YAAA,CACA,wBAAA,CACA,4DATS,CAUT,kCAAA,CAEA,yBAEI,YAAA,CACA,mBAAA,CACA,eAAA,CAIR,wBACI,8CAAA,CACA,4BAAA,CACA,iCAAA,CACA,gBA3BmB,CA4BnB,YAAA,CACA,WAAA,CACA,sBAAA,CACA,kBAAA,CACA,oBAAA,CACA,cAAA,CACA,gBAAA,CACA,iBAAA,CACA,SAAA,CACA,4DAlCS,CAoCT,mCACI,eAAA,CACA,qCAAA,CAQJ,2CACI,8BAAA,CAGJ,sCACI,8CAAA,CACA,4CAAA,CAGJ,qCACI,4CAAA,CACA,0CAAA,CAGJ,kDACI,gCAAA,CACA,2CAAA,CACA,wCAAA,CAGJ,4DAEI,kCAAA,CACA,uCAAA,CAeJ,uEACI,qBAAA,CACA,qBAAA,CAGJ,kEACI,8CAAA,CACA,4CAAA,CACA,yBAAA,CACA,uBAAA,CAGJ,iEACI,2BAAA,CACA,yBAAA,CACA,4CAAA,CACA,0CAAA,CAIR,kCACI,qCAAA,CACA,0CAAA,CACA,8CAAA,CACA,iBAAA,CACA,SAAA,CAEA,gFAEI,qCAAA,CACA,gDAAA,CAGJ,wCACI,SAAA,CASJ,4DACI,iBAAA,CAEA,oEACI,iBAAA,CACA,UAAA,CACA,KAAA,CACA,QAAA,CACA,kBAAA,CACA,oBAAA,CACA,yCAAA,CAKZ,4BACI,gBAAA,CAGJ,gCACI,YAAA,CACA,kBAAA,CACA,oBAAA,CACA,WAAA,CAEA,oCACI,2BA1Ja,CA8JrB,+BACI,UAAA,C3CtNJ,kBAAA,CACA,sBAAA,CACA,eAAA,CAhDI,8DA7BI,0GAAA,CAAA,8FAAA,CAAA,wGAAA,CAAA,wGAAA,CQiCJ,0CACI,SAAA,CAIR,4GAII,YAAA,CAGJ,+CAEI,kBAAA,CAGJ,mDACI,YAAA,CACA,wBAAA,CACA,cAAA,CACA,cAAA,CACA,+BAAA,CACA,wBAAA,CACA,yBAAA,CACA,uBAAA,CACA,mCAAA,CAGJ,0BACI,sBAAA,CACA,YAAA,CACA,gBAAA,CACA,aAAA,CACA,sCAAA,CAGJ,wBACI,4DAAA,CACA,4BAAA,CAGJ,2BACI,0DAAA,CACA,mBAAA,CAGJ,kBACI,iCAAA,CACA,WAAA,CAEA,oBACI,+BAAA,CAIR,kBACI,+BAAA,CACA,wBAAA,CACA,yBAAA,CACA,uBAAA,CAGJ,qBACI,+BAAA,CACA,wBAAA,CACA,yBAAA,CACA,uBAAA,CAGJ,qBACI,kBAAA,CACA,WAAA,CACA,QAAA,CAGJ,wCACI,cAAA,CACA,wBAAA,CACA,kBAAA,CACA,mBAAA,CACA,SAAA,CACA,iBAAA,CRtFA,0DA7BI,8GAAA,CAAA,4FAAA,CAAA,4FAAA,CAAA,gHAAA,CAAA,4FAAA,CAAA,wHAAA,CAAA,wGAAA,CAAA,8HAAA,CAAA,sGAAA,CAAA,4HAAA,CAAA,0GAAA,CAAA,0FAAA,CAAA,4FAAA,CAAA,4HAAA,CAAA,8HAAA,CAAA,0IAAA,CAAA,wHAAA,CAAA,gHAAA,CAAA,iGAAA,CAAA,8HAAA,CAAA,oHAAA,CAAA,oHAAA,CAAA,8IAAA,CAAA,oIAAA,CAAA,oIAAA,CAAA,0GAAA,CAAA,iHAAA,CAAA,iHAAA,CAAA,4HAAA,CAAA,wIAAA,CAAA,wIAAA,CAAA,0HAAA,CAAA,sIAAA,CAAA,iIAAA,CAAA,+EAAA,CAAA,8HAAA,CAAA,8HAAA,CAAA,8GAAA,CAAA,8GAAA,CAAA,kHAAA,CAAA,kHAAA,CAAA,oHAAA,CAAA,oHAAA,CAAA,sGAAA,CAAA,gHAAA,CAAA,iHAAA,CAAA,2HAAA,CAAA,6HAAA,CY+ZR,sCACI,YAAA,CACA,uBAAA,CACA,UAAA,CACA,mBAAA,CACA,oCAAA,CACA,YAAA,CACA,kCAAA,CACA,eAAA,CACA,kCAAA,CA6CJ,wJACI,wBAAA,CAOJ,wBACI,oBAAA,CAEA,8CACI,iBAAA,CAIR,sBACI,mCAAA,CACA,8BAAA,CACA,YArHiB,CA4HrB,2BACI,QA/HqB,CAgIrB,kBAAA,CACA,UAAA,CAOJ,8EACI,YAAA,CACA,QAzIqB,CA2IrB,wFZlbJ,kBAAA,CACA,sBAAA,CACA,eAAA,CYqbA,mDACI,uBAAA,CAGJ,qBACI,YAAA,CACA,aAAA,CACA,kBAAA,CACA,mBAjJiB,CAkJjB,yCAAA,CAMA,iBAAA,CAEA,yBACI,iBAAA,CAGJ,2BACI,YAAA,CAIR,4BACI,YAAA,CACA,sBAAA,CAGJ,sDACI,iBAAA,CACA,mBAAA,CACA,sBAAA,CACA,+BAAA,CACA,gBAAA,CACA,YAAA,CACA,cAAA,CACA,wBAAA,CACA,kBAAA,CACA,KAAA,CAMA,oIAEI,qCAAA,CAGJ,0EACI,oBAAA,CAIR,2BACI,oBAAA,CAGJ,2BACI,kBAAA,CAGJ,2BACI,8BAAA,CACA,iBAAA,CACA,YAAA,CACA,iBAAA,CAEA,kEAEI,oCAAA,CACA,cAAA,CAIR,oBACI,aAAA,CAEI,gBA1Na,CA4NjB,mBA5NiB,CA8NjB,eAAA,CAGJ,gDAGI,+BAAA,CASJ,6DACI,iBAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,+BAAA,CACA,YAAA,CAWA,gBAAA,CATA,uGACI,0BAnNU,CAsNd,oGACI,wBAvNU,CA+Nd,oTAGI,0BAAA,CAIR,wBACI,YAAA,CACA,6BAAA,CACA,gBAxOa,CAyOb,SAAA,CAEA,sCAUQ,eAAA,CAIR,qCAEQ,YAAA,CAKJ,8EACI,6BAhRI,CAiRJ,8BAjRI,CAmRJ,sFACI,YAAA,CAUhB,8BACI,cAAA,CAmBJ,2BACI,SAAA,CACA,QAAA,CAEA,uGACI,UAAA,CAYJ,mIACI,uCAAA,CAKJ,mIACI,uCAAA,CAKJ,gEACI,2CAAA,CAGJ,uEACI,gDAAA,CAKJ,yDACI,oCAAA,CACA,eAlVO,CAmVP,uCAAA,CAKJ,+DACI,0CAAA,CACA,+CAAA,CAEA,sEACI,+CAAA,CAMR,+DACI,0CAAA,CACA,+CAAA,CAEA,sEACI,+CAAA,CAMR,sFACI,6CAAA,CACA,kDAAA,CASJ,4FACI,mDAAA,CAEA,mGACI,wDAAA,CAMR,4FACI,mDAAA,CAEA,mGACI,wDAAA,CAMR,gEACI,2CAAA,CAGJ,uEACI,gDAAA,CAIR,4BACI,iBAAA,CACA,mBAAA,CACA,sBAAA,CACA,kBAAA,CACA,YAlbU,CAmbV,gBAnbU,CAobV,aApbU,CAqbV,uCAAA,CACA,SAAA,CAGA,mCACI,iBAAA,CAAA,UAAA,CACA,sBAAA,CACA,uBAAA,CACA,WAAA,CACA,0BAAA,CACA,qBAAA,CACA,UAAA,CAIR,qBAEQ,aAtcM,CAycV,wBAAA,CAOA,eAAA,CALA,sDAEI,wBAAA,CAWR,6BACI,+BAAA,CAGJ,gKACI,iCAAA,CAGJ,2EAEI,iBAAA,CACA,yCAAA,CACA,eAAA,CACA,mBAAA,CAGJ,iCACI,+BAAA,CACA,cAAA,CAII,gKACI,yCAAA,CAKZ,yCACI,iBAAA,CACA,mDAAA,CACA,cAAA,CAEA,gDACI,YAAA,CAGJ,iDACI,UAAA,CACA,iBAAA,CACA,UAAA,CACA,aAAA,CACA,oBAAA,CACA,QAAA,CACA,mDAAA,CAIR,kCACI,+BAAA,CACA,iBAAA,CAEA,uCACI,YA7gBM,CA8gBN,iBAAA,CACA,wCAAA,CAEA,6FAEI,UAAA,CACA,iBAAA,CACA,UAAA,CACA,wCAAA,CACA,oBAAA,CAGJ,8CACI,QAAA,CACA,cAAA,CAGJ,+CACI,WAAA,CACA,YArgBM,CAsgBN,0BAphBI,CAqhBJ,2BArhBI,CA0hBhB,uDACI,iCAAA,CAGJ,iDACI,QAAA,CACA,aAAA,CACA,mBAAA,CAEA,6EACI,sBAAA,CAGJ,2EACI,oBAAA,CAIR,6BACI,oCAAA,CAUJ,oDACI,kCAAA,CAGJ,8HACI,mCAAA,CACA,eAAA,CAEA,0JACI,wCAAA,CAIR,qBACI,iBAAA,CACA,YAAA,CACA,eA5jBqB,CA6jBrB,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,gBA/jBqB,CAgkBrB,SAAA,CAEA,4BACI,iBAAA,CACA,UAAA,CACA,OAAA,CACA,oBAAA,CACA,kBAAA,CACA,0BAAA,CACA,WAAA,CACA,wBAAA,CACA,wCAAA,CACA,yCAAA,CACA,UAAA,CAIR,8BACI,qCAAA,CAGJ,wEACI,2CAAA,CAGJ,8BACI,cAAA,CACA,gCAAA,CAGJ,+DAIQ,gCAAA,CAKJ,yDACI,yCAAA,CAEI,oCAAA,CAEJ,eAAA,CAIR,8BACI,iBAAA,CACA,0CAAA,CAEA,0DACI,qCAAA,CACA,0CAAA,CAIR,yFACI,mBAAA,CACA,kBAAA,CACA,qCAAA,CAGJ,6GACI,wBAAA,CAEA,wPAEI,wBAAA,CAWR,6IACI,qDAAA,CAEA,oFACI,qCAAA,CACA,mCAAA,CAIR,mFACI,mCAAA,CAEA,qLAEI,mCAAA,CAKJ,iHACI,qCAAA,CAKA,8OACI,qCAAA,CAMR,gTACI,qCAAA,CACA,qDAAA,CAIR,wDACI,iBAAA,CACA,wBAAA,CACA,SAAA,CAEA,+DACI,iBAAA,CACA,UAAA,CACA,SAAA,CACA,KAAA,CACA,sBAAA,CACA,QAAA,CACA,0CAAA,CACA,UAAA,CAIR,uDACI,iBAAA,CACA,wBAAA,CACA,SAAA,CAEA,+DACI,iBAAA,CACA,UAAA,CACA,SAAA,CACA,KAAA,CACA,oBAAA,CACA,QAAA,CACA,0CAAA,CACA,UAAA,CAKJ,wDACI,iBAAA,CAIR,+BACI,4BAAA,CACA,sBAAA,CACA,qBAAA,CACA,oBAAA,CACA,+BAAA,CACA,gBAAA,CACA,0BAAA,CACA,oBAAA,CACA,mBAAA,CACA,gBAAA,CACA,mBAAA,CAEA,qCACI,YAAA,CZzmCJ,SA7BI,6EAAA,CAAA,yEAAA,CAAA,0FAAA,CAAA,kGAAA,CAAA,sGAAA,CAAA,oGAAA,CAAA,oGAAA,CAAA,8EAAA,CAAA,6GAAA,CAAA,uEAAA,CAAA,mEAAA,CauFR,UACI,YAAA,CACA,qBAAA,CACA,gCAAA,CACA,eAAA,CACA,kCAAA,CACA,4BAAA,CACA,0DATe,CAUf,0BAAA,CAMA,gBACI,8BAAA,CAIR,oBACI,eAAA,CACA,0CAAA,CAEA,0BACI,eAAA,CAIR,sBACI,kBAAA,CAGJ,iBACI,YAAA,CACA,aAAA,CACA,kBAAA,CACA,wBAAA,CACA,UAAA,CACA,YA/CmB,CAgDnB,8BAAA,CAEA,uBACI,aAAA,CACA,SAAA,CAIR,2BACI,uBAAA,CAEA,oDACI,iBAAA,CAGJ,uDACI,YAAA,CACA,sBAAA,CACA,gBAAA,CACA,mBAAA,CACA,kBAAA,CAIR,0BACI,YAxE2B,CA2E/B,4BACI,qBAAA,CACA,sBAAA,CAEA,kCACI,YAAA,CAIR,yBACI,YAAA,CACA,uBAAA,CACA,eAAA,CACA,aAAA,CACA,sBAAA,CAEA,+BACI,YAAA,CAIR,2BACI,gCAAA,CAGJ,kBACI,YAjGiB,CAoGrB,kBACI,aAAA,CACA,UAAA,CACA,aAAA,CACA,eA3GmB,CA4GnB,+BAAA,CAGJ,iBACI,aAAA,CACA,eAAA,CACA,aAAA,CAEA,mBACI,UAAA,CACA,WAAA,CACA,gBAAA,CAIR,wBACI,UAAA,CACA,wBAAA,CACA,UAAA,CAGJ,kBACI,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,aAAA,CACA,kBAAA,CACA,aAtImB,CAwInB,0CACI,yBAAA,CAIR,4BACI,qBAAA,CAEA,sCACI,QAAA,CAIR,yBACI,YAAA,CACA,kBAAA,CACA,OAAA,CACA,+BAAA,CACA,wBAAA,CAEA,+BACI,YAAA,CAIR,2BACI,YAAA,CACA,kBAAA,CACA,OAAA,CAEA,iCACI,YAAA,CAIR,0GAEI,4BAAA,CACA,WAAA,CAEA,sHACI,YAAA,CAIR,4GAEI,qBAAA,CAEA,4JACI,qBAAA,CACA,gBAAA,CAIR,qDACI,eAAA,CACA,qBAAA,CAGJ,oDACI,OAAA,CACA,qBAAA,CAGJ,sDACI,OAAA,CACA,wBAAA,CAGJ,+EACI,QAAA,CACA,kBAAA,CAGJ,iFACI,QAAA,CACA,eAAA,CAGJ,0BACI,YAAA,CACA,oBAAA,CAEA,kDACI,yBAAA,CAIR,0FACI,YAAA,CACA,oBAAA,CAEA,gJACI,+BAAA,CAIR,iCACI,sBAAA,CAGJ,+BACI,wBAAA,CbnSA,aA7BI,+EAAA,CAAA,mGAAA,CAAA,qGAAA,CAAA,iHAAA,CAAA,wGAAA,CAAA,oHAAA,CAAA,wHAAA,CAAA,0HAAA,CAAA,2EAAA,CAAA,+GAAA,CAAA,uHAAA,CAAA,6HAAA,CAAA,2GAAA,CAAA,yEAAA,C4ClBA,2BCRJ,GACI,kBAAA,CACA,SAAA,CAGJ,KACI,kBAAA,CACA,SAAA,CAAA,CDCA,4BERJ,GACI,kBAAA,CACA,SAAA,CAGJ,KACI,kBAAA,CACA,SAAA,CAAA,CCkHR,cACI,YAAA,CACA,iBAAA,CACA,sBAAA,CACA,UAAA,CACA,WAAA,CACA,kBAAA,CACA,uBAAA,CAGJ,eACI,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,cAAA,CACA,eAAA,CACA,cAAA,CAEI,mEAAA,CAKJ,kBAAA,CACA,+BAAA,CACA,+BAAA,CACA,mCAAA,CACA,+BAAA,CAGJ,yBACI,4CAAA,CACA,wCAAA,CACA,mBAAA,CACA,eAAA,CAEA,kCACI,kBAAA,CAIR,qBACI,qCAAA,CACA,yCAAA,CAGJ,2EACI,aAxDoB,CAyDpB,iBAAA,CACA,OAAA,CACA,0BAAA,CACA,SAAA,CACA,YAAA,CACA,gBAAA,CAGJ,2BACI,kBAAA,CAGJ,2BACI,oBAAA,CAKA,0EACI,oBAAA,CAIR,wFACI,iBAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,aApFyB,CAqFzB,SApF0B,CAqF1B,eAAA,CACA,UAAA,CACA,sBAAA,CACA,0BAAA,CAEA,sHACI,yBAAA,CAIR,iCACI,QAAA,CAGJ,8BACI,KAAA,CAGJ,qBACI,kBAAA,CAEA,cAAA,CAGJ,oCACI,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,iBAhHwB,CAiHxB,cAAA,CAGJ,aACI,iBAAA,CACA,YAAA,CACA,aAAA,CACA,wBAAA,CAGI,oBA1HiB,CA2HjB,0CAAA,CACA,gCAAA,CACA,UAAA,CAGJ,mEAAA,CACA,wDAAA,CAEA,oBHlNJ,gFAAA,CGsNQ,UAAA,CACA,iBAAA,CAEI,cAAA,CAIJ,qBAAA,CACA,qCAAA,CAGJ,mBACI,SAAA,CAIR,qBAEQ,oBAzJiB,CA0JjB,iDAAA,CAGJ,SAAA,CAEA,4BACI,4CAAA,CH/OR,+EAAA,CGsPA,qBACI,iBAAA,CACA,UAAA,CACA,cAAA,CACA,eAAA,CACA,kBAAA,CACA,kCAAA,CACA,mBAAA,CACA,kBAAA,CAGJ,WACI,iBAAA,CACA,UAAA,CACA,WAAA,CACA,OAAA,CACA,UAAA,CACA,kCAAA,CACA,iBAAA,CAGJ,qBACI,SAAA,CACA,kBAAA,CAGJ,oBACI,SAAA,CACA,kBAAA,CAGJ,eACI,aAAA,CACA,cAAA,CACA,gBAAA,CACA,iBAAA,CACA,mBAAA,C/CxQA,aA7BI,sFAAA,CAAA,oGAAA,CAAA,4FAAA,CAAA,gGAAA,CAAA,qCAAA,CAAA,mHAAA,CgD4CA,qDACI,qCAAA,CAKZ,mDACI,iBAAA,CACA,UAAA,CACA,UAAA,CACA,aAlBU,CAmBV,wBAAA,CAGJ,uEACI,YAvBU,CAwBV,WAAA,CAGJ,kBACI,iBAAA,CACA,YAAA,CACA,WAAA,CACA,sBAAA,CACA,kBAAA,CACA,2BAlCa,CAmCb,sCAAA,CACA,UAAA,CACA,WAAA,CACA,uEAAA,CAEA,0BAEI,QAAA,CAGJ,yBAEI,WAAA,CAGJ,wBACI,4BAAA,CACA,SAAA,CAIR,6BAEI,oCAAA,CACA,kDAAA,CAOJ,4BACI,qBAAA,CACA,WAAA,CAEA,oCAEI,KAAA,CACA,UAAA,CAGJ,mCAEI,KAAA,CACA,SAAA,CAIR,gFACI,8BAAA,CACA,kCAAA,CAGJ,0BACI,SAAA,CACA,kBAAA,CACA,aAAA,CAGJ,sDACI,iBAAA,CACA,UAAA,CACA,aAAA,CAGJ,gOACI,iBAAA,CACA,UAAA,CACA,wBAAA,CAGJ,gMACI,iBAAA,CACA,OAAA,CACA,QAAA,CACA,iDAAA,CACA,mDAAA,CACA,cAAA,CACA,SAAA,CAGJ,mCACI,qDAAA,CAEA,2CAEI,oBAAA,CACA,2BAAA,CACA,mBAAA,CACA,oBAAA,CAIR,iCACI,mBAAA,CACA,kDAAA,CAEA,yCAEI,0BAAA,CACA,2BAAA,CACA,mBAAA,CACA,oBAAA,CAIR,+DACI,0CAAA,CACA,yDAAA,CACA,6CAAA,CACA,yBAAA,CAEA,uEAEI,0BAAA,CACA,2BAAA,CACA,mBAAA,CACA,oBAAA,CAIR,6DACI,0CAAA,CACA,uBAAA,CACA,6CAAA,CACA,2DAAA,CAEA,qEAEI,2BAAA,CACA,0BAAA,CACA,oBAAA,CACA,mBAAA,ChD7KJ,eA7BI,kGAAA,CAAA,wGAAA,CAAA,qOAAA,CAAA,mPAAA,CAAA,uOAAA,CAAA,qPAAA,CAAA,gHAAA,CA6BJ,mBA7BI,sOAAA,CAAA,wOAAA,CA6BJ,iBA7BI,oGAAA,CAAA,wGAAA,CAAA,4EAAA,CAAA,wFAAA,CAAA,kGAAA,CAAA,sGAAA,CAAA,mPAAA,CAAA,qPAAA,CAAA,gGAAA,CAAA,4EAAA,CAAA,oGAAA,CA6BJ,iBA7BI,oGAAA,CAAA,wGAAA,CAAA,4EAAA,CAAA,wFAAA,CAAA,kGAAA,CAAA,sGAAA,CAAA,mPAAA,CAAA,qPAAA,CAAA,gGAAA,CAAA,4EAAA,CAAA,8GAAA,CAAA,kHAAA,CA6BJ,oBA7BI,0OAAA,CAAA,4OAAA,CAAA,wPAAA,CAAA,0PAAA,CAAA,8PAAA,CAAA,gRAAA,CAAA,4PAAA,CAAA,8PAAA,CAAA,0PAAA,CAAA,4PAAA,CAAA,8PAAA,CAAA,gQAAA,CAAA,wPAAA,CAAA,0PAAA,CA6BJ,iBA7BI,oGAAA,CAAA,wGAAA,CAAA,4EAAA,CAAA,wFAAA,CAAA,mPAAA,CAAA,qPAAA,CAAA,sHAAA,CAAA,0HAAA,CAAA,wGAAA,CAAA,4EAAA,CAAA,0FAAA,CA6BJ,mBA7BI,yOAAA,CAAA,uPAAA,CAAA,iFAAA,CAAA,2OAAA,CAAA,yPAAA,CAAA,mFAAA,CAAA,sGAAA,CAAA,4GAAA,CAAA,+PAAA,CAAA,oHAAA,CAAA,gGAAA,CAAA,0GAAA,CAAA,oHAAA,CAAA,oHAAA,CAAA,4GAAA,CAAA,oHAAA,CAAA,0GAAA,CA6BJ,mBA7BI,6GAAA,CA6BJ,cA7BI,oOAAA,CAAA,sOAAA,CAAA,iDAAA,CAAA,mGAAA,CA6BJ,cA7BI,iFAAA,CA6BJ,iBA7BI,uOAAA,CAAA,yOAAA,CA6BJ,gBA7BI,mGAAA,CAAA,yGAAA,CAAA,sOAAA,CAAA,oPAAA,CAAA,wOAAA,CAAA,sPAAA,CAAA,4PAAA,CA6BJ,aA7BI,uFAAA,CAAA,0FAAA,CAAA,0FAAA,CAAA,kGAAA,CAAA,gGAAA,CAAA,sIAAA,CAAA,4GAAA,CAAA,mHAAA,CAAA,6HAAA,C4ClBA,wBKgbJ,IACI,oBAAA,CACA,wBAAA,CAGJ,KACI,kBAAA,CACA,wBAAA,CAAA,CnClTR,cACI,iBAAA,CACA,mBAAA,CACA,oBAAA,CACA,kBAAA,CACA,kBAAA,CAGJ,wBACI,gBAAA,CACA,mBAAA,CACA,cAAA,CAGJ,qBdzCA,iBAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,WAAA,CACA,qBAAA,CACA,SAAA,CACA,mBAAA,CACA,eAAA,CACA,eAAA,CcoCA,iCACI,kBAAA,CACA,sBAAA,CACA,YAAA,CACA,iBAAA,CACA,aAzEG,CA0EH,cA1EG,CA6EP,yBACI,iBAAA,CACA,oBAAA,CACA,cAAA,CACA,aAjFG,CAkFH,cAlFG,CAmFH,iBAnFG,CAoFH,oBAAA,CACA,kBAAA,CACA,+BAAA,CACA,kCAAA,CACA,yCAAA,CACA,gEAAA,CACA,eAAA,CAEA,gCACI,iBAAA,CACA,UAAA,CACA,OAAA,CACA,8DAAA,CAIR,sGACI,8BAAA,CACA,4BAAA,CAEA,oHACI,4BAAA,CAIR,iDACI,kCAAA,CACA,wBAAA,CAOJ,oJACI,gCAAA,CAEA,kKACI,gCAAA,CAQR,8BACI,iBAAA,CACA,OAAA,CACA,wBAAA,CACA,qBAAA,CACA,cAhHU,CAiHV,mBAnGU,CAoGV,oBApGU,CAqGV,SAAA,CACA,SAAA,CACA,SAAA,CACA,2DAAA,CAIA,2DACI,KApHM,CAqHN,oBArHM,CAyHN,qRACI,0CAAA,CAEA,0SACI,8CAAA,CA6ChB,qDACI,mBAAA,CACA,SAAA,CACA,wGAAA,CAGJ,2DACI,oBAAA,CACA,SAAA,CACA,4CAAA,CAGJ,kDACI,oBAAA,CACA,wBAAA,CACA,cAAA,CACA,gBAAA,CACA,mBAAA,CAEA,8DACI,QAAA,CAMJ,8DACI,QAAA,CAIR,qBACI,yBAnNW,CAsNf,6BACI,uBAvNW,CAwNX,QAAA,CAGJ,kGACI,iCAAA,CAGJ,sBAGI,aAzOa,CA0Ob,iBAAA,CACA,sBAAA,CACA,+CAAA,CACA,UAnNU,CAoNV,WApNU,CAqNV,yCAAA,CACA,eAAA,CACA,mBAAA,CACA,iBAAA,CdhSA,wDAjCI,mDAAA,CuCSR,yCACI,aAAA,CACA,iBAAA,CACA,mEAAA,CACA,uBAAA,CACA,mBAAA,CACA,uBAAA,CACA,uCAAA,CACA,6BAAA,CACA,UAAA,CACA,mBAAA,CACA,sBAAA,CAGJ,kCACI,eAAA,CvCSA,wDAjCI,mDAAA,Cc6WR,yLACI,6BAAA,CACA,8DAAA,CACA,WAAA,CAGJ,4IACI,4BAAA,CAIA,yVACI,iBAAA,CACA,UAAA,CACA,WAAA,CACA,OAAA,CAKJ,mGACI,6BAAA,CAKJ,sPACI,4BAAA,CAKJ,8KACI,WAAA,CAKJ,sJAII,eAAA,Cd1XJ,2EA7BI,yEAAA,CAAA,sEAAA,CAAA,uEAAA,CAAA,yFAAA,CAAA,gHAAA,CAAA,oFAAA,CAAA,wEAAA,CAAA,yDAAA,CAAA,gGAAA,CAAA,gGAAA,CAAA,oFAAA,CAAA,qEAAA,CAAA,gGAAA,CAAA,oFAAA,CAAA,qEAAA,CAAA,sGAAA,CAAA,0FAAA,CAAA,2EAAA,CAAA,kHAAA,CAAA,sGAAA,CAAA,uFAAA,CAAA,kHAAA,CAAA,sGAAA,CAAA,uFAAA,CAAA,uGAAA,CAAA,mEAAA,CekQR,eACI,YAAA,CACA,kBAAA,CACA,0BAAA,CACA,cAAA,CACA,UAAA,CAEA,qBACI,YAAA,CAIR,UAGI,iBAAA,CACA,mBAAA,CACA,aAAA,CACA,4DAxES,CAyET,4BAAA,CAMA,iBAAA,CAJA,oBACI,6BAAA,CAKJ,gBACI,kBAAA,CA4CJ,oCACI,cAAA,CACA,mBAAA,CAKJ,mBACI,oCAAA,CACA,qCAAA,CACA,wCAAA,CACA,kBAAA,CAKJ,yBACI,oCAAA,CACA,qCAAA,CACA,wCAAA,CACA,kBAAA,CAKJ,+DACI,gCAAA,CACA,iCAAA,CACA,oCAAA,CACA,kBAAA,CAIR,sFfhSA,kBAAA,CACA,sBAAA,CACA,eAAA,CeiSI,oBAAA,CACA,qBAAA,CACA,cAnKa,CAqKb,0HACI,aAAA,CAKJ,mNAGI,0BAAA,CAKJ,oIAEI,0BAAA,CAEA,gLACI,eAAA,CACA,cAAA,CACA,gCAAA,CAKZ,mBfjUA,kBAAA,CACA,sBAAA,CACA,eAAA,CeiUI,eAAA,CACA,cAlMa,CAoMb,yBACI,YAAA,CAIR,mCACI,gBAAA,CAGJ,sCACI,iBAAA,CAGJ,kBACI,mBAAA,CACA,wBAAA,CACA,4CAAA,CAEA,wBACI,YAAA,CAKJ,wBACI,kBAAA,CAEA,iCACI,kBAAA,CACA,oCAAA,CAKJ,iCACI,kBAAA,CAKZ,4CACI,mBAAA,CACA,kBAAA,CACA,cAAA,CACA,SAAA,CACA,SAAA,CACA,8GAAA,CAEA,gDACI,wBAAA,CAGJ,sIAEI,0BAAA,CAIR,0BACI,OAAA,CACA,SAAA,CACA,UAAA,CAEA,2EAEI,qBAAA,CAIR,gBACI,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,aAAA,CACA,WAAA,CACA,gBAzOgB,CA0OhB,uBAAA,CACA,4BAAA,CACA,qBAAA,CACA,kBAAA,CACA,gCAAA,CACA,kCAAA,CACA,gBAAA,CACA,eAAA,CACA,cAAA,CAGA,iBAAA,CAGJ,gCACI,6BAAA,CACA,kCAAA,CACA,sCAAA,CACA,4BAAA,CAGJ,gCACI,6BAAA,CACA,kCAAA,CACA,sCAAA,CACA,kBAAA,CAQJ,0BACI,gCAAA,CACA,qCAAA,CACA,yCAAA,CAGJ,0CACI,sCAAA,CACA,2CAAA,CACA,+CAAA,CACA,4DA5TS,CA+Tb,0CACI,sCAAA,CACA,2CAAA,CACA,+CAAA,CACA,4DAnUS,CA0Ub,gCACI,aAAA,CACA,gBAAA,CAGJ,mCACI,eAAA,CACA,iBAAA,CAGJ,iBACI,iBAAA,CACA,8BAAA,CACA,eAAA,CACA,6BAAA,CACA,kCAAA,CAEA,8CAEI,kCAAA,CAIR,uBACI,aAAA,CAEA,0CACI,gBAAA,CAIR,0BAEI,eAAA,CAEA,6CACI,iBAAA,CAMR,kEAGI,UAAA,CftiBA,mBA7BI,gHAAA,CAAA,sGAAA,CgBsBR,oBACI,YAAA,CACA,uBAAA,CACA,kCAAA,CACA,gCAAA,CACA,UAAA,CACA,aAAA,CACA,kBAAA,CAGJ,kCACI,wBAAA,CACA,QAAA,CACA,uBAAA,CAGJ,kCACI,yBAAA,CACA,2BAAA,CACA,kBAAA,CAGJ,6BACI,YAAA,CACA,uBAAA,CACA,eAAA,CACA,kBAAA,CAGJ,kCACI,mBAAA,CACA,eAAA,CAGJ,6BACI,YAAA,CACA,wBAAA,CACA,kBAAA,ChB9BA,UA7BI,iHAAA,CAAA,2HAAA,CAAA,yHAAA,CkDYR,WACI,iBAAA,CACA,aAAA,CAGJ,qBACI,uBAAA,CAGJ,sBACI,iBAAA,CACA,UAAA,CAEA,qCACI,UAAA,CAIR,mBACI,kBAAA,CACA,mBAAA,CACA,UAAA,CACA,kEAAA,CAGJ,oBACI,iBAAA,CACA,eAAA,CAEA,0BACI,qBAAA,CAIR,gBACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,iBAAA,CACA,YAAA,CACA,uCAAA,CAGJ,kBACI,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,UAAA,CACA,yCAAA,CACA,gBAAA,CACA,kBAAA,CAKA,yCACI,qBAAA,CACA,oBAAA,CAEA,+CACI,mCAAA,CAKJ,wDACI,mCAAA,ClDlDR,iBA7BI,8GAAA,CAAA,4FAAA,CAAA,4FAAA,CAAA,gHAAA,CAAA,4FAAA,CAAA,wHAAA,CAAA,wGAAA,CAAA,8HAAA,CAAA,sGAAA,CAAA,4HAAA,CAAA,0GAAA,CAAA,0FAAA,CAAA,4FAAA,CAAA,4HAAA,CAAA,8HAAA,CAAA,0IAAA,CAAA,wHAAA,CAAA,gHAAA,CAAA,iGAAA,CAAA,8HAAA,CAAA,oHAAA,CAAA,oHAAA,CAAA,8IAAA,CAAA,oIAAA,CAAA,oIAAA,CAAA,0GAAA,CAAA,iHAAA,CAAA,iHAAA,CAAA,4HAAA,CAAA,wIAAA,CAAA,wIAAA,CAAA,0HAAA,CAAA,sIAAA,CAAA,iIAAA,CAAA,+EAAA,CAAA,8HAAA,CAAA,8HAAA,CAAA,8GAAA,CAAA,8GAAA,CAAA,kHAAA,CAAA,kHAAA,CAAA,oHAAA,CAAA,oHAAA,CAAA,sGAAA,CAAA,gHAAA,CAAA,iHAAA,CAAA,2HAAA,CAAA,6HAAA,CmDpBR,iBACI,iCAAA,CACA,qGAAA,CACA,oCAAA,CACA,eAAA,CAEA,wEACI,oCAAA,CAGJ,uCACI,mCAAA,CACA,8BAAA,CAGJ,wFACI,+BAAA,CAEA,oGACI,qCAAA,CAIR,4CACI,8BAAA,CAEA,oGAEI,oCAAA,CAIR,gHACI,+BAAA,CACA,gBAAA,CAUJ,sCACI,wBAAA,CAEA,wFAEI,wBAAA,CAIR,8CACI,+BAAA,CAGJ,8CACI,oCAAA,CACA,yCAAA,CAGJ,+CACI,qCAAA,CAGJ,8CACI,oCAAA,CAUJ,sFACI,kCAAA,CAGJ,kMACI,mCAAA,CAGJ,+CACI,qCAAA,CAGJ,+CACI,gCAAA,CAEA,qDACI,gCAAA,CAIR,+CACI,qCAAA,CAGJ,8CACI,oCAAA,CAIR,2BACI,eAAA,CAGJ,2BACI,YAAA,CACA,UAAA,CACA,qBAAA,CACA,gCAAA,CAGJ,0BACI,YAAA,CACA,wBAAA,CACA,aAAA,CnDvEA,eA7BI,4FAAA,CoDMR,oFACI,YAAA,CAEA,+GACI,cAAA,CAGJ,oIACI,MAAA,CAIR,kGAII,WAAA,CAGJ,8BACI,YAAA,CACA,kBAAA,CACA,wBAAA,CACA,cAAA,CACA,gBAAA,CAIA,2DACI,2BAAA,CAKJ,8DACI,2BAAA,CAIR,+BACI,YAAA,CACA,wBAAA,CACA,wBAAA,CAEA,iCACI,uBAAA,CAEA,8CACI,mBAAA,CAIR,qCACI,YAAA,CpD9BJ,YA7BI,gEAAA,CAAA,4FAAA,CAAA,wFAAA,CAAA,4FAAA,CAAA,2DAAA,CAAA,+GAAA,CAAA,0DAAA,CiB+ER,YACI,kBAAA,CAGJ,oBACI,YAAA,CAGJ,oBACI,iBAAA,CACA,iBArCe,CAsCf,yCAAA,CACA,kCAAA,CACA,4BAAA,CACA,wBAAA,CACA,eAAA,CAEA,kCACI,eAAA,CAGJ,4CACI,eAAA,CAIR,0BACI,YAAA,CACA,wBAAA,CACA,mCAlDmB,CAyDvB,4BACI,0BAAA,CACA,qBApDqB,CAsDrB,iBAAA,CACA,SAAA,CAGJ,4BACI,oBAAA,CACA,cAAA,CAEA,yCAJJ,4BAMQ,cAAA,CAAA,CASR,4BACI,YAAA,CACA,oBAAA,CACA,wBAAA,CACA,aAtEqB,CA4ErB,0CACI,yBAAA,CjBxHJ,YA7BI,6EAAA,CqDMR,aACI,aAAA,CACA,eAAA,CACA,uBAAA,CAGJ,qBACI,uEAAA,CACA,gCAAA,CAGJ,uBACI,oBAAA,CACA,cAAA,CACA,kBAAA,CACA,WAAA,CAGJ,2CACI,wEAAA,CACA,gCAAA,CrDGA,gBA7BI,yGAAA,CAAA,2GAAA,CAAA,yGAAA,CAAA,iGAAA,CAAA,iHAAA,CAAA,wGAAA,CAAA,6GAAA,CAAA,qIAAA,CAAA,oGAAA,CAAA,qHAAA,CAAA,iHAAA,CAAA,mHAAA,CAAA,+HAAA,CAAA,uHAAA,CAAA,0HAAA,CAAA,iHAAA,CAAA,2HAAA,CAAA,+FAAA,CA6BJ,WA7BI,wFAAA,CAAA,sGAAA,CAAA,oGAAA,CAAA,0EAAA,CAAA,wEAAA,CAAA,0GAAA,CAAA,wHAAA,CAAA,0GAAA,CsDYR,wBACI,wBAAA,CAGJ,8BACI,gDAAA,CAGJ,0EAEI,iCAAA,CAGJ,qBACI,wDAAA,CACA,sDAAA,CACA,mDAAA,CACA,oCAAA,CAAA,gDtD7BI,kEAAA,CAAA,2GAAA,CAAA,iHAAA,CAAA,mGAAA,CAAA,+GAAA,CAAA,kGAAA,CAAA,sGAAA,CAAA,mHAAA,CAAA,+HAAA,CAAA,2GAAA,CAAA,2IAAA,CAAA,uHAAA,CAAA,2IAAA,CAAA,uHAAA,CAAA,qGAAA,CAAA,qHAAA,CAAA,6FAAA,CAAA,oDAAA,CAAA,kHAAA,CAAA,sHAAA,CAAA,4DAAA,CmBqMR,eACI,iBAAA,CAGJ,qBACI,eAAA,CACA,kCAAA,CACA,kCAAA,CACA,wBAAA,CACA,cAAA,CACA,oDAAA,CAGJ,4BACI,eAAA,CACA,iBAAA,CACA,gCAAA,CACA,iBAAA,CAEA,4CACI,2BAAA,CAIR,wEAEI,YAAA,CACA,0BAAA,CACA,kBAAA,CACA,UAAA,CACA,kBAAA,CACA,aAAA,CACA,iBAAA,CAYA,4GACI,iBAAA,CACA,UAAA,CACA,oBAAA,CACA,QAAA,CAIR,qBACI,4BAAA,CACA,cAAA,CACA,gBAAA,CACA,uCAAA,CAEA,2BACI,SAAA,CACA,2BAAA,CACA,yCAAA,CACA,oCAAA,CAGJ,2BACI,uCAAA,CACA,kCAAA,CAIR,wBACI,YAAA,CACA,UAAA,CACA,kBAAA,CAGJ,sBACI,aAAA,CnBxMJ,kBAAA,CACA,sBAAA,CACA,eAAA,CmBwMI,sBAAA,CAGJ,2BACI,WAAA,CACA,iBAAA,CAaJ,8BACI,cAAA,CACA,cAAA,CAaJ,qNACI,yBAAA,CAIA,ojBAEI,yBAAA,CAIR,8JACI,sBAAA,CAIA,wZAEI,2BAAA,CAIR,0KACI,wBAAA,CAIA,gbAEI,0BAAA,CAIR,mDACI,8BAAA,CACA,mBAAA,CACA,cAAA,CAGJ,6BACI,WAAA,CACA,gBAAA,CAaJ,gCACI,cAAA,CACA,eAAA,CAaJ,sBACI,mBAAA,CAMA,2CACI,oBAAA,CAIR,8BACI,yCAAA,CACA,oCAAA,CAEA,oCACI,oCAAA,CACA,yCAAA,CAIR,+BACI,0CAAA,CACA,qCAAA,CAEA,qCACI,gDAAA,CACA,2CAAA,CAIR,4DACI,gDAAA,CACA,2CAAA,CAGJ,+DACI,0CAAA,CACA,qCAAA,CACA,cAAA,CACA,mBAAA,CAEA,2EACI,0CAAA,CnB1YJ,oBA7BI,mHAAA,CAAA,+GAAA,CAAA,yHAAA,CAAA,+GAAA,CAAA,2HAAA,CAAA,6GAAA,CAAA,+FAAA,CAAA,uGAAA,CAAA,qEAAA,CAAA,+DAAA,CoByDR,qBACI,YAAA,CACA,qBAAA,CACA,qGAAA,CACA,eAAA,CACA,4DAAA,CAGJ,mCACI,+BAAA,CACA,sBAAA,CAGJ,yCACI,qCAAA,CAGJ,4EAEI,sBAAA,CACA,eAAA,CACA,kBAAA,CAGJ,eACI,eAAA,CAEA,kDpBxBJ,0BAAA,CACA,oBAAA,CACA,2BAAA,CACA,eAAA,CoBwBQ,mBAAA,CACA,oBAAA,CAGJ,8CACI,+BAAA,CAEA,4DACI,YAAA,CAGJ,2DACI,eAAA,CAKZ,mCACI,YAAA,CACA,kBAAA,CACA,mBApDY,CAqDZ,cAAA,CACA,mCAAA,CAEA,mFAGI,yCAAA,CACA,qBAAA,CAIR,oCACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,WAAA,CACA,eAAA,CAGJ,uCACI,OAAA,CACA,wBAAA,CAGJ,yCACI,QAAA,CACA,sBAAA,CAGJ,wCACI,YAAA,CAGJ,gFAEI,YAAA,CACA,oBAAA,CACA,sBAAA,CACA,gBAAA,CAEA,8BAAA,CAEA,kGACI,8BAAA,CAIR,2BACI,uBAAA,CACA,iCAAA,CACA,eAAA,CACA,mBAxGY,CA2GhB,+BACI,mBAAA,CAEA,0IAEI,2BAAA,CAKA,gKACI,2BAAA,CpBhJR,sJA7BI,uEAAA,CAAA,uEAAA,CAAA,8FAAA,CAAA,wGAAA,CAAA,wGAAA,CAAA,wGAAA,CAAA,wGAAA,CAAA,wHAAA,CAAA,kGAAA,CAAA,qFAAA,CAAA,8HAAA,CAAA,0GAAA,CAAA,0IAAA,CAAA,0HAAA,CAAA,+DAAA,CAAA,iEAAA,CAAA,0FAAA,CAAA,6GAAA,CAAA,8GAAA,CAAA,8GAAA,CAAA,sHAAA,CAAA,wHAAA,CAAA,oIAAA,CAAA,sIAAA,CAAA,mEAAA,CAAA,mGAAA,CAAA,oGAAA,CAAA,mGAAA,CAAA,qGAAA,CAAA,iEAAA,CAAA,mEAAA,CAAA,uHAAA,CAAA,oJAAA,CAAA,mGAAA,CAAA,wIAAA,CAAA,oHAAA,CAAA,oIAAA,CAAA,gHAAA,CAAA,wGAAA,CAAA,yFAAA,CAAA,oFAAA,CAAA,+DAAA,CAAA,iEAAA,CAAA,sGAAA,CAAA,0HAAA,CAAA,gHAAA,CAAA,sJAAA,CAAA,iGAAA,CAAA,6GAAA,CAAA,wGAAA,CAAA,wGAAA,CAAA,yDAAA,CAAA,8GAAA,CAAA,sGAAA,CAAA,4GAAA,CAAA,kHAAA,CAAA,8HAAA,CAAA,sGAAA,CAAA,gGAAA,CAAA,0GAAA,CAAA,sHAAA,CAAA,kGAAA,CAAA,oHAAA,CAAA,gHAAA,CAAA,kIAAA,CAAA,4GAAA,CAAA,4GAAA,CAAA,wGAAA,CAAA,0HAAA,CAAA,qHAAA,CAAA,sHAAA,CAAA,+GAAA,CAAA,gHAAA,CAAA,gHAAA,CAAA,kHAAA,CAAA,mGAAA,CAAA,kHAAA,CAAA,mGAAA,CAAA,oGAAA,CAAA,6GAAA,CAAA,4FAAA,CAAA,2HAAA,CAAA,iEAAA,CAAA,iEAAA,C4ClBA,+BCwBJ,GACI,mBAAA,CACA,SAAA,CAGJ,KACI,mBAAA,CACA,SAAA,CAAA,CUkoBR,qFACI,SAAA,CAGJ,6CACI,8BAAA,CAEA,iBAAA,CACA,YAAA,CACA,+CAAA,CACA,0BAAA,CACA,eAAA,CACA,6BAzHU,CA+HV,kBAAA,CACA,SAAA,CAEA,uFACI,iBA3IG,CA+IX,gBACI,4BAAA,CAGJ,mBACI,+BAAA,CAGJ,mBACI,YAAA,CACA,kBAAA,CACA,iBAhJc,CAiJd,gBAhJc,CAiJd,mBAhJmB,CAiJnB,UAAA,CAGJ,0CAEI,iBAAA,CACA,YAAA,CACA,mCAAA,CACA,8BAAA,CACA,eAAA,CACA,kBAAA,CAEA,sEACI,iBAAA,CACA,kBAAA,CACA,aAAA,CACA,SAAA,CAEA,kFACI,kBAAA,CACA,aAAA,CAIR,0FACI,kBAAA,CAIR,yBACI,8FAlKiB,CAwKjB,SAAA,CAEA,wDACI,sBAAA,CACA,oBAAA,CAGJ,uCACI,kBAAA,CAIR,gBACI,UAAA,CACA,YAAA,CACA,eAAA,CAEA,0CACI,cAAA,CAIA,uQAII,8FAAA,CAMR,4LACI,sBAAA,CACA,mBAAA,CAKJ,wMACI,sBAAA,CACA,mBAAA,CAIR,uBACI,0BAAA,CACA,6BAAA,CACA,8FAxNiB,CAyNjB,eAAA,CAGJ,oCACI,6GAAA,CAGJ,6CACI,aAAA,CACA,cAAA,CAGJ,gDACI,WAAA,CACA,gBAAA,CAGJ,uBACI,YAAA,CACA,oBAAA,CAUJ,sBACI,YAAA,CACA,uBAAA,CAEA,6CACI,aAAA,CAGJ,gFACI,aAAA,CAGJ,6CACI,aAAA,CAIR,gDAEI,iBAAA,CAGJ,iBACI,UAAA,CACA,2FA9QiB,CA+QjB,aAAA,CAGJ,kBACI,UAAA,CAGJ,+CACI,UAAA,CACA,gBAAA,CAGJ,gIACI,UAAA,CACA,gBAAA,CAGJ,qBACI,YAAA,CACA,kBAAA,CACA,iBAAA,CAEA,2CACI,YAAA,CAGJ,8EACI,kBAAA,CACA,WAAA,CACA,8FA5Sa,CA+SjB,iHACI,wDAAA,CACA,oDAAA,CAKJ,gCACI,iCAAA,CAGJ,uIAGI,oDAAA,CAIR,yBACI,iBAAA,CACA,oCAAA,CACA,+BAAA,CACA,eAAA,CACA,SAAA,CACA,kBAAA,CAGJ,iBACI,iBAAA,CACA,YAAA,CACA,UAAA,CACA,eAAA,CAGJ,yBACI,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,WAAA,CACA,+BAAA,CACA,qBAAA,CACA,cAAA,CAGJ,mBACI,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,WAAA,CACA,kBAAA,CAEA,qCACI,cAAA,CACA,eAAA,CAIR,kBACI,UAAA,CACA,YAAA,CACA,oBAAA,CACA,UAAA,CACA,mCAAA,CACA,aAAA,CAGJ,uBACI,mCAAA,CACA,6DAAA,CAGJ,uBACI,iBAAA,CACA,KAAA,CACA,kBAAA,CACA,mCAAA,CACA,6DAAA,CAGJ,2BACI,oCAAA,CACA,0DAAA,CACA,iBAAA,CAGJ,iCACI,mCAAA,CAGJ,gCACI,iBAAA,CAGJ,+BACI,mCAAA,CAGJ,wBACI,mCAAA,CAIA,6CACI,QAAA,CAGJ,qDACI,WAAA,CAIR,cACI,YAAA,CACA,oCAAA,CACA,oDAAA,CACA,kBAAA,CACA,iBAAA,CACA,sCAAA,CAEA,oBACI,sCAAA,CACA,iCAAA,CAEA,mDACI,0CAAA,CACA,+CAAA,CAGJ,0EACI,4CAAA,CACA,iDAAA,CAIR,kCAOI,sCAAA,CACA,2BAAA,CACA,SAAA,CvDh9BJ,iFAjCI,iHAAA,CAAA,sDAAA,CuDq/BR,0BACI,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,gBAAA,CACA,aAAA,CAEA,+BAAA,CACA,kBAAA,CACA,SAAA,CACA,WAAA,CACA,8CAAA,CACA,0BAAA,CAEA,mCACI,kCAAA,CACA,mCAAA,CACA,sCAAA,CAIR,0CACI,cAAA,CAEA,6BAAA,CAGJ,6CACI,gBAAA,CAEA,gCAAA,CAGJ,kCACI,kGApeiB,CAuerB,+BACI,2BAAA,CAGJ,oBACI,UAAA,CAGJ,mBACI,oCAAA,CACA,+BAAA,CAGJ,oBACI,qCAAA,CACA,gCAAA,CAGJ,wBACI,kBAAA,CAGJ,sBACI,iBAAA,CACA,kBAAA,CACA,aAAA,CAEA,8DACI,2DAAA,CAIR,0BACI,yGAAA,CAGJ,6BACI,sGAAA,CACA,iBAAA,CACA,QAAA,CAGJ,yCACI,sBAAA,CAIA,6BACI,oCAAA,CACA,qCAAA,CACA,wCAAA,CAGJ,qCACI,gDAAA,CAKJ,4CACI,gDAAA,CAIR,oBACI,mDAAA,CACA,iBAAA,CAEA,2BACI,UAAA,CACA,iBAAA,CACA,eAAA,CACA,UAAA,CACA,cAAA,CACA,oBAAA,CACA,iCAAA,CAGJ,iCACI,mDAAA,CAGJ,2CACI,WAAA,CAEA,4LACI,6CAAA,CAIA,kOACI,sBAAA,CAIR,oEACI,4CAAA,CAIR,yCACI,gCAAA,CAEA,kDACI,gCAAA,CAKZ,qBACI,YAAA,CACA,kBAAA,CAGJ,sBACI,YAAA,CACA,kBAAA,CAGJ,2BXtoCA,0EAAA,CW2oCI,2DACI,KAAA,CACA,SAAA,CAKJ,8BACI,UAAA,CACA,iBAAA,CACA,aAAA,CACA,WAAA,CACA,aAAA,CACA,sCAAA,CAIR,qBACI,iBAAA,CACA,8CAAA,CAIA,2CACI,qCAAA,CAGJ,2DACI,qCAAA,CAEA,iEACI,qCAAA,CAKJ,mEACI,mDAAA,CAGJ,mFACI,mDAAA,CAEA,yFACI,mDAAA,CAOZ,kEACI,kDAAA,CAGJ,kFACI,kDAAA,CAEA,wFACI,kDAAA,CAKJ,0FACI,mDAAA,CAGJ,0GACI,mDAAA,CAEA,gHACI,mDAAA,CAMhB,mCACI,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,gBAAA,CACA,kBAAA,CACA,uBAAA,CACA,cAAA,CAEA,8BAAA,CAEA,yCACI,oCAAA,CAGJ,6CACI,oBAAA,CAIR,kCACI,YAAA,CACA,aAAA,CACA,uBAAA,CAEA,2DACI,+BAAA,CAGJ,oDACI,YAAA,CACA,aAAA,CAIR,kDACI,iBAAA,CACA,YAAA,CACA,WAAA,CACA,kBAAA,CACA,kBAAA,CACA,gBAAA,CACA,kBAhuBW,CAiuBX,gBAhuBW,CAiuBX,aAAA,CACA,gBAAA,CACA,qCAAA,CAYJ,mBvDntCA,kBAAA,CACA,sBAAA,CACA,eAAA,CuDqtCA,8BACI,cAAA,CAGJ,iCACI,gBAAA,CAGJ,mCACI,WAAA,CACA,kBAAA,CAGJ,4NACI,+DAAA,CAEA,k/BAEI,uDAAA,CACA,mDAAA,CAIR,uBACI,oCAAA,CAEA,gCACI,wBAAA,CACA,kDAAA,CACA,oCAAA,CACA,qCAAA,CACA,wCAAA,CAGJ,0CACI,UAAA,CAKI,oEACI,sBAAA,CAMhB,qBACI,0FAAA,CAGJ,qEAEI,qCAAA,CACA,0CAAA,CAKI,iEACI,qCAAA,CAKZ,wBACI,oCAAA,CACA,yCAAA,CAEA,gDAEI,4CAAA,CACA,iDAAA,CAGJ,8BACI,+CAAA,CACA,0CAAA,CAEA,6DACI,0CAAA,CACA,+CAAA,CAIR,2DACI,oCAAA,CAEA,iEACI,oCAAA,CAKZ,+BACI,oCAAA,CACA,yCAAA,CAGJ,sDACI,4CAAA,CACA,iDAAA,CAGJ,mBACI,2BAAA,CAIA,yCACI,iBAAA,CACA,oCAAA,CACA,kBAAA,CAKJ,0CACI,iBAAA,CACA,kDAAA,CACA,4BAAA,CAKJ,2CACI,gCAAA,CAIR,uBACI,oDAAA,CACA,qDAAA,CACA,oBAAA,CAGA,uJAII,UAAA,CACA,WAAA,CAGJ,uCACI,eAAA,CACA,wBAAA,CAGJ,gDACI,sBAAA,CAEA,wDACI,uBAAA,CAIR,6CACI,sFAAA,CACA,oCAAA,CAGJ,oEAEI,wBAAA,CACA,2BAAA,CAGJ,6CACI,WAAA,CAGJ,kDACI,YAAA,CAGJ,gDACI,WAAA,CAGJ,6BACI,aAAA,CACA,cAAA,CAGJ,iGAEI,6BAAA,CACA,2BAAA,CAIR,kGACI,iBAAA,CACA,kBAAA,CACA,YAAA,CAGJ,oDACI,oCAAA,CACA,yCAAA,CAEA,0DACI,+CAAA,CACA,oCAAA,CAIR,qDACI,6GAAA,CAEA,wZAEI,sBAAA,CAQR,uDACI,+GAAA,CAOJ,gCACI,eAAA,CAGJ,2BACI,wBAAA,CAGJ,2CACI,uBAAA,CAGJ,8CACI,wBAAA,CAGJ,oCACI,oBAAA,CACA,6BAAA,CACA,oBAAA,CACA,gBAn/BW,CAo/BX,eAn/BW,CAo/BX,WAAA,CACA,gBAAA,CACA,kGA5+BiB,CA6+BjB,kBAAA,CACA,eAAA,CACA,kCAAA,CAGJ,wBACI,6CAAA,CACA,wCAAA,CACA,SAAA,CAGJ,mBACI,cAAA,CACA,iBAAA,CAGJ,sBACI,gBAAA,CACA,eAAA,CAGJ,oBvD1+CA,kBAAA,CACA,sBAAA,CACA,eAAA,CuD0+CI,eA/6BiB,CAg7BjB,aAAA,CACA,gBAAA,CACA,cAAA,CACA,WAAA,CAEA,wBAAA,CACA,kCAAA,CAGJ,uCACI,wBAAA,CAGJ,0CACI,wBAAA,CAGJ,oBACI,mBAAA,CACA,kBAAA,CACA,wBAAA,CACA,gBAAA,CACA,kBAAA,CACA,eAAA,CACA,mBAAA,CAEA,0BACI,WAAA,CAGJ,+BACI,iBAAA,CACA,YAAA,CAEA,wCACI,qCAAA,CACA,sCAAA,CACA,yCAAA,CAGJ,sCACI,4BAAA,CACA,iBAAA,CACA,cAAA,CACA,2BAAA,CACA,iBAAA,CACA,cAAA,CACA,sBAAA,CACA,mBAAA,CAMZ,uBACI,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,uBAAA,CACA,cAAA,CAEA,gCACI,8BAAA,CAIA,sCACI,oCAAA,CAKZ,0BvDrjDA,kBAAA,CACA,sBAAA,CACA,eAAA,CuDujDA,0BACI,sBAAA,CAGJ,yBACI,uCAAA,CACA,4CAAA,CAGI,UAAA,CAEA,oDACI,SAAA,CAMR,oCACI,uCAAA,CAEA,4CACI,4CAAA,CAKJ,wDACI,uCAAA,CAEA,4HAEI,uCAAA,CAMhB,uBACI,uCAAA,CACA,4CAAA,CAEA,yCACI,4CAAA,CAIA,sDACI,uCAAA,CAEA,wHAEI,uCAAA,CAoBZ,kCACI,cAAA,CACA,UAAA,CAEA,wCACI,SAAA,CAMR,gCACI,SAAA,CACA,qCAAA,CAEA,sCACI,6CAAA,CAMR,4CACI,UAAA,CAKJ,yDACI,cAAA,CACA,UAAA,CAEA,+DACI,SAAA,CAKZ,WACI,gCAAA,CAGJ,uCACI,aAAA,CAGJ,0CACI,WAAA,CAGJ,2CACI,cAltCkB,CAmtClB,wBAAA,CAEA,mFACI,0BAAA,CACA,QAAA,CAEA,yGACI,OAAA,CAKZ,yBACI,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBAAA,CACA,SAAA,CACA,0BAAA,CAGJ,uBACI,YAAA,CACA,kBAAA,CACA,sBAAA,CAEA,sCAAA,CAGJ,uCACI,oCAAA,CAGJ,0CACI,uCAAA,CAGJ,4BACI,iBAAA,CACA,YAAA,CACA,KAAA,CACA,0BAAA,CACA,WAAA,CACA,SAAA,CAGJ,0BACI,iBAAA,CACA,iBAAA,CACA,YAAA,CACA,mCAAA,CACA,SAAA,CAEA,mEAEI,iBAAA,CACA,UAAA,CACA,WAAA,CACA,UAAA,CAGJ,kCACI,qBAAA,CAGJ,iCACI,uBAAA,CAIR,gDACI,YAAA,CACA,eAAA,CACA,2CAAA,CACA,kBAAA,CAEA,oGACI,sCAAA,CAIR,2BACI,2CAAA,CACA,qDAAA,CAEA,wCACI,kBAAA,CAGJ,qDACI,sCAAA,CAIR,2BAIQ,kBAAA,CAEJ,iBAAA,CACA,SAAA,CACA,2DAAA,CAIJ,qEAEI,iBAAA,CACA,cAAA,CACA,WAAA,CACA,KAAA,CACA,SAAA,CAGJ,kCACI,6BAAA,CAGJ,mCACI,2BAAA,CAIA,6IAEI,4DAAA,CAGJ,yFAEI,iBAAA,CACA,UAAA,CACA,OAAA,CACA,QAAA,CACA,kBAAA,CACA,6BAAA,CAGJ,6CACI,QAAA,CACA,4BAAA,CACA,oEAAA,CAGJ,4CACI,KAAA,CACA,4BAAA,CACA,oEAAA,CAIR,+DAEI,iBAAA,CACA,cAAA,CACA,KAAA,CACA,WAAA,CACA,UAAA,CAGJ,+BACI,oBAAA,CAGJ,gCACI,kBAAA,CAGJ,iCACI,iBAAA,CACA,cAAA,CACA,WAAA,CACA,KAAA,CACA,UAAA,CAGJ,4BACI,iBAAA,CACA,YAAA,CACA,kBAAA,CACA,yCAAA,CACA,oCAAA,CACA,iBAAA,CACA,eAAA,CACA,eAAA,CACA,mBAAA,CACA,iBAAA,CACA,gCAAA,CACA,WAAA,CACA,6BAAA,CACA,eAAA,CACA,UAAA,CAEA,gDvDv3DJ,kBAAA,CACA,sBAAA,CACA,eAAA,CuDu3DQ,UAAA,CACA,cAAA,CAGJ,gDACI,YAAA,CAGJ,mDACI,WAAA,CAIR,4CACI,aAAA,CACA,iBAAA,CAGJ,+CACI,WAAA,CACA,eAAA,CAGJ,iCACI,oCAAA,CACA,wBAAA,CAGJ,uCACI,oCAAA,CACA,0BAAA,CACA,oBAAA,CACA,uBAAA,CAGJ,2BACI,mCAAA,CAGI,8FACI,UAAA,CAMZ,qBACI,sCAAA,CACA,YAAA,CACA,kBAAA,CACA,oDAAA,CACA,mBAAA,CAEA,+CACI,cAAA,CACA,WAAA,CAIR,6BACI,+CAAA,CAGA,2DACI,8BAAA,CAGJ,uDACI,qDAAA,CACA,2BAAA,CACA,yBAAA,CACA,+DAAA,CAGJ,mCACI,+CAAA,CAIR,qCACI,iBAAA,CAGJ,wCACI,eAAA,CAGJ,iBACI,YAAA,CACA,kBAAA,CACA,0BAAA,CACA,gBAAA,CAEA,mBACI,wBAAA,CAEA,8BACI,mBAAA,CAKZ,uBACI,gBAAA,CAEA,gCACI,6BAAA,CACA,gCAAA,CACA,iCAAA,CACA,oCAAA,CAIR,8BACI,yCAAA,CACA,eAAA,CACA,gBAAA,CAIA,kCACI,wCAAA,CACA,mCAAA,CACA,gBAvhDO,CA2hDf,uBACI,kBAAA,CACA,6BAAA,CAIA,mCACI,2BAAA,CAGJ,sGACI,yBAAA,CAGJ,4GACI,2BAAA,CAIA,6BACI,0BAAA,CAEA,wCACI,qBAAA,CAMhB,yBACI,YAAA,CACA,kBAAA,CACA,0BAAA,CACA,aAAA,CACA,2BAAA,CACA,mBAAA,CAEA,+BACI,qBAAA,CAIR,yCACI,yBAAA,CACA,iBAAA,CAGJ,4CACI,2BAAA,CACA,eAAA,CAGJ,2BACI,iBAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,2BAAA,CACA,yBAAA,CACA,2DAAA,CACA,kBAAA,CACA,SAAA,CACA,0BAAA,CAEA,kCACI,UAAA,CACA,iBAAA,CACA,UAAA,CACA,eAAA,CACA,iBAAA,CACA,oBAAA,CACA,wBAAA,CAGJ,6CACI,aAAA,CACA,cAAA,CACA,kCAAA,CAKA,sGACI,wCAAA,CAKZ,2CACI,yBAAA,CACA,uBAAA,CAGJ,8CACI,2BAAA,CACA,yBAAA,CAGJ,oBACI,UAAA,CACA,YAAA,CACA,kBAAA,CACA,0BAAA,CACA,cAAA,CACA,8FAxnDiB,CAynDjB,sCAAA,CACA,4BAAA,CACA,oBAAA,CACA,gBAAA,CACA,SAAA,CACA,WAAA,CACA,eAAA,CAEA,0BACI,kBAAA,CAGJ,8BACI,gBAAA,CACA,mBAAA,CAIR,+BACI,mBAAA,CACA,sBAAA,CACA,kBAAA,CACA,eAAA,CAEA,wCACI,gCAAA,CACA,iCAAA,CACA,oCAAA,CAGJ,yCACI,oBAAA,CAIR,0BACI,oBAAA,CACA,cAAA,CAEA,oCACI,gBAAA,CACA,mBAAA,CAIR,6BACI,oBAAA,CACA,gBAAA,CAEA,uCACI,iBAAA,CACA,oBAAA,CAIR,4DACI,cAAA,CACA,YAAA,CACA,kBAAA,CACA,0BAAA,CACA,WAAA,CACA,4CAAA,CACA,gBAAA,CACA,WAAA,CACA,sCAAA,CAEA,2HACI,iCAAA,CACA,UAAA,CACA,WAAA,CACA,cAAA,CACA,uBAAA,CAIR,sBACI,8CAAA,CAGJ,wBACI,aAAA,CACA,4CAAA,CACA,cAAA,CAGJ,qBACI,aAAA,CACA,4CAAA,CACA,gBAAA,CAGJ,qBvD5rEA,kBAAA,CACA,sBAAA,CACA,eAAA,CuD4rEI,iCAAA,CACA,kBAAA,CAGJ,8BACI,iBAAA,CACA,YAAA,CAEA,gBAAA,CACA,sBAAA,CACA,kBAAA,CACA,SAAA,CACA,cAAA,CACA,yBAhpDqB,CAipDrB,0BAAA,CACA,mBAAA,CAEA,uCACI,8BAAA,CACA,kCAAA,CAGJ,wEAEI,kBAAA,CAEA,0FACI,oCAAA,CAIR,wCACI,oBAAA,CAIR,8CACI,iBAAA,CACA,wBAAA,CAGJ,iDACI,eAAA,CACA,2BAAA,CAGJ,8BACI,iBAAA,CACA,yBAAA,CACA,2DAAA,CACA,mCAAA,CACA,SAAA,CAGJ,8CACI,uBAAA,CAGJ,iDACI,yBAAA,CAGJ,4BACI,iBAAA,CACA,cAAA,CACA,gBAAA,CACA,oBAAA,CACA,yBAAA,CAEA,kCACI,oCAAA,CAGJ,6DACI,YAAA,CAIR,4CACI,uBAAA,CAEA,6EACI,SAAA,CAIR,+CACI,yBAAA,CAEA,gFACI,UAAA,CAKJ,oCACI,0CAAA,CAIA,oEACI,2BAAA,CAIR,oDACI,wCAAA,CAIA,oFACI,yBAAA,CAIR,uDACI,2CAAA,CAIA,uFACI,4BAAA,CA1BR,oCACI,wCAAA,CAIA,oEACI,yBAAA,CAIR,oDACI,wCAAA,CAIA,oFACI,yBAAA,CAIR,uDACI,0CAAA,CAIA,uFACI,2BAAA,CA1BR,oCACI,0CAAA,CAIA,oEACI,2BAAA,CAIR,oDACI,wCAAA,CAIA,oFACI,yBAAA,CAIR,uDACI,2CAAA,CAIA,uFACI,4BAAA,CA1BR,oCACI,wCAAA,CAIA,oEACI,yBAAA,CAIR,oDACI,wCAAA,CAIA,oFACI,yBAAA,CAIR,uDACI,wCAAA,CAIA,uFACI,yBAAA,CA1BR,oCACI,0CAAA,CAIA,oEACI,2BAAA,CAIR,oDACI,wCAAA,CAIA,oFACI,yBAAA,CAIR,uDACI,2CAAA,CAIA,uFACI,4BAAA,CA1BR,oCACI,wCAAA,CAIA,oEACI,yBAAA,CAIR,oDACI,wCAAA,CAIA,oFACI,yBAAA,CAIR,uDACI,0CAAA,CAIA,uFACI,2BAAA,CA1BR,oCACI,2CAAA,CAIA,oEACI,4BAAA,CAIR,oDACI,wCAAA,CAIA,oFACI,yBAAA,CAIR,uDACI,2CAAA,CAIA,uFACI,4BAAA,CA1BR,oCACI,yCAAA,CAIA,oEACI,0BAAA,CAIR,oDACI,wCAAA,CAIA,oFACI,yBAAA,CAIR,uDACI,wCAAA,CAIA,uFACI,yBAAA,CA1BR,oCACI,2CAAA,CAIA,oEACI,4BAAA,CAIR,oDACI,wCAAA,CAIA,oFACI,yBAAA,CAIR,uDACI,2CAAA,CAIA,uFACI,4BAAA,CA1BR,qCACI,yCAAA,CAIA,qEACI,0BAAA,CAIR,qDACI,yCAAA,CAIA,qFACI,0BAAA,CAIR,wDACI,0CAAA,CAIA,wFACI,2BAAA,CAKZ,kBACI,aAAA,CACA,cAAA,CAGJ,0BACI,aAAA,CAEA,uDACI,eAAA,CAGJ,4CACI,cAAA,CACA,eAAA,CAIR,8BACI,aAAA,CACA,iBAAA,CAEA,6OAEI,iBAAA,CAIR,2BACI,iBAAA,CACA,SAAA,CACA,aAAA,CACA,sBAAA,CACA,0BAAA,CAGJ,8DACI,YAAA,CACA,kBAAA,CACA,kGA33DiB,CA43DjB,2FA53DiB,CA63DjB,eAAA,CACA,gBAAA,CACA,eAAA,CAEA,4FACI,iEAAA,CACA,gBAAA,CAEA,4JACI,gBAAA,CACA,wBAAA,CACA,eAAA,CACA,cAAA,CAKZ,oCACI,uCAAA,CACA,4CAAA,CAGJ,gFACI,iBAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,wBAAA,CACA,yBAAA,CACA,cAAA,CACA,kBAAA,CAEA,kGACI,oCAAA,CACA,qCAAA,CACA,wCAAA,CAGJ,sGAEI,OAAA,CACA,0BAAA,CAEA,iBAAA,CACA,aAAA,CACA,cAAA,CACA,iBAAA,CACA,gBAAA,CACA,iBAAA,CACA,kBAAA,CAIR,4CACI,iBAAA,CAGJ,gCACI,aAAA,CACA,gBAAA,CAGJ,mCACI,WAAA,CACA,gBAAA,CAGJ,yBACI,iBAAA,CACA,YAAA,CACA,UAAA,CACA,eAAA,CACA,cAAA,CACA,kBAAA,CACA,6BAAA,CACA,0CAAA,CACA,qCAAA,CACA,oBAAA,CACA,QAAA,CACA,SAAA,CAEA,gCACI,aAAA,CACA,iBAAA,CACA,UAAA,CACA,kBAAA,CACA,oBAAA,CACA,kBAAA,CACA,KAAA,CACA,QAAA,CACA,wFAAA,CAEA,UAAA,CAGJ,yCACI,eAAA,CACA,UAAA,CACA,iBAAA,CACA,iBAAA,CAGJ,0CACI,0DAAA,CAIA,6CACI,kBAAA,CAEA,mDACI,0DAAA,CAGJ,sDACI,0BAAA,CAMhB,oCACI,YAAA,CACA,kBAAA,CAGJ,mCACI,wBAAA,CAGJ,+BACI,aAAA,CAGJ,kCACI,WAAA,CAGJ,8BACI,YAAA,CACA,MAAA,CACA,eAAA,CACA,4BAAA,CACA,gBAAA,CAEA,6CACI,iEAAA,CACA,gBAAA,CACA,cAAA,CAGJ,uCACI,eAAA,CAIA,mDACI,iBAAA,CACA,yBAAA,CAEA,OAAA,CACA,0BAAA,CAGJ,+CACI,wBAAA,CAKZ,sCACI,YAAA,CACA,aAAA,CACA,iBAAA,CACA,gBAAA,CACA,cAAA,CACA,SAAA,CAEA,6CA3lEJ,aAAA,CACA,iBAAA,CACA,aAAA,CACA,UAAA,CACA,qBAAA,CACA,kFAAA,CAwlEQ,mCAAA,CAGJ,gDACI,oBAAA,CAEA,uDACI,eAAA,CAGJ,wDAvmER,aAAA,CACA,iBAAA,CACA,aAAA,CACA,UAAA,CACA,qBAAA,CACA,kFAAA,CAomEY,iCAAA,CAKZ,oCACI,YAAA,CACA,aAAA,CACA,iBAAA,CACA,gBAAA,CACA,cAAA,CACA,SAAA,CAEA,4CAtnEJ,aAAA,CACA,iBAAA,CACA,aAAA,CACA,UAAA,CACA,qBAAA,CACA,iFAAA,CAmnEQ,iCAAA,CAGJ,8CACI,oBAAA,CAEA,sDACI,eAAA,CAGJ,qDAloER,aAAA,CACA,iBAAA,CACA,aAAA,CACA,UAAA,CACA,qBAAA,CACA,iFAAA,CA+nEY,mCAAA,CAKZ,2BACI,iBAAA,CAEA,kCACI,UAAA,CACA,iBAAA,CACA,KAAA,CACA,oBAAA,CACA,YAAA,CACA,WAAA,CACA,+BAAA,CACA,SAAA,CAIA,yDACI,yBAAA,CAIR,mCACI,yBAAA,CAIR,wBACI,oDAAA,CAOJ,yEACI,gBAAA,CACA,kBAAA,CACA,2BAAA,CACA,yBAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,cAAA,CACA,SAAA,CACA,8BAAA,CACA,0BAAA,CAEA,qFACI,YAAA,CAEA,uGACI,oCAAA,CAKJ,uGACI,oCAAA,CAIR,2FACI,8BAAA,CACA,gBA9lEmB,CA+lEnB,gBA/lEmB,CAkmEvB,6FACI,oBAAA,CAGJ,2JACI,cAAA,CACA,mBAAA,CAIR,yGACI,yBAAA,CACA,uBAAA,CAGJ,+GACI,2BAAA,CACA,yBAAA,CAGJ,yCACI,kBAAA,CACA,2DAAA,CACA,SAAA,CACA,0BAAA,CAEA,kDACI,YAAA,CACA,kBAAA,CAIR,uCACI,sBAAA,CAEA,gDACI,mBAAA,CACA,mBAAA,CAKJ,gEACI,iBAAA,CAKJ,mEACI,eAAA,CAIR,yCACI,8CAAA,CAGJ,+BACI,6CAAA,CACA,iBAAA,CACA,wBAAA,CACA,oBAAA,CAEA,uCACI,qCAAA,CAIR,+CACI,2CAAA,CACA,eAAA,CACA,sBAAA,CACA,kBAAA,CAEA,uDACI,mCAAA,CAIR,kDACI,8CAAA,CACA,iBAAA,CACA,wBAAA,CACA,oBAAA,CAEA,0DACI,sCAAA,ClCtyFR,kBACI,aAAA,CACA,WAAA,CACA,WAAA,CACA,WAAA,CACA,iCAAA,CACA,aAAA,CACA,eAAA,CAGJ,0BACI,eAAA,CACA,UAAA,CAGJ,2BACI,YAAA,CACA,sBAAA,CACA,kBAAA,CAGJ,0DACI,YAAA,CACA,cAAA,CAEA,4EACI,qCAAA,CACA,sCAAA,CACA,yCAAA,CAKJ,2CACI,0DAAA,CAQR,wBACI,YAAA,CACA,qBAAA,CACA,WAAA,CACA,0CAAA,CAEA,2EAAA,CAEA,wCACI,cAAA,CACA,kDAAA,CACA,mEAAA,CACA,sEAAA,CACA,6DAAA,CACA,mEAAA,CACA,gFAAA,CAKA,gCAAA,CACA,yCAAA,CACA,mCAAA,CrBjCJ,yDAjCI,0FAAA,CAAA,wEAAA,CAAA,4GAAA,CAAA,0FAAA,CAAA,wGAAA,CAAA,sFAAA,CAAA,0HAAA,CAAA,wGAAA,CAAA,kGAAA,CAAA,4GAAA,CAAA,sGAAA,CAAA,wGAAA,CAAA,yEAAA,CmCkFR,kCACI,aAAA,CACA,SAAA,CACA,eAAA,CAGJ,4OAKI,YAAA,CAGJ,uCACI,qBAAA,CAGJ,qJAGI,kBAAA,CAGJ,qGAEI,uBAlCS,CAqCb,qJAGI,SAAA,CAGJ,8DACI,iBAAA,CAGJ,gDACI,mBAAA,CACA,gBAAA,CACA,iBAAA,CACA,4BAAA,CACA,uBAAA,CAGA,yDACI,kCAAA,CACA,mCAAA,CACA,sCAAA,CAIA,mEACI,oBAAA,CAIR,uDACI,UAAA,CACA,iBAAA,CACA,KAAA,CACA,oBAAA,CACA,UAAA,CACA,WAAA,CACA,wBAAA,CACA,SAAA,CAIA,6DACI,6BAAA,CAIR,sDACI,eAAA,CAGJ,iEACI,YA1FI,CA2FJ,aA3FI,CA8FR,sDACI,iBAAA,CACA,cAAA,CAEA,6EACI,UAAA,CAGJ,qFACI,qBAAA,CACA,mDAAA,CAGJ,uEACI,wBAAA,CACA,yBAAA,CAIR,yDACI,eAAA,CACA,gBAAA,CAEA,gFACI,YAAA,CAGJ,wFACI,uBAAA,CACA,sDAAA,CAGJ,0EACI,wBAAA,CACA,yBAAA,CAKZ,0DACI,qCAAA,CACA,gCAAA,CAGJ,wDACI,mCAAA,CACA,8BAAA,CAeJ,yFACI,4CAAA,CACA,uCAAA,CAGJ,yDACI,mDAAA,CAGJ,0DACI,gDAAA,CACA,2CAAA,CAEA,0BAAA,CAEA,mBAAA,CAEA,iEACI,YAAA,CAGJ,wFACI,2CAAA,CAIR,+CACI,oBAAA,CACA,YAAA,CAGJ,gDACI,aAAA,CACA,kBAAA,CACA,MAAA,CnC3LJ,kBAAA,CACA,sBAAA,CACA,eAAA,CmC6LA,sDACI,sBAAA,CACA,cAAA,CACA,gBAAA,CACA,gBArMQ,CAwMZ,uDACI,YAAA,CACA,iBAAA,CACA,iBAAA,CACA,uBAAA,CACA,QAAA,CACA,qDAAA,CAEA,2DACI,MAAA,CACA,eAAA,CACA,iCAAA,CAIR,8CACI,eAAA,CdjNA,gDACI,SAAA,CAGJ,uCACI,wBAAA,CACA,SAAA,CAIR,mEACI,YAAA,CACA,kBAAA,CACA,YAAA,CACA,gDAAA,CAGJ,uCACI,YAAA,CACA,wBAAA,CAEA,+DACI,0BAAA,CAGJ,4pBACI,oBAAA,CACA,mBAAA,CAGJ,4pBAEI,sBAAA,CAIR,mEACI,YAAA,CACA,6BAAA,CAEA,4OAEI,WAAA,CAEA,4RACI,UAAA,CAKZ,yBACI,WAAA,CAGJ,mDACI,wBAAA,CAGJ,gDAEI,aAAA,CACA,kBAAA,CAEA,8DACI,gDAAA,CACA,oBAAA,CAGJ,kEACI,eAAA,CACA,oCAAA,CACA,qCAAA,CACA,wCAAA,CAIR,kHACI,YAAA,CACA,kBAAA,CACA,6BAAA,CAEA,gIACI,gDAAA,CACA,sBAAA,CAIR,2BACI,kBAAA,CAIA,6CACI,0DAAA,CASJ,oDACI,0BAAA,CAEA,6HAEI,aAAA,CAMR,oDACI,0BAAA,CAEA,6HAEI,aAAA,CAKZ,6TACI,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,kBAAA,CACA,cAAA,CACA,gDAAA,CACA,kBAAA,CAEA,suBAEI,qDAAA,CAIA,weACI,oBAAA,CAKZ,oFACI,gDAAA,CACA,mBAAA,CAGJ,yBACI,YAAA,CACA,kBAAA,CACA,WAAA,CAGJ,6BACI,YAAA,CACA,qBAAA,CACA,WAAA,CACA,eAAA,CACA,YAAA,CACA,QAAA,CAEA,sCACI,WAAA,CACA,eAAA,CACA,mBAAA,CACA,QAAA,CAMI,qEAAA,CACA,wEAAA,CAIR,qDACI,2DAAA,CACA,eAAA,CACA,cAAA,CACA,MAAA,CAMI,qEAAA,CACA,wEAAA,CAGJ,8DACI,mCAAA,CACA,oCAAA,CACA,uCAAA,CAGJ,+IAEI,aAAA,CACA,iBAAA,CAGJ,mFACI,iBAAA,CACA,wBAAA,CAGJ,+DACI,iBAAA,CAIR,2DACI,2DAAA,CACA,YAAA,CACA,qBAAA,CACA,SAAA,CAGJ,gEACI,YAAA,CACA,kBAAA,CACA,aAAA,CACA,2DAAA,CAEA,4IAEI,qDAAA,CAGJ,6EACI,iDAAA,CAMR,6CACI,2BAAA,CAGJ,+HACI,6BAAA,CACA,aAAA,CAGJ,sDACI,aAAA,CAGJ,sDACI,aAAA,CAGJ,yDACI,aAAA,CAGJ,2kBACI,aAAA,CAGJ,2DACI,aAAA,CACA,SAAA,CAGJ,uCACI,2BAAA,CACA,yBAAA,CAGJ,sDACI,gBAAA,CAEA,iJAEI,WAAA,CACA,eAAA,CAGJ,oFACI,yBAAA,CAIR,iEACI,WAAA,CAEA,8EACI,gDAAA,CAMR,gDACI,8BAAA,CACA,UAAA,CAGJ,qIACI,6BAAA,CACA,cAAA,CAGJ,kHAEI,cAAA,CAIA,kJACI,WAAA,CAIR,yDACI,eAAA,CAGJ,4DACI,cAAA,CAGJ,smBACI,cAAA,CAGJ,8DACI,cAAA,CACA,UAAA,CAGJ,0CACI,4BAAA,CACA,0BAAA,CAGJ,yDACI,iBAAA,CAEA,uJAEI,aAAA,CACA,iBAAA,CAGJ,uFACI,eAAA,CAIR,oEACI,aAAA,CAEA,iFACI,iDAAA,CAKZ,6BACI,aAAA,CACA,iBAAA,CACA,0CAAA,CACA,iCAAA,CACA,2EAAA,CAIA,yIACI,aAAA,CAGJ,gEACI,eAAA,CAGJ,iEACI,oBAAA,CAGJ,yIACI,aAAA,CAKJ,+IACI,cAAA,CAGJ,mEACI,gBAAA,CAGJ,oEACI,sBAAA,CAGJ,+IACI,oBAAA,CAIR,oCAIQ,uEAAA,CAIR,kCACI,cAAA,CACA,aAAA,CAGJ,oCAIQ,qEAAA,CAGJ,2HAEI,WAAA,CAIR,6BACI,YAAA,CACA,cAAA,CACA,kBAAA,CACA,cAAA,CAEA,wCACI,WAAA,CACA,cAAA,CACA,aAAA,CAEA,gHAEI,wBAAA,CAIR,6CACI,aAAA,CAGJ,8CACI,wBAAA,CAIR,8BACI,kBAAA,CAEA,uCACI,oCAAA,CACA,qCAAA,CACA,wCAAA,CAIR,kEAEI,YAAA,CACA,qBAAA,CACA,WAAA,CACA,eAAA,CkCmwEJ,qBACI,0CAAA,CACA,iCAAA,CAEA,uCACI,+DAAA,CACA,mEAAA,CACA,iFAAA,CACA,iEAAA,CACA,+EAAA,CACA,eAAA,CAGJ,8CACI,WAAA,CAIR,yFAEI,YAAA,CACA,kBAAA,CAEA,uGACI,eAAA,CAOI,gFACI,qCAAA,CAOZ,kCACI,kGAAA,CAMJ,kJAEI,2BAAA,CACA,4BAAA,CACA,aAAA,CAIA,wGACI,kBAAA,CACA,kBAAA,CACA,eAAA,CAMZ,uBACI,YAAA,CAEA,8DACI,oGAAA,CAIR,uCACI,WAAA,CAGJ,yCACI,gBAAA,CACA,WAAA,CAGJ,oBACI,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,eAAA,CACA,SAAA,CACA,eAAA,CAYA,gBAAA,CACA,qCAAA,CACA,oGAAA,CACA,8FAAA,CAbA,oCACI,aAAA,CACA,cAAA,CAGJ,uCACI,WAAA,CACA,gBAAA,CAQJ,mCACI,gBAAA,CACA,UAAA,CAEA,qCACI,wBAAA,CAGJ,8CACI,mBAAA,CAKZ,+BACI,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,cAAA,CACA,iBAAA,CAEA,yCACI,iBAAA,CACA,YAAA,CACA,sBAAA,CACA,cAAA,CACA,kBAAA,CACA,eAAA,CACA,iBAAA,CACA,mBAAA,CACA,gBAAA,CAIR,iCACI,kBAAA,CACA,iBAAA,CACA,8BAAA,CAGJ,8BACI,sBAAA,CACA,oBAAA,CACA,qBAAA,CAUA,qBAAA,CACA,eAAA,CATA,8CACI,mBAAA,CAGJ,iDACI,qBAAA,CAOR,sCACI,YAAA,CACA,qBAAA,CAGJ,yCACI,aAAA,CACA,mCAAA,CAGJ,mCACI,WAAA,CAGJ,4BACI,eAAA,CAUA,qBAAA,CACA,mBAAA,CACA,8FAAA,CAVA,4CACI,aAAA,CAGJ,+CACI,WAAA,CAQR,gCACI,eAAA,CAGJ,0BACI,MAAA,CAGJ,iCACI,8BAAA,CAGJ,yCACI,eAAA,CAEA,yDACI,WAAA,CAMA,0DACI,iBAAA,CAOJ,6FACI,kBAAA,CvD9+FR,kBA7BI,qEAAA,CAAA,oHAAA,CAAA,oGAAA,CAAA,gHAAA,CAAA,oEAAA,CAAA,gGAAA,CAAA,uEAAA,CAAA,yEAAA,CAAA,8GAAA,CwDsER,qEACI,iBAAA,CACA,YAAA,CACA,qBAAA,CACA,WAAA,CACA,gBAAA,CACA,2CAAA,CACA,eAAA,CACA,kBAAA,CAEA,0FACI,iBAAA,CACA,OAAA,CAGJ,4GACI,wCAAA,CAIR,wBACI,cAAA,CAGJ,2BACI,gBAAA,CAGJ,0BACI,iBAAA,CACA,SAAA,CAGJ,sBACI,WAAA,CAGJ,+BACI,kGAAA,CACA,aAFJ,+BAGQ,4EAAA,CAAA,CAIR,gCACI,oGAAA,CACA,aAFJ,gCAGQ,8EAAA,CAAA,CAIR,wBACI,YAAA,CACA,kBAAA,CACA,iBAAA,CACA,gBAAA,CACA,iBAAA,CAGJ,gDACI,iBAAA,CAGJ,mDACI,SAAA,CAGJ,yBACI,wBAAA,CACA,kBAAA,CACA,0BAAA,CAEA,+BACI,8BAAA,CAIR,0BACI,yBAAA,CACA,eAAA,CACA,aAAA,CACA,cAAA,CAGJ,mDxD/EA,kBAAA,CACA,sBAAA,CACA,eAAA,CAhDI,4CA7BI,uGAAA,CAAA,wGAAA,CAAA,oHAAA,CAAA,sGAAA,CAAA,kHAAA,CAAA,kHAAA,CAAA,kHAAA,CAAA,kHAAA,CyDqFR,qEACI,UAAA,CACA,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,UAAA,CACA,cA1Bc,CA+BV,uEAAA,CAGJ,kCAAA,CACA,WAAA,CACA,mBAAA,CACA,eAAA,CACA,0BAAA,CAEA,yGACI,wBAAA,CAEA,mJACI,qBAAA,CAGJ,gJACI,mBAAA,CAIR,gGACI,cAAA,CAEA,oIACI,qBAAA,CACA,uBAAA,CAEA,qKACI,mBAAA,CAMhB,wBACI,kBAAA,CACA,0BAAA,CAEA,oCACI,0BAAA,CAIR,2BACI,kBAAA,CACA,2BAAA,CAEA,uCACI,yBAAA,CAIR,yBACI,6BAAA,CACA,aAAA,CzD5EJ,kBAAA,CACA,sBAAA,CACA,eAAA,CyD4EI,cAAA,CACA,sBAAA,CAGJ,kCACI,YAAA,CACA,cAAA,CACA,WAAA,CACA,wBAAA,CACA,sBAAA,CAGJ,2BACI,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,wBAAA,CAEA,6BACI,YAAA,CACA,wBAAA,CAEA,yCACI,qBAAA,CAQR,wGACI,YAAA,CAKJ,kGACI,UAAA,CACA,qBAAA,CACA,wBAAA,CAIR,gCACI,iBAAA,CACA,UAAA,CACA,oBAAA,CACA,kBAAA,CACA,iBAAA,CACA,cAAA,CACA,eAAA,CACA,kCAAA,CAEA,iDACI,eAAA,CAEA,iEACI,+DAAA,CAKZ,wCACI,4EAAA,CAcJ,4BACI,iBAAA,CAGJ,2BACI,eAAA,CACA,qCAAA,CACA,QAAA,CACA,SAAA,CACA,gCAAA,CAGJ,iCACI,cAAA,CACA,iBAAA,CACA,kBAAA,CACA,4BAAA,CACA,kBAAA,CAEA,uCACI,uCAAA,CACA,kCAAA,CAGJ,uCACI,uCAAA,CACA,kCAAA,CzDpOJ,wBA7BI,yGAAA,CAAA,uGAAA,C0DSR,yBACI,YAAA,CACA,qBAAA,CACA,iBAAA,CACA,4BAAA,CACA,SAAA,CAEA,yCACI,aAAA,CAGJ,+CACI,YAAA,CACA,qBAAA,CAIA,wDACI,cAAA,CAGJ,gDACI,YAAA,CACA,kBAAA,CAGJ,sHACI,kBAAA,CAIR,8IACI,cAAA,CAGJ,w7BAGI,kCAAA,CACA,sBAAA,CAGJ,0nBAGI,wBAAA,CAUJ,oDACI,iBAAA,CACA,WAAA,CACA,iBAAA,CACA,cA7DQ,CA8DR,eAAA,CAEA,6DACI,WAAA,CAIR,kEACI,uBAAA,CAGJ,4DACI,YAAA,CAEA,+DACI,gBAAA,CAIR,4DACI,8BAAA,CACA,cAnFQ,CAqFR,sEACI,qDAAA,CACA,0EAAA,CAKZ,iCACI,YAAA,CACA,qBAAA,CACA,eAAA,CAEA,0CACI,YAAA,CACA,qBAAA,CACA,oBAAA,CACA,oBAAA,CACA,gBAAA,CACA,eAAA,CAGJ,+CACI,YAAA,CAGJ,mDACI,yBAAA,CACA,mBAAA,CAIR,wEAEI,YAAA,CACA,kBAAA,CAIA,gDACI,eAAA,CACA,sBAAA,CAGJ,uDACI,eAAA,CAGJ,8IACI,cAAA,CAGJ,oJACI,eAAA,CAGJ,0DACI,kBA9IY,CAkJpB,+BACI,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,eAAA,CACA,UAAA,CAEA,+CACI,gBAAA,CAIR,qCACI,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,iBAAA,CACA,2DAAA,CACA,eAAA,CACA,WAAA,CACA,0BAAA,CACA,eAAA,CACA,iCAAA,CACA,gEAAA,CACA,6EAAA,CACA,UAAA,CAKA,gFACI,oCAAA,CACA,qCAAA,CACA,wCAAA,CAIR,0CACI,YAAA,CACA,kBAAA,CAEA,mDACI,uBAAA,CAIR,8CACI,cAAA,CAGJ,oC1D/HA,kBAAA,CACA,sBAAA,CACA,eAAA,C0D+HI,uCAAA,CAGJ,iMAKI,gBAAA,CAGJ,uHAGI,cAAA,CAGJ,sCACI,WAAA,CAGJ,qCACI,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,aAAA,CACA,uBAAA,CACA,eAAA,CAGJ,mCACI,YAAA,CAEA,qDACI,yBAAA,C1DjNJ,eA7BI,yGAAA,CAAA,gFAAA,CAAA,kHAAA,CAAA,oFAAA,C2DyBR,sCACI,0BAAA,CACA,oCAAA,CAGJ,uBACI,yBAAA,CACA,mCAAA,C3DHA,SA7BI,8CAAA,CAAA,oCAAA,CAAA,gEAAA,C4DgBR,UACI,mBAAA,CACA,iBAJiB,CAKjB,kBALiB,CAMjB,qBANiB,CAOjB,kBAAA,CACA,iBAAA,CAEA,4BAEI,aAAA,CACA,aAAA,CACA,cAAA,CACA,iBAAA,CAGJ,wEAEI,4BAAA,CAIR,mBACI,sDAAA,CAGJ,iBACI,kDAAA,CAGJ,oBACI,sCAAA,CACA,WAAA,C5DnBA,wDA7BI,kGAAA,CAAA,8FAAA,CAAA,oGAAA,CAAA,2GAAA,CAAA,sFAAA,CAAA,2GAAA,CAAA,sFAAA,CAAA,qGAAA,CAAA,+FAAA,CAAA,2GAAA,CAAA,qHAAA,CAAA,yGAAA,CAAA,2GAAA,CAAA,6GAAA,CAAA,+GAAA,CAAA,mHAAA,CAAA,2HAAA,CAAA,mHAAA,CAAA,qHAAA,CAAA,+HAAA,CAAA,gHAAA,CAAA,2HAAA,CAAA,qGAAA,CAAA,uFAAA,CAAA,qHAAA,CAAA,0EAAA,CAAA,4FAAA,CAAA,6HAAA,CAAA,+IAAA,CAAA,wGAAA,CAAA,2HAAA,CAAA,2HAAA,CAAA,qHAAA,CAAA,mHAAA,CAAA,yGAAA,CAAA,2HAAA,CAAA,4HAAA,CAAA,kIAAA,CAAA,kIAAA,CAAA,sGAAA,CAAA,gGAAA,CAAA,4FAAA,CAAA,wFAAA,CAAA,8FAAA,CsBmOR,gBACI,iBAAA,CAGJ,2CACI,iBAAA,CACA,aAAA,CACA,4BAAA,CAEA,oIAGI,kBAAA,CAGJ,oIAGI,kBAAA,CAGJ,yKAGI,YAAA,CACA,QAAA,CAGJ,6EtBvKJ,iBAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,WAAA,CACA,qBAAA,CACA,SAAA,CACA,mBAAA,CACA,eAAA,CACA,eAAA,CsBkKI,6DACI,aAAA,CAGJ,iFACI,yBAAA,CAIJ,uIACI,uBAAA,CACA,WAAA,CAGJ,oRAEI,uBAAA,CA4BR,iGACI,YAAA,CAoCJ,mGACI,sCAAA,CAEI,+EAAA,CACA,6EAAA,CAEJ,eAAA,CAGJ,uBACI,cAAA,CAGJ,gFACI,gBAAA,CACA,2CAAA,CAaJ,yBACI,iBAAA,CACA,YAAA,CACA,kBAAA,CACA,oBAAA,CACA,cAAA,CACA,oBAAA,CACA,+DAAA,CACA,6GAAA,CAGJ,gDACI,0BAAA,CAGJ,mDACI,0BAAA,CAGJ,+CACI,SAAA,CACA,yBAAA,CACA,gCAAA,CACA,8DAAA,CAEA,qHAEI,uBAAA,CAIR,kDACI,SAAA,CACA,yBAAA,CACA,wBAAA,CACA,kHAAA,CACA,+DAAA,CAEA,gHAEI,gCAAA,CAGJ,2HAEI,uBAAA,CAIR,2EACI,gCAAA,CAGJ,yEACI,+DAAA,CAGJ,2EACI,6DAAA,CAGJ,iFACI,yCAAA,CACA,sDAAA,CAGJ,0EACI,gCAAA,CAGJ,6IACI,SAAA,CACA,mCAAA,CAEA,wUAEI,iCAAA,CAIR,mJACI,SAAA,CACA,mCAAA,CAEA,oVAEI,iCAAA,CAIR,+BACI,cAAA,CAEI,+DAAA,CAMR,8HACI,0CAAA,CAEI,iEAAA,CAMR,iDACI,0CAAA,CACA,gEAAA,CAGJ,mDACI,wCAAA,CACA,8DAAA,CAGJ,kIAEQ,eAAA,CAIJ,iGAAA,CACA,0BAAA,CACA,+BAAA,CACA,0BAAA,CAEA,4HACI,kGAAA,CAIR,qJAEQ,yCAAA,CAMR,kDACI,SAAA,CACA,yBAAA,CACA,mDAAA,CACA,yCAAA,CACA,mCAAA,CAEA,2HAEI,uBAAA,CAIR,wEACI,SAAA,CACA,mCAAA,CAEA,uKAEI,iCAAA,CAIR,2EACI,SAAA,CACA,mCAAA,CAEA,6KAEI,iCAAA,CAIR,wDAEQ,wDAAA,CAMR,2EAEQ,0DAAA,CAMR,2EAEQ,2DAAA,CAMR,yEAEQ,6DAAA,CAMR,4EACI,4CAAA,CACA,4DAAA,CAIJ,yBACI,YAAA,CACA,qBAAA,CAEA,yEAGI,kBAAA,CAGJ,yEAGI,kBAAA,CAGJ,gCACI,yBAAA,CACA,sCAAA,CACA,yBAAA,CAIR,iDACI,YAAA,CACA,qBAAA,CAEA,yHAGI,kBAAA,CACA,eAAA,CAGJ,yHAGI,kBAAA,CAKJ,2KAEI,iBAAA,CACA,OAAA,CACA,iCAAA,CAKJ,qHAGI,kBAAA,CAGJ,qHAGI,kBAAA,CAIR,uEACI,YAAA,CACA,qBAAA,CAEA,qKAGI,kBAAA,CAGJ,qKAGI,kBAAA,CAKJ,2HAGI,kBAAA,CAGJ,2HAGI,kBAAA,CAIR,0EACI,YAAA,CACA,qBAAA,CAEA,2KAGI,kBAAA,CAGJ,2KAGI,kBAAA,CAKJ,oFACI,WAAA,CACA,iBAAA,CACA,WAAA,CACA,uCAAA,CACA,kCAAA,CAKJ,4GACI,YAAA,CAKR,4HACI,SAAA,CACA,eAAA,CACA,yCAAA,CACA,yCAAA,CACA,mCAAA,CACA,iBAAA,CACA,mBAAA,CACA,0BAAA,CAGJ,wIACI,sCAAA,CACA,eAAA,CAGJ,+DACI,qCAAA,CACA,wCAAA,CAEA,sEACI,mBAAA,CACA,iBAAA,CACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,iDAAA,CAIR,8JAEI,yCAAA,CACA,4CAAA,CAGJ,oPAGI,yCAAA,CAGJ,8OAGI,2CAAA,CAIA,6FACI,oDAAA,CAKJ,+FACI,kDAAA,CAIR,gLACI,SAAA,CACA,QAAA,CACA,WAAA,CAGJ,yeACI,gCAAA,CAGJ,sIACI,0BAAA,CACA,iBAAA,CACA,cAAA,CAGJ,gOAGQ,sBAAA,CAIR,8EACI,gCAAA,CAGJ,2KACI,kBAAA,CACA,iBAAA,CACA,eAAA,CACA,6BAAA,CACA,eAAA,CACA,uBAAA,CACA,yBAAA,CACA,uBAAA,CACA,WAAA,CACA,gDAAA,CAEA,4OACI,0BAAA,CAIR,wEACI,4BAAA,CAGJ,0EACI,4BAAA,CAGJ,2EACI,gDAAA,CAGJ,gJACI,uBAAA,CAGJ,0EACI,gDAAA,CACA,gCAAA,CAGJ,oDACI,SAAA,CAGJ,kDACI,cAAA,CACA,yCAAA,CACA,mCAAA,CACA,uCAAA,CAGJ,QACI,wBAAA,CAGJ,QACI,wBAAA,CAGJ,wDACI,qCAAA,CACA,sCAAA,CAGJ,2EACI,qCAAA,CACA,sCAAA,CAaJ,gLACI,4CAAA,CACA,wCAAA,CACA,yCAAA,CAGJ,8BACI,iBAAA,CACA,WAAA,CACA,iBAAA,CAGJ,yNACI,oBAAA,CAGJ,iTACI,0BAAA,CAGJ,6TACI,0BAAA,CAGJ,wBtBvzBA,kBAAA,CACA,sBAAA,CACA,eAAA,CsBuzBI,iBAAA,CAEA,yBAAA,CACA,wBAAA,CACA,eAAA,CACA,0BAAA,CACA,qBAAA,CACA,yBAAA,CACA,4JAAA,CAEA,kCACI,0BAAA,CAIR,+CACI,oBAAA,CAGJ,kDACI,mBAAA,CAGJ,8CACI,uBAAA,CAEA,iJAEI,uBAAA,CAIR,iDACI,gBAAA,CACA,uDAAA,CAGJ,kGAEI,uBAAA,CAIA,yEACI,uBAAA,CAIR,wMACI,gBAAA,CACA,sCAAA,CACA,eAAA,CAGJ,wSAEI,uCAAA,CACA,mDAAA,CAGJ,2EACI,4DAAA,CAGJ,gYACI,uCAAA,CAGJ,4YACI,uCAAA,CAGJ,sLACI,yDAAA,CAGJ,kDACI,oCAAA,CAGJ,gDACI,oCAAA,CAGJ,kDACI,kCAAA,CAIA,0DACI,WAAA,CACA,iBAAA,CACA,kBAAA,CACA,2BA1xBiB,CA2xBjB,oBAAA,CAIR,mDACI,iBAAA,CACA,aAAA,CACA,WAAA,CACA,WAAA,CACA,UAAA,CACA,WAAA,CACA,gBAAA,CACA,wBAAA,CACA,8BAAA,CACA,kBAAA,CACA,eAAA,CACA,uCAAA,CACA,uBAAA,CAEA,qFACI,wBAAA,CAOJ,6EACI,8BAAA,CACA,SAAA,CACA,kBAAA,CAIR,6BACI,iBAAA,CACA,UAAA,CACA,cAAA,CACA,eAAA,CACA,WAAA,CACA,8BAAA,CACA,aAAA,CAEA,kCtBl8BJ,kBAAA,CACA,sBAAA,CACA,eAAA,CsBk8BQ,iBAAA,CACA,oBAAA,CACA,aAAA,CACA,iBAAA,CACA,OAAA,CACA,0BAAA,CAIR,+CACI,sBAAA,CAGJ,oDACI,sBAAA,CAGJ,kDACI,wBAAA,CACA,sBAAA,CAGJ,uDACI,sBAAA,CAGJ,2CACI,qBAAA,CAIA,mCACI,2EAAA,CACA,iEAAA,CACA,oCAAA,CAGI,8BAAA,CACA,0DAAA,CAeR,yCAKI,uBAAA,CAKJ,mCACI,YAAA,CAIR,gWAMI,0BAAA,CAGJ,kGACI,cAAA,CAGJ,kGACI,WAAA,CACA,+BAAA,CAGJ,qaACI,2CAAA,CAEA,mfACI,uCAAA,CAIR,2BAEI,mBAAA,CAGA,uBAAA,CAEA,WAAA,CACA,eAAA,CACA,eAAA,CAGA,6BAAA,CAEA,2CACI,6BAAA,CAIR,sIACI,2CAAA,CAEA,gKACI,uCAAA,CAIR,kDACI,0BAAA,CACA,kCAAA,CAGJ,qDACI,0BAAA,CACA,kCAAA,CAGJ,oDACI,+BAAA,CAGJ,0EACI,sCAAA,CAGJ,6EACI,sCAAA,CAGJ,wQAEI,iBAAA,CACA,mBAAA,CACA,kBAAA,CACA,WAAA,CACA,yDAAA,CAGJ,oIACI,aAAA,CACA,sBAAA,CAGJ,oIACI,eAAA,CAGJ,0IAEI,sBAAA,CAGJ,sJAEI,wBAAA,CACA,sBAAA,CAGJ,qEACI,sBAAA,CACA,sBAAA,CAGJ,2EACI,sBAAA,CACA,sBAAA,CAGJ,qEACI,wBAAA,CAGJ,2EACI,wBAAA,CAGJ,6DAEI,oBAAA,CAGJ,yEACI,+BAAA,CACA,yCAAA,CACA,eAAA,CACA,UAAA,CACA,WAAA,CACA,kBAAA,CACA,eAAA,CACA,yEAAA,CAEA,mGACI,uBAAA,CAIR,yHACI,eAAA,CAEA,mJACI,mBAAA,CAIR,yEACI,+BAAA,CACA,eAAA,CACA,yCAAA,CACA,UAAA,CACA,WAAA,CACA,kBAAA,CACA,yEAAA,CAEA,qGACI,yBAAA,CAIR,yHACI,UAAA,CACA,WAAA,CACA,eAAA,CACA,kBAAA,CAEA,qJACI,qBAAA,CAQJ,gUACI,oCAAA,CACA,qCAAA,CACA,wCAAA,CAMJ,0qBAII,mCAAA,CAIR,8YAII,WAAA,CACA,kBAAA,CAGJ,gaAII,wBAAA,CACA,WAAA,CACA,kBAAA,CAGJ,uMAEI,wBAAA,CAGJ,gNAEI,wBAAA,CAGJ,uMAEI,wBAAA,CAGJ,gNAEI,wBAAA,CAIJ,8RACI,SAAA,CACA,wBAAA,CAGJ,8cACI,SAAA,CACA,iCAAA,CAGJ,seACI,SAAA,CACA,iCAAA,CAGJ,8RACI,SAAA,CAGJ,kJACI,8BAAA,CAGJ,yBACI,UAAA,CACA,eAAA,CACA,mBAAA,CACA,uBAAA,CACA,yCAAA,CAGJ,mDACI,mBAAA,CACA,6DAAA,CAGJ,iDACI,yCAAA,CAOJ,mDACI,uCAAA,CAGJ,oGACI,YAAA,CAGJ,uBACI,iBAAA,CACA,YAAA,CACA,mBAAA,CACA,6BAAA,CAEA,yBACI,uBAAA,CAEA,oCACI,mBAAA,CAIR,6BACI,YAAA,CAYR,qQACI,0BA5qCe,CA6qCf,wBA7qCe,CAgrCnB,+CACI,oCAAA,CAGJ,iDACI,kCAAA,CAGJ,oEACI,YAAA,CACA,kBAAA,CACA,iBAAA,CAGJ,mCACI,0BAAA,CAGJ,iCACI,wBAAA,CAGJ,oEAEI,UAAA,CAGJ,0RAEI,gCAAA,CAeA,uGACI,kDAAA,CACA,gDAAA,CAGJ,qGACI,gDAAA,CACA,8CAAA,CAGJ,0NAEI,2BAAA,CACA,yBAAA,CAGJ,uNAEI,yBAAA,CACA,uBAAA,CA4BR,+EACI,qBAAA,CAaJ,qDACI,mBAAA,CACA,SAAA,CACA,eAAA,CACA,SAAA,CAGJ,2DACI,WAAA,CACA,eAAA,CAGJ,8JAEI,yCAAA,CACA,kBAAA,CACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CAEA,kMACI,mCAAA,CACA,oCAAA,CACA,uCAAA,CACA,eAAA,CAIR,+EACI,+BAAA,CACA,yCAAA,CACA,mBAAA,CAGJ,+EACI,+BAAA,CACA,yCAAA,CACA,qBAAA,CAGJ,0WAEI,kDAAA,CACA,gCAAA,CAGJ,sPAEI,sBAAA,CACA,UAAA,CACA,WAAA,CAEA,0RACI,gCAAA,CACA,iCAAA,CACA,oCAAA,CAIR,kQAEI,oBAAA,CACA,UAAA,CACA,WAAA,CAEA,sSACI,oCAAA,CACA,qCAAA,CACA,wCAAA,CAIR,yRACI,eAAA,CACA,aAAA,CACA,iCAAA,CACA,SAAA,CACA,6BAAA,CACA,uBAAA,CACA,yBAAA,CACA,uBAAA,CACA,mBAAA,CACA,WAAA,CACA,cAAA,CAEA,4HACI,0BAAA,CAIR,0EACI,iBAAA,CACA,qBAAA,CAGJ,6EACI,iBAAA,CACA,oBAAA,CAGJ,2GACI,WAAA,CACA,0BAAA,CACA,QAAA,CACA,sCAAA,CACA,yCAAA,CACA,iBAAA,CACA,kBAAA,CACA,wDAAA,CAGJ,yDACI,uBAAA,CACA,cAAA,CACA,sCAAA,CACA,yCAAA,CACA,kBAAA,CAGJ,+OACI,iDAAA,CACA,sDAAA,CAGJ,oeACI,oDAAA,CACA,mDAAA,CAGJ,gfACI,kDAAA,CACA,iDAAA,CAGJ,kPACI,4CAAA,CACA,kDAAA,CACA,eAAA,CAGJ,4EACI,uBAAA,CAGJ,uJACI,cAAA,CACA,sBAAA,CAGJ,6JACI,iBAAA,CACA,oBAAA,CtBvnDA,SA7BI,0FAAA,CAAA,wGAAA,CAAA,4GAAA,CAAA,oGAAA,CAAA,0GAAA,CAAA,4GAAA,CAAA,8FAAA,CAAA,0GAAA,CAAA,4GAAA,CAAA,oEAAA,CAAA,gFAAA,CAAA,kFAAA,CAAA,sEAAA,CAAA,kFAAA,CAAA,oFAAA,CAAA,0EAAA,CAAA,sFAAA,CAAA,wFAAA,CAAA,4EAAA,CAAA,wFAAA,CAAA,0FAAA,CAAA,yDAAA,CAAA,+CAAA,CAAA,uGAAA,CAAA,iHAAA,CuB2OR,8DACI,iBAAA,CACA,YAAA,CACA,uBAAA,CACA,4BAAA,CACA,WAAA,CACA,eAAA,CACA,iBAAA,CACA,SAAA,CACA,kCAAA,CAGJ,iBACI,sBAAA,CACA,kBAAA,CAGJ,oCACI,iBAAA,CACA,4BAAA,CACA,YAAA,CACA,SAAA,CAGJ,kBACI,YAAA,CACA,kBAAA,CACA,8BAAA,CACA,mCAAA,CACA,kBAAA,CACA,gBAAA,CAGJ,kCACI,oBAAA,CAGJ,qCACI,sBAAA,CAGJ,qBACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,uCAAA,CACA,4BAAA,CACA,iCAAA,CAUA,2BACI,kCAAA,CACA,uCAAA,CAEA,iDACI,kBAAA,CAGJ,sDACI,mCAAA,CAGJ,yDACI,sCAAA,CAGJ,mDACI,oCAAA,CAEA,4DACI,oCAAA,CAIR,qDACI,uCAAA,CAEA,8DACI,uCAAA,CAMhB,2CACI,iBAAA,CACA,iBAAA,CACA,YAAA,CACA,SAAA,CAGJ,sBACI,kBAAA,CACA,YAAA,CACA,qBAAA,CACA,WAAA,CAEA,4BACI,YAAA,CAIR,8BACI,gCAAA,CACA,WAAA,CAGJ,2BACI,6BAAA,CAGJ,wBACI,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,8BAAA,CAEA,0BACI,yBAAA,CAGJ,8BACI,YAAA,CAGJ,iCACI,8BAAA,CAIA,2CACI,oBAAA,CAKZ,uDACI,YAAA,CACA,kBAAA,CACA,iBAAA,CACA,kBAAA,CACA,uCAAA,CACA,kBAAA,CACA,SAAA,CAGJ,2CACI,sBAAA,CAGJ,wCACI,oBAAA,CAGJ,0BACI,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,qBAAA,CACA,SAAA,CACA,iCAAA,CAEA,mCACI,iBAAA,CACA,qBAAA,CAIA,8CACI,QAAA,CAIR,gCACI,YAAA,CAIR,4DACI,QAAA,CACA,wBAAA,CAGJ,4EACI,QAAA,CACA,0BAAA,CAGJ,+EACI,QAAA,CACA,yBAAA,CAIA,mDACI,oBAAA,CACA,qBAAA,CAKJ,sDACI,aAAA,CACA,qBAAA,CAKJ,0CACI,2BAAA,CAKJ,6CACI,0BAAA,CAIR,8CACI,yBAAA,CAGJ,+BAyBI,mCAAA,CACA,wCAAA,CACA,SAAA,CA1BA,0DACI,oCAAA,CAGJ,6DACI,uCAAA,CAGJ,uDACI,qCAAA,CAEA,gEACI,qCAAA,CAIR,yDACI,wCAAA,CAEA,kEACI,wCAAA,CASZ,qCACI,6DAAA,CvBndA,WA7BI,+DAAA,CAAA,4FAAA,CAAA,0EAAA,CAAA,oFAAA,CAAA,sFAAA,CAAA,yDAAA,CwBoDR,YACI,YAAA,CACA,iBAAA,CACA,oBAAA,CACA,kBAAA,CACA,6BAAA,CACA,UAAA,CACA,iBAAA,CACA,eAAA,CACA,mBAda,CAeb,4BAAA,CACA,uBAAA,CACA,wBAAA,CACA,SAAA,CACA,eAAA,CAGJ,2GACI,YAAA,CACA,kBAAA,CAGJ,qDxBdA,0BAAA,CACA,oBAAA,CAEA,eAAA,CwBaI,QA1BkB,CA2BlB,WAAA,CACA,gBAAA,CACA,YAAA,CACA,kBAAA,CAGJ,qCAEI,gBAAA,CAEA,6CACI,wBAAA,CAKJ,8HAEI,cAAA,CACA,4BAAA,CACA,0DAAA,CAEA,sJACI,6BAAA,CAKZ,kBAGI,WAAA,CxB/EA,eA7BI,oEAAA,CAAA,gGAAA,CAAA,kFAAA,CAAA,kHAAA,CAAA,oGAAA,CAAA,oGAAA,CAAA,wHAAA,CAAA,yGAAA,CAAA,mGAAA,CAAA,gHAAA,CAAA,wHAAA,CAAA,gHAAA,CAAA,6GAAA,CAAA,6HAAA,CAAA,8DAAA,CyBqHR,gBACI,qBAAA,CACA,uBAAA,CACA,+DoC9HG,CpC+HH,aAAA,CAGJ,uBACI,cAAA,CACA,WAAA,CACA,aAAA,CACA,eAAA,CACA,iBAAA,CACA,4BAAA,CACA,KAAA,CACA,QAAA,CACA,oBAAA,CACA,WAAA,CACA,0BAAA,CACA,oGAAA,CACA,wBAAA,CAEI,oDAAA,CAEJ,kCAAA,CAGJ,+BACI,iBAAA,CACA,eAAA,CAGJ,+BACI,iBAAA,CACA,cAAA,CACA,eAAA,CACA,SAAA,CAGJ,+DACI,kCAAA,CACA,eAAA,CAEA,yEACI,mCAAA,CAIR,gEACI,cAAA,CACA,OAAA,CACA,eAAA,CACA,WAAA,CAGJ,kCACI,mCAAA,CAMA,eAAA,CAJA,4CACI,kCAAA,CAMR,8BACI,uBAAA,CACA,kBAAA,CACA,sBAAA,CACA,sDAAA,CAGJ,6BACI,aAAA,CACA,2BAAA,CAEA,8GACI,sBAAA,CAOA,gIACI,qBAAA,CAKZ,+BACI,eAAA,CACA,2BAAA,CAGJ,yBACI,SAAA,CACA,yCAAA,CACA,6BAAA,CACA,6BAAA,CACA,6CAAA,CACA,sBAAA,CACA,iBAAA,CACA,oBAAA,CACA,KAAA,CACA,UAAA,CACA,WAAA,CACA,kBAAA,CACA,WAAA,CAGJ,iCACI,8BAAA,CACA,eAAA,CAGJ,iCACI,+CAAA,CACA,iBAAA,CACA,SAAA,CAGJ,iEAEI,kBAAA,CAGJ,oDACI,iBAAA,CACA,YAAA,CACA,kBAAA,CACA,oBAAA,CACA,4BAAA,CACA,eA1IgB,CA2IhB,cA1IgB,CA8IZ,uBAAA,CACA,oBAAA,CACA,QAAA,CAQJ,cAAA,CACA,gBAAA,CACA,qBAAA,CACA,kBAAA,CACA,uCAAA,CACA,oBAAA,CACA,uBAAA,CACA,WAAA,CACA,0BAAA,CAEA,sEACI,4BAAA,CAaJ,0EACI,wBAAA,CACA,WAAA,CAGJ,oFACI,eAxLY,CA2LhB,sFACI,WAAA,CACA,eAAA,CAGJ,gIAEI,uCAAA,CACA,kCAAA,CACA,eAAA,CAEA,oKACI,kCAAA,CAKZ,8BAEI,mCAAA,CACA,wCAAA,CAEA,uCACI,mCAAA,CAGJ,wEAEI,mCAAA,CACA,wCAAA,CAEA,0FACI,mCAAA,CAQR,0EACI,eAAA,CAEA,4FACI,kCAAA,CACA,mCAAA,CACA,sCAAA,CACA,QAAA,CAGJ,4KAEI,eAAA,CACA,WAAA,CAKZ,8BACI,aAAA,CACA,mBAAA,CACA,kBAAA,CACA,mCAAA,CAGJ,6BACI,QAAA,CACA,eAAA,CACA,eAAA,CACA,eAAA,CACA,iBAAA,CAGJ,mCACI,sBAAA,CzBvVA,0DA7BI,uFAAA,C8DSR,aACI,OAAA,CACA,QAAA,CACA,sBAAA,CAGJ,qHACI,cAAA,CACA,OAAA,CACA,wBAAA,CACA,kEAAA,CACA,mBAAA,CACA,aAAA,CACA,sBAAA,CAGJ,6BACI,kCAAA,CACA,sBAAA,CAGJ,4BACI,YAAA,CAGJ,sCACI,YAAA,CACA,iBAAA,CAGJ,kHACI,iBAAA,CACA,kBAAA,CACA,sBAAA,CAGJ,6BACI,sBAAA,CAGJ,+BACI,aAAA,CAGJ,gCACI,iBAAA,CAGJ,oBACI,uBAAA,C9D7BA,cA7BI,yFAAA,CAAA,qGAAA,CAAA,6FAAA,C+DiCR,4DACI,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,uBAAA,CACA,kCAAA,CACA,gBAAA,CACA,6CAAA,CACA,SAAA,CACA,gBAAA,CACA,aAAA,CACA,UAAA,CAEA,8EACI,SAAA,CAIR,qBACI,cAAA,CACA,WAAA,CAGJ,wBACI,gBAAA,CACA,cAAA,CAGJ,uBACI,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,UAAA,CAGJ,eACI,YAAA,CACA,0BAAA,CACA,kBAAA,CACA,MAAA,CAGJ,sBACI,uBAAA,C/DDJ,kBAAA,CACA,sBAAA,CACA,eAAA,C+DGA,uBACI,YAAA,CACA,kBAAA,CACA,cAAA,CAGJ,cACI,YAAA,CACA,wBAAA,CACA,kBAAA,CACA,MAAA,CAEA,gBACI,yBAAA,CAIA,iCACI,oBAAA,CAKZ,oBACI,YAAA,CnB1HI,yBoBRJ,GACI,mBAAA,CAGJ,KACI,wBAAA,CAAA,ChEkDJ,iBA7BI,0GAAA,CAAA,wHAAA,CAAA,4FAAA,CAAA,wEAAA,CAAA,oIAAA,CAAA,gIAAA,CiEmZR,kBACI,mBAAA,CACA,aAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CAEA,sBACI,UAAA,CACA,WAAA,CACA,iBAAA,CACA,kBAAA,CAEA,wBAAA,CAIR,iCrBzZA,iDAAA,CqB4ZI,2CACI,2BAAA,CAIR,yBACI,mBAjCW,CAkCX,kBAAA,CACA,+BAAA,CAGJ,yBACI,kBAAA,CACA,mBAxCW,CAyCX,qBAAA,CACA,oBAAA,CAOJ,0DACI,oBAAA,CrBnbJ,yFAAA,CqBsbI,wIACI,2BAAA,CAIR,wBACI,iBAAA,CACA,qBAAA,CACA,sBAAA,CACA,+BAAA,CACA,cAAA,CACA,aAAA,CACA,iBAAA,CACA,eAAA,CACA,sBAAA,CAGJ,yDACI,iBAAA,CAGJ,kCACI,6CAAA,CAGJ,gCACI,2CAAA,CrB7eI,mCqBifJ,KACI,qBAAA,CACA,oBAAA,CAGJ,GACI,qBAAA,CAAA,CjExcJ,eA7BI,4FAAA,CAAA,gHAAA,CAAA,0GAAA,CAAA,0GAAA,CAAA,oGAAA,CAAA,gHAAA,CAAA,kFAAA,CAAA,0FAAA,CAAA,sEAAA,CiE8FR,gBACI,iBAAA,CACA,YAAA,CACA,UAAA,CACA,aAAA,CACA,qBAAA,CAII,+FACI,yBAAA,CAKZ,sBACI,iBAAA,CACA,aAAA,CACA,aAnDS,CAoDT,6BAAA,CACA,eAAA,CACA,iHAAA,CACA,SAAA,CAGJ,2BACI,UAAA,CACA,iBAAA,CACA,WAAA,CAGJ,oDA5FA,sLAAA,CAmGI,6BAlDc,CAoDd,4HArGJ,qLAAA,CA8GA,8HAGI,yBAAA,CACA,qBAAA,CACA,cAAA,CACA,iBAAA,CACA,wBAAA,CAEA,4IACI,UAAA,CACA,iBAAA,CACA,KAAA,CACA,oBAAA,CACA,aAAA,CACA,cAAA,CACA,oCAAA,CACA,0BAAA,CAIR,0DACI,0BAAA,CACA,sDAAA,CACA,iBAAA,CAEA,iEACI,4DAAA,CAIR,oEACI,wDAAA,CACA,gBAAA,CAEA,2EACI,8DAAA,CACA,UAAA,CACA,cAAA,CAIR,2BACI,oCAAA,CAGJ,mDACI,yCAAA,CAGJ,oDACI,0CAAA,CAGJ,iDACI,uCAAA,CAGJ,oDACI,0CAAA,CAGJ,iOACI,QAlHW,CAmHX,uBAAA,CACA,iBAtHO,CAuHP,eAtHO,CAyHX,qDACI,qBAAA,CAGJ,+BACI,iBAAA,CAGJ,4BACI,mBAAA,CAGJ,4BACI,QAAA,CAGJ,qFACI,YAAA,CAiBJ,iCACI,GACI,uBAAA,CAGJ,IACI,kEApBiC,CAqBjC,uBAAA,CAGJ,OACI,0EAxBiC,CAyBjC,+BAAA,CAGJ,KACI,iCAAA,CAAA,CAIR,uCACI,GACI,sBAAA,CAGJ,OACI,sEArC6B,CAsC7B,sBAAA,CAGJ,OACI,sEA1C6B,CA2C7B,0BAAA,CAGJ,KACI,sBAAA,CAAA,CAIR,mCACI,GACI,mEAlDmC,CAmDnC,uBAAA,CAGJ,IACI,wEAtDmC,CAwDnC,gCAAA,CAGJ,OACI,oEA3DmC,CA4DnC,gCAAA,CAGJ,KACI,iCAAA,CAAA,CAIR,yCACI,GACI,mEApE+B,CAqE/B,sBAAA,CAGJ,OACI,wEAxE+B,CAyE/B,0BAAA,CAGJ,OACI,oEA5E+B,CA6E/B,yBAAA,CAGJ,KACI,sBAAA,CAAA,CjExSJ,UA7BI,wDAAA,CAAA,yHAAA,CAAA,uFAAA,CAAA,uFAAA,CAAA,+FAAA,CAAA,2GAAA,CAAA,6FAAA,CAAA,yGAAA,C0B6FR,WACI,iBAAA,CACA,mBAAA,CACA,oBAAA,CACA,kBAAA,CACA,wBAAA,CAGJ,kB1BbA,iBAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,WAAA,CACA,qBAAA,CACA,SAAA,CACA,mBAAA,CACA,eAAA,CACA,eAAA,C0BQA,qBACI,mBAAA,CACA,iCAAA,CACA,gBAAA,CAGJ,sBACI,iBAAA,CACA,oBAAA,CACA,aAlEG,CAmEH,cAnEG,CAoEH,iBApEG,CAqEH,mBArEG,CAsEH,cAAA,CACA,wBAAA,CAEA,gBAAA,CAEA,2DAEI,iBAAA,CACA,UAAA,CACA,aA/ED,CAgFC,cAhFD,CAiFC,oBAAA,CACA,KAAA,CACA,mEAlDQ,CAqDZ,8BACI,0BAAA,CACA,kBAAA,CAGI,0BAxDC,CA2DL,SAAA,CAGJ,6BACI,uCAAA,CAKJ,kDACI,sCAAA,CACA,4BAAA,CACA,oBAnGA,CA2GJ,iDACI,sCAAA,CASJ,+FACI,6BAAA,CAMJ,iHACI,kCAAA,CACA,2CAAA,CAGJ,+GAIQ,2CAAA,CAMR,kDACI,0CAAA,CAUJ,qEACI,0CAAA,CAGJ,sEACI,gCAAA,CACA,kCAAA,CAeR,4CACI,kBAAA,CACA,cAAA,CACA,gBAAA,CACA,mBAAA,CAEA,wDACI,YAAA,CAIR,kBACI,2BApMW,CAuMf,0BACI,QAAA,CACA,yBAzMW,CA8MX,wDACI,QAAA,CAIR,mBAGI,aAtLa,CAuLb,iBAAA,CACA,sBAAA,CACA,qCAAA,CACA,UA/KU,CAgLV,WAhLU,CAiLV,yEAAA,CACA,eAAA,CACA,mBAAA,CACA,iBAAA,C1BxOA,kDAjCI,mDAAA,CuCSR,sCACI,aAAA,CACA,iBAAA,CACA,mEAAA,CACA,uBAAA,CACA,mBAAA,CACA,uBAAA,CACA,uCAAA,CACA,6BAAA,CACA,UAAA,CACA,mBAAA,CACA,sBAAA,CAGJ,+BACI,eAAA,CvCSA,kDAjCI,mDAAA,C0BwTR,iGACI,6BAAA,CACA,8DAAA,CACA,WAAA,CAGJ,0DACI,4BAAA,CAIA,gMACI,iBAAA,CACA,UAAA,CACA,WAAA,CACA,OAAA,CAKJ,uFACI,6BAAA,CAKJ,yGACI,4BAAA,CAKJ,iGACI,WAAA,C1B5TJ,kBA7BI,4FAAA,CAAA,2GAAA,CAAA,2GAAA,CAAA,2GAAA,CAAA,yHAAA,CAAA,6GAAA,CAAA,2HAAA,CkEgDR,mBACI,UAAA,CACA,kBAAA,CACA,kCAAA,CACA,2EAAA,CACA,iCAAA,CAGJ,2BACI,YAAA,CACA,kBAAA,CACA,YArByB,CAsBzB,yCAAA,CACA,8BAAA,CACA,gBAAA,CAEA,4EAEI,eAAA,CAIR,yBACI,aAAA,CACA,YAAA,CACA,aAAA,CACA,oBAAA,CACA,mBAAA,CAEA,iDACI,yBAAA,CAKJ,oDACI,oCAAA,CACA,qCAAA,CACA,wCAAA,CACA,uBAAA,CAIR,iBACI,YAAA,CAEA,+HAGI,eA3DqB,CA+D7B,uBACI,WAAA,CACA,eAAA,CACA,qBAAA,CACA,sBAhE2B,CAiE3B,kBAAA,CACA,2EAAA,CACA,cAAA,CAGJ,4BACI,gCAAA,CAEA,4DACI,uCAAA,CAGJ,kCACI,2DAAA,CAIR,2BACI,+BAAA,CAEA,2DACI,4CAAA,CAGJ,iCACI,0DAAA,CAIR,6BACI,YAAA,CACA,qBAAA,CACA,sBAAA,CAGJ,kCACI,YAAA,CACA,kBAAA,CAEA,kLAGI,eA9GqB,CAiHzB,sDACI,YAAA,CAIR,oCACI,eAAA,CAGJ,qCACI,mBAAA,CACA,cAAA,CAEA,8CACI,cAAA,CACA,gDAAA,CACA,kBAAA,CAEA,wGAEI,gDAAA,CAIR,uDACI,yBAAA,CAIR,uCACI,UAAA,CAGJ,0BACI,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,eAtJyB,CAwJzB,0JAGI,eA3JqB,CA+J7B,yBACI,YAAA,CACA,6BAAA,CACA,kBAAA,CAEA,+PAKI,yBAAA,CAGJ,qGAEI,eA9KqB,CAkL7B,iCACI,YAAA,CACA,cAAA,CACA,kBAAA,CAEA,6CACI,eAAA,CAGJ,yDACI,yBAAA,CAIR,oBACI,YAAA,CACA,wBAAA,CACA,mBAAA,CAGJ,uFACI,iBAAA,CACA,mBAAA,CACA,kBAAA,CACA,gBAAA,CAEA,+GACI,UAAA,CACA,YAAA,CACA,aAAA,CACA,eAAA,CACA,2EAAA,CACA,uBAAA,CAGJ,0gBACI,0BAAA,CAIR,uCACI,gCAAA,CAGJ,sCACI,+BAAA,CAGJ,4BACI,iBAAA,CACA,YAAA,CACA,gBAAA,CACA,cAAA,CACA,kCAAA,CACA,YAAA,CACA,wBAAA,CACA,2EAAA,CACA,gEAAA,CAEA,oKAGI,eAhPqB,CAmPzB,wLAEI,YAAA,CAGJ,mDACI,yBAAA,CAGJ,8CACI,eAAA,CAIR,wCACI,kDAAA,CAKA,4FAOQ,kDAAA,CAKZ,uCACI,iBAAA,CACA,aAAA,CACA,0BAAA,CACA,kCAAA,CACA,gEAAA,CAEA,0FAGQ,kCAAA,CAKZ,kBACI,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,WAAA,CAGJ,yBACI,gDAAA,CAIA,kDACI,mBAAA,CACA,oBAAA,CAGJ,2CACI,gBAAA,CAGJ,sGAEI,mBAAA,CAGJ,gDACI,wBAzTgB,CA6ThB,0MAGI,iBAnUU,CAwUd,6PAGI,iBA3UU,CA+UlB,mDACI,iBAhVc,CAkVd,qOAGI,iBArVU,CA0Vd,uJAEI,iBA5VU,CAkWlB,qDACI,mBAAA,CACA,qBAAA,CAGJ,8CACI,cAAA,CAGJ,4GAEI,kBAAA,CAGJ,0EACI,oCAAA,CACA,qCAAA,CACA,wCAAA,CAGJ,mDACI,uBAnXmB,CAuXnB,mNAGI,gBA7Xa,CAkYjB,sQAGI,gBArYa,CAyYrB,sDACI,gBA1YiB,CA4YjB,8OAGI,gBA/Ya,CAoZjB,6JAEI,gBAtZa,CA2ZzB,2BACI,YAAA,CACA,qBAAA,CACA,UAAA,CACA,cAAA,CACA,cAAA,CACA,kBAAA,CACA,eAAA,CACA,eAAA,CAEA,oDACI,kBAAA,CACA,kBAAA,CACA,WAAA,CAKJ,sLAGI,iBAjbc,CAsblB,+LAGI,gBAxbiB,ClEXrB,cA7BI,sCAAA,CAAA,oGAAA,CAAA,oGAAA,CmEcR,cAEQ,2BAAA,CAGJ,+DAAA,CAEA,kCACI,iBAAA,CACA,kBAAA,CACA,kCAAA,CAGJ,wCACI,kCAAA,CAIR,oBACI,kCACI,UAAA,CACA,WAAA,CAAA,CnENJ,WA7BI,kGAAA,CAAA,4GAAA,CAAA,+DAAA,CAAA,8GAAA,CAAA,kGAAA,CAAA,qEAAA,CAAA,gHAAA,CAAA,4HAAA,CAAA,wHAAA,CAAA,0GAAA,CAAA,8GAAA,CAAA,mFAAA,CAAA,2FAAA,CAAA,uGAAA,CAAA,oHAAA,CAAA,oHAAA,CAAA,sFAAA,CAAA,kGAAA,C2B4HR,YACI,YAAA,CACA,iBAAA,CAGA,SAAA,CACA,WA9DY,CA+DZ,WAAA,CACA,kBAAA,CACA,uDAAA,CAGI,0CACI,mCAAA,CAGJ,8CACI,wCAAA,CAWZ,sBACI,mBAAA,CAEA,kDACI,2CAAA,CAIR,oBACI,iBAAA,CACA,UAAA,CACA,QAAA,CACA,cAAA,CACA,SAAA,CACA,oBAAA,CAGJ,mBACI,iBAAA,CACA,UAAA,CACA,cAAA,CACA,eAAA,CACA,qEAAA,CAOJ,4BACI,iBAAA,CACA,UAAA,CACA,cAAA,CACA,kCAAA,CACA,8DAAA,CACA,qBAAA,CAGI,aAAA,CACA,OAAA,CACA,0BAAA,CAIR,wBACI,iBAAA,CACA,UAAA,CACA,6BAAA,CACA,4BAAA,CACA,mBAAA,CACA,qBAAA,CACA,cAAA,CAEA,kCACI,6BAAA,CAQR,8CACI,2CAAA,CAGJ,mBACI,UAAA,CACA,YAAA,CACA,iBAAA,CACA,QAAA,CACA,6BAAA,CAEA,0CACI,WAAA,CACA,KAAA,CACA,oBAAA,CAIR,yBACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,iBAAA,CAEA,uCACI,8BAAA,CAGJ,sCACI,8BAAA,CAIR,yBACI,6BAAA,CACA,iBAAA,CACA,QA/JgB,CAgKhB,yBAAA,CACA,cAAA,CACA,SAAA,CACA,8DAAA,CAEA,mCACI,SAAA,CAIR,wBACI,4BAAA,CACA,YA9Ke,CA+Kf,aA5KS,CAgLT,kDACI,uBAAA,CAIR,8CACI,sDAAA,CAGJ,+CACI,iDAAA,CAIA,uDACI,WAhMY,CAmMhB,wDACI,uBAAA,CAKJ,iDACI,4BAAA,CACA,QAAA,CAIA,yEACI,0BAAA,CACA,QAAA,CAKZ,gCACI,SAAA,CAGJ,yBACI,iBAAA,CACA,YAAA,CACA,UAAA,CACA,aAAA,CACA,WAAA,CACA,+BAAA,CACA,OAAA,CACA,0BAAA,CACA,6BAAA,CAEA,6BACI,wCAAA,CAGJ,8BACI,mBAAA,CACA,mCAAA,CACA,oBAAA,CAKJ,8DACI,aAAA,CAGJ,8DACI,wBAAA,CACA,sCAAA,CAIA,uFACI,yBAAA,CAKJ,qFACI,wBAAA,CACA,sCAAA,CAIA,8GACI,4BAAA,CAOZ,8DACI,aAAA,CAGJ,8DACI,wBAAA,CACA,wCAAA,CAIA,qFACI,wBAAA,CACA,wCAAA,CAIA,8GACI,4BAAA,CAMhB,4CACI,iBAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,qBAAA,CACA,aAAA,CACA,cAAA,CACA,kBAAA,CACA,aAAA,CACA,6BAAA,CAGI,8EACI,WAAA,CACA,kBAAA,CAGJ,8EACI,WAAA,CACA,kBAAA,CAIR,gFACI,8CAAA,CA2BJ,oGACI,eAAA,CAOJ,kGACI,kBAAA,CAIR,wDACI,iBAAA,CACA,mBAAA,CACA,YAAA,CACA,mCAAA,CACA,eA/XiB,CAkYrB,8EACI,qBAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,kBAAA,CACA,wBAAA,CACA,iBAAA,CACA,wCAAA,CACA,6BAAA,CACA,gBA7YgB,CA8YhB,SAAA,CAEA,4FACI,UAAA,CACA,iBAAA,CACA,OAAA,CACA,+CAAA,CACA,6CAAA,CACA,sDAAA,CAIR,sDACI,iBAAA,CACA,oBAAA,CACA,mBAAA,CAEA,sEACI,iBAAA,CACA,UAAA,CACA,aAAA,CACA,cAAA,CACA,uBAAA,CACA,0BAAA,CACA,0CAAA,CACA,6BAAA,CACA,2CAAA,CACA,oHAAA,CACA,6EAAA,CAIA,oEACI,iBAAA,CACA,UAAA,CACA,YAnbE,CAobF,aApbE,CAqbF,6BAAA,CACA,uBAAA,CACA,sCAAA,CACA,SAAA,CACA,kBAAA,CACA,8BAAA,CACA,8GAAA,CACA,mEAAA,CACA,eAAA,CAKZ,sHACI,mBAAA,CAEA,sIACI,sCAAA,CACA,+CAAA,CACA,6EAAA,CAMA,kIACI,sBAAA,CACA,6BAAA,CAKZ,sJACI,SAAA,CAGJ,wJACI,SAAA,C3BlgBA,aA7BI,iEAAA,CAAA,2EAAA,CAAA,yEAAA,CAAA,sGAAA,CAAA,iHAAA,CAAA,2DAAA,C4ClBA,mBwB8IJ,GACI,SAAA,CAGJ,KACI,SAAA,CAAA,CxC/ER,cACI,iBAAA,CACA,YAAA,CACA,oBAAA,CACA,kBAAA,CACA,6BAAA,CACA,eAZkB,CAalB,uBAZe,CAaf,YAAA,CACA,uBAAA,CACA,4BAAA,CACA,0BAAA,CACA,wBAAA,CACA,kCAAA,CACA,yBAAA,CAGJ,uBgBxDA,kCAAA,ChB4DA,sBACI,wBAAA,CACA,yBAAA,CACA,QAAA,CACA,gBA5B0B,CA6B1B,0BA9B0B,CA+B1B,wBAAA,CACA,gBAAA,CACA,eA/B0B,CAgC1B,yCAAA,CACA,YAAA,CACA,yBAAA,CACA,iBAAA,CACA,mBAAA,CACA,cAAA,CgB1EJ,kCAAA,ChB6EI,4BACI,yBAAA,C5B5DJ,WA7BI,+EAAA,CAAA,2EAAA,CAAA,iFAAA,CAAA,2DAAA,CAAA,uEAAA,CAAA,6EAAA,CAAA,iEAAA,CAAA,6EAAA,CAAA,wGAAA,CAAA,wGAAA,CAAA,+FAAA,CAAA,0GAAA,CAAA,yHAAA,CAAA,gGAAA,CAAA,0GAAA,CAAA,0HAAA,CAAA,wFAAA,CAAA,0GAAA,CAAA,+HAAA,CAAA,6HAAA,CAAA,2HAAA,CAAA,yEAAA,CAAA,qEAAA,CAAA,2EAAA,C6BiNR,YACI,iBAAA,CACA,mBAAA,CACA,oBAAA,CACA,kBAAA,CAGJ,mB7BhIA,iBAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,WAAA,CACA,qBAAA,CACA,SAAA,CACA,mBAAA,CACA,eAAA,CACA,eAAA,C6B2HA,sBACI,gBAAA,CACA,mBAAA,CACA,cAAA,CAGJ,uBACI,YAAA,CACA,kBAAA,CACA,aAAA,CACA,cAAA,CACA,yCAAA,CACA,wCAAA,CACA,iCAAA,CACA,cAAA,CACA,gBAAA,CACA,0DAlCe,CAyCX,0DAEI,sCAAA,CAiBZ,4CACI,gCAAA,CACA,mCAAA,CAEA,oGAEI,yCAAA,CAUR,6CACI,sCAAA,CACA,yCAAA,CAGJ,6BACI,iBAAA,CACA,aAAA,CACA,aAAA,CACA,WA7IiB,CA8IjB,iBAAA,CACA,wCAAA,CACA,iCAAA,CACA,gCArHmB,CAsHnB,0DA1Fe,CA2Ff,gCAAA,CAEA,uCACI,+BAAA,CAIA,mCACI,8BAxHS,CA6HrB,kDACI,gCAAA,CACA,+BAAA,CAEA,wHACI,gCAAA,CAIR,mDACI,sCAAA,CACA,iCAjIoB,CAoIxB,oBAGI,aA5Ja,CA6Jb,iBAAA,CACA,sBAAA,CACA,qCAAA,CACA,UAlIU,CAmIV,WAnIU,CAoIV,eAAA,CACA,mBAAA,CACA,iBAAA,CACA,yCAAA,C7B3SA,oDAjCI,uDAAA,CuCSR,uCACI,aAAA,CACA,iBAAA,CACA,mEAAA,CACA,uBAAA,CACA,mBAAA,CACA,uBAAA,CACA,uCAAA,CACA,6BAAA,CACA,UAAA,CACA,mBAAA,CACA,sBAAA,CAGJ,gCACI,eAAA,CvCSA,oDAjCI,uDAAA,C6ByYA,iEACI,yCAAA,CAGJ,uEACI,yCAAA,CAWZ,sGACI,iCAAA,CACA,8DAAA,CACA,WAAA,CAGJ,6DACI,gCAAA,CAGJ,8CACI,oBAAA,CACA,wBAAA,CACA,cAAA,CACA,gBAAA,CACA,mBAAA,CAEA,0DACI,QAAA,CAMJ,0DACI,QAAA,CAIR,mBACI,yBA/OW,CAkPf,2BACI,QAAA,CACA,uBApPW,CAuPf,0FACI,iCAAA,CAIA,wMACI,iBAAA,CACA,UAAA,CACA,WAAA,CACA,OAAA,CAKJ,2FACI,iCAAA,CAKJ,6GACI,gCAAA,CAKJ,qGACI,WAAA,C7B7bJ,SA7BI,8FAAA,CAAA,oGAAA,CAAA,0GAAA,CAAA,gGAAA,CAAA,wGAAA,CAAA,8FAAA,CAAA,kHAAA,CAAA,0GAAA,CAAA,gHAAA,CAAA,4GAAA,CAAA,sGAAA,CAAA,oGAAA,CAAA,wFAAA,CAAA,wGAAA,CAAA,8GAAA,CAAA,oGAAA,CAAA,0GAAA,CAAA,gGAAA,CAAA,sGAAA,CAAA,yDAAA,CAAA,uEAAA,CAAA,uGAAA,C8BkMR,kGAII,YAAA,CAGJ,UACI,YAAA,CACA,qBAAA,CACA,eAAA,CAGJ,kBACI,eAAA,CACA,aAAA,CACA,iCAAA,CACA,mBAAA,CACA,SAAA,CAGJ,0BACI,aAAA,CACA,eAAA,CACA,sBAAA,CAGJ,0BACI,iBAAA,CACA,WAAA,CAgBJ,yBACI,YAAA,CACA,WAAA,CAGJ,yBACI,kBAAA,CACA,sBAAA,CACA,SAAA,CACA,WAAA,CACA,SAAA,CACA,cAAA,CACA,UAAA,CACA,cAAA,CACA,iBAAA,CACA,mCAAA,CACA,yBAAA,CACA,SAAA,CAEA,+BACI,yCAAA,CACA,+BAAA,CAGJ,+BACI,SAAA,CACA,yCAAA,CAGJ,2CAEI,QAAA,CAGJ,kCACI,kCAAA,CAGJ,+BACI,YAAA,C9BrPJ,8DAjCI,4DAAA,CuCSR,4CACI,aAAA,CACA,iBAAA,CACA,mEAAA,CACA,uBAAA,CACA,mBAAA,CACA,uBAAA,CACA,uCAAA,CACA,6BAAA,CACA,UAAA,CACA,mBAAA,CACA,sBAAA,CAGJ,qCACI,eAAA,CvCSA,8DAjCI,4DAAA,C8B6RJ,mCACI,oBAAA,CAIR,uBAQI,mBAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBAjIa,CAkIb,iBAjIa,CAkIb,oBAAA,CAEA,eAAA,CACA,aAAA,CACA,qBAlIW,CAmIX,eAAA,CACA,cAAA,CACA,iBAAA,CACA,gBAAA,CACA,iCAAA,CACA,4BAAA,CACA,SAAA,CAgDI,iDAAA,CACA,yCAAA,CAxEJ,yBACI,0BAAA,CAEA,qCACI,qBAAA,CAqBR,gCACI,4BAAA,CAaJ,yCACI,QAAA,CAGJ,6BACI,wCAAA,CACA,6BAAA,CACA,iCAAA,CAGJ,6BACI,uCAAA,CACA,6BAAA,CASA,4EACI,kCAAA,CAaJ,0DAEI,gDAAA,C9B9UR,0DAjCI,yDAAA,CuCSR,0CACI,aAAA,CACA,iBAAA,CACA,mEAAA,CACA,uBAAA,CACA,mBAAA,CACA,uBAAA,CACA,uCAAA,CACA,6BAAA,CACA,UAAA,CACA,mBAAA,CACA,sBAAA,CAGJ,mCACI,eAAA,CvCSA,0DAjCI,yDAAA,C8BkYR,iCACI,SAAA,CACA,8BAAA,CAEA,8EAEI,wCAAA,CACA,8BAAA,CAEA,gGACI,mCAAA,CAIR,0CACI,mCAAA,CAuCR,iCACI,SAAA,CACA,gCAAA,CACA,cAAA,CACA,mBAAA,CAEA,0CACI,qCAAA,CAIR,6BACI,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,qBAAA,CACA,iBAAA,CAEA,iD9B9YJ,0BAAA,CACA,oBAAA,CACA,2BAAA,CACA,eAAA,C8B+YI,gDACI,mBAAA,CAEA,2DACI,eAAA,CAKZ,mCACI,iBAAA,CACA,QAAA,CAEA,MAAA,CACA,uBAAA,CACA,cAAA,CACA,kBAlTa,CAmTb,iCAAA,CACA,gGAAA,CAMJ,kBACI,iBAAA,CACA,eAAA,CACA,YAAA,CACA,qBAAA,CACA,aAAA,CAGJ,iBACI,iBAAA,CACA,OAAA,CACA,iBAAA,CACA,eAAA,CACA,aAAA,CAEA,mCAEI,QAAA,CAGJ,uBACI,eAAA,CAGJ,+BACI,iBAAA,CAIR,gCACI,0BAAA,CAGJ,8BACI,wBAAA,CACA,qBAAA,CAGJ,iCACI,sBAAA,CACA,qBAAA,CAIA,yDACI,YAAA,CACA,WAAA,CACA,cAAA,C9BxfJ,YA7BI,kEAAA,CAAA,6GAAA,CAAA,6GAAA,CAAA,2GAAA,CAAA,qGAAA,CAAA,kFAAA,CAAA,yFAAA,CAAA,qGAAA,CAAA,qGAAA,CAAA,+FAAA,CAAA,2GAAA,CAAA,2GAAA,CAAA,oFAAA,CAAA,+HAAA,CAAA,+HAAA,CAAA,6HAAA,CAAA,uHAAA,CAAA,oGAAA,CAAA,2GAAA,CAAA,uHAAA,CAAA,uHAAA,CAAA,iHAAA,CAAA,6HAAA,CAAA,6HAAA,CAAA,kFAAA,CAAA,6HAAA,CAAA,6HAAA,CAAA,iIAAA,CAAA,2HAAA,CAAA,kGAAA,CAAA,yGAAA,CAAA,qHAAA,CAAA,qHAAA,CAAA,+GAAA,CAAA,2HAAA,CAAA,2HAAA,CAAA,kFAAA,CAAA,6HAAA,CAAA,6HAAA,CAAA,6HAAA,CAAA,uHAAA,CAAA,kGAAA,CAAA,2GAAA,CAAA,uHAAA,CAAA,uHAAA,CAAA,iHAAA,CAAA,6HAAA,CAAA,6HAAA,CAAA,mHAAA,CAAA,6HAAA,CAAA,uHAAA,CAAA,2GAAA,CAAA,iHAAA,CAAA,2GAAA,CAAA,6HAAA,CAAA,uEAAA,CAAA,wFAAA,CAAA,oIAAA,CAAA,kIAAA,CgC2UR,wEAII,YAAA,CAGJ,aACI,qBAAA,CACA,UAAA,CAGJ,qBACI,kBAAA,CACA,qBAAA,CACA,UAAA,CAGJ,mBACI,iBAAA,CAGJ,2FAII,eAAA,CAGJ,yBACI,wBAAA,CAGJ,4BACI,2BAAA,CAGJ,mBACI,iBAAA,CACA,qBAAA,CACA,oBAAA,CACA,sBAAA,CACA,iBAAA,CAEA,yBACI,YAAA,CAEA,kDACI,8BAAA,CAGJ,qDACI,iCAAA,CAGJ,mDACI,uCAAA,CACA,8BAAA,CAOJ,4DACI,0DAAA,CAEA,qFACI,sCAAA,CAGJ,wFACI,yCAAA,CAIR,4DACI,+CAAA,CAEA,qFACI,sCAAA,CAGJ,wFACI,yCAAA,CAOJ,mEACI,iBAAA,CAOJ,2EACI,YAAA,CAKJ,iEACI,iBAAA,CAMhB,0BACI,YAAA,CACA,cAxJkB,CAyJlB,iBAAA,CACA,kBAAA,CACA,qBAAA,CACA,sBAAA,CACA,SA9IQ,CA+IR,cAAA,CACA,iCAAA,CACA,8CAAA,CAEA,gCACI,uCAAA,CACA,8BAAA,CAUR,6BACI,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,iBAAA,CACA,gBAAA,CACA,aA3La,CA4Lb,YA5La,CA6Lb,kBAAA,CACA,4CAAA,CACA,4BAAA,CACA,sCAAA,CACA,kDAAA,CAGI,sCACI,mDAAA,CACA,oDAAA,CACA,uDAAA,CACA,aAAA,CAUR,wIAGI,iBArNS,CAsNT,gBAtNS,CA0NjB,mCACI,oDAAA,CACA,gCAAA,CAEA,gEACI,+CAAA,CACA,yDAAA,CACA,qEAAA,CAGJ,4DACI,gCAAA,CAGJ,+DACI,mCAAA,CAGJ,yCACI,0DAAA,CAEA,kEACI,sCAAA,CAGJ,qEACI,yCAAA,CAKZ,6BACI,iCAAA,CACA,mBAAA,CACA,cAAA,CAEA,0DACI,qCAAA,CACA,+CAAA,CACA,2DAAA,CAGJ,sDACI,iCAAA,CAGJ,yDACI,oCAAA,CAIR,mCACI,yCAAA,CACA,gCAAA,CAEA,gEACI,oCAAA,CACA,8CAAA,CACA,0DAAA,CAGJ,4DACI,gCAAA,CAGJ,+DACI,mCAAA,CAGJ,yCACI,+CAAA,CAEA,kEACI,sCAAA,CAGJ,qEACI,yCAAA,CAKZ,oDACI,aAAA,CACA,iBAAA,CACA,OAAA,CACA,UAAA,CACA,WAAA,CACA,eAAA,CACA,iBAAA,CACA,UAAA,CAGJ,uFAEI,YApSgB,CAuSpB,4DACI,SAAA,CACA,iBAAA,CAGJ,mCACI,+CAzSY,CA0SZ,iBAAA,CACA,eAAA,CAEA,2CACI,UAAA,CACA,iBAAA,CACA,uCAAA,CACA,0BAAA,CACA,6BAAA,CACA,cAzSS,CA0ST,oFAAA,CAIR,iCACI,kBAAA,CACA,sBAAA,CACA,cAAA,CAEA,uCACI,YAAA,CAGJ,mCACI,aAAA,CACA,sBAAA,CACA,kBAAA,CACA,eAAA,CAMJ,sGACI,kBAAA,CACA,kBAAA,CAOJ,oHACI,QAAA,CAMJ,wDACI,0CAAA,CAEA,8DACI,gDAAA,CACA,uFACI,uCAAA,CAGJ,0FACI,0CAAA,CAIR,+DACI,gEAAA,CACA,gEAAA,CAIR,2DACI,qCAAA,CACA,+CAAA,CACA,2DAAA,CAGJ,uDACI,iCAAA,CAGJ,0DACI,oCAAA,CAIA,8DACI,gDAAA,CAEA,uFACI,uCAAA,CAGJ,0FACI,0CAAA,CAMR,yEACI,8DAAA,CACA,8DAAA,CAMR,yDACI,gEAAA,CACA,gEAAA,CAIA,mFACI,gEAAA,CACA,gEAAA,CAMR,wDACI,gBA5bS,CA6bT,iBA7bS,CA8bT,aAAA,CACA,cAAA,CAEA,yNAGI,iBAAA,CACA,kBAAA,CAOR,8CACI,kBAAA,CAGJ,4CACI,eAAA,CACA,kBAAA,CACA,WAAA,CAEA,oDACI,UAAA,CACA,UAAA,CACA,iBAAA,CACA,eAtbK,CAubL,MAAA,CACA,iBAAA,CACA,UAAA,CACA,iDAlba,CAmbb,2EAAA,CAGJ,0DACI,WAAA,CACA,WAAA,CAEA,kEACI,YAAA,CAKZ,mDACI,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,sBAAA,CAEA,qHAEI,UAAA,CACA,iBAAA,CACA,UAAA,CACA,eAndK,CAodL,oCAAA,CACA,iDA7ca,CA8cb,MAAA,CACA,2EAAA,CAGJ,2DACI,oBAAA,CAGJ,0DACI,kBAAA,CAIR,oDACI,iBAAA,CAEA,8EACI,iBAAA,CACA,aA7fiB,CA8fjB,WAAA,CAEA,2KAEI,YAAA,CAKJ,8EACI,+BAAA,CAKZ,0DACI,UAAA,CAIA,2EACI,wBAAA,CAEA,qKAEI,0DA3fM,CAggBV,2EACI,2EAAA,CACA,0DAlgBM,CAwgBd,8EACI,0BAAA,CAMJ,uKACI,iBAAA,CAGJ,yJACI,qBAAA,CAKJ,oFACI,cAAA,CAMJ,8JACI,aAAA,CAGJ,wJAEQ,wBAAA,CAGJ,8UAEI,YAAA,CAKJ,wJACI,+BAAA,CAMR,0DACI,YAAA,CAGJ,4DACI,YAAA,CAIR,4DACI,iBAAA,ChC52BJ,UA7BI,8DAAA,CAAA,wEAAA,CAAA,sEAAA,CAAA,gHAAA,CAAA,wDAAA,CiC2DR,WACI,mBAAA,CACA,sBAAA,CACA,kBAAA,CACA,oBApBK,CAqBL,mBAnBM,CAoBN,iBAvBI,CAwBJ,uBAAA,CACA,4BAAA,CACA,WAhBK,CAiBL,kCAAA,CACA,gCAAA,CACA,0BAAA,CjC1CA,2CA7BI,0EAAA,CAAA,wEAAA,CAAA,gHAAA,CkC+BR,wDACI,mBAAA,CACA,sBAAA,CACA,qBAAA,CACA,4BAAA,CACA,uBAAA,CACA,kCAAA,CACA,aAAA,CAGJ,sBACI,eAAA,CACA,iBAAA,CAGJ,qBACI,cAAA,CACA,eAAA,ClCnBA,iBA7BI,iFAAA,CAAA,sFAAA,CAAA,2FAAA,CAAA,iHAAA,CAAA,uHAAA,CAAA,mHAAA,CAAA,6GAAA,CAAA,wFAAA,CAAA,mHAAA,CAAA,yGAAA,CAAA,6GAAA,CAAA,6GAAA,CAAA,oHAAA,CAAA,gJAAA,CAAA,2EAAA,CAAA,gFAAA,C+BqHR,iBACI,YAAA,CACA,uBAAA,CACA,kBAAA,CACA,eAAA,CACA,kCAAA,CACA,8BAAA,CACA,eAAA,CAGJ,2BACI,oBAAA,CACA,kBAAA,CAGJ,uBACI,kCAAA,CACA,aAAA,CAGJ,2BACI,iBAAA,CACA,iCAAA,CAGJ,uBACI,YAAA,CACA,iBAAA,CACA,sBAAA,CAkBJ,2BACI,cAAA,CAEA,qCACI,OAAA,CAIR,6BACI,iBAAA,CAEA,uCACI,OAAA,CAIR,8BACI,iBAAA,CAGJ,2BACI,YAAA,CACA,qBAAA,CACA,gBAAA,CAEA,qCACI,OAAA,CAIR,yBACI,cAAA,CACA,iBAAA,CACA,SAAA,CACA,cAAA,CACA,YAAA,CACA,uBAAA,CACA,6BAAA,CACA,kBAAA,CACA,uBAAA,CACA,eAAA,CAEA,+DAEI,YAAA,CAIR,uBACI,cAAA,CACA,wBAAA,CACA,8CAAA,CACA,WAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CAEA,2DAEI,YAAA,CAGJ,6BACI,6BAAA,CAIR,iCACI,gBAAA,CACA,gCAAA,CAGJ,+BACI,wCAAA,CAGJ,iCACI,gCAAA,CACA,0CAAA,CACA,mBAAA,CAGJ,yBACI,mCAAA,CACA,mBAAA,CAGJ,8BACI,qCAAA,CAGJ,oDACI,aAlJoB,CAqJxB,8BACI,YAAA,CACA,mCAAA,CAEA,wCACI,0BAAA,CACA,wBAAA,CAIR,4DAEI,QAAA,CAGJ,0BACI,YAAA,CACA,wBAAA,CAEI,cAAA,CAGJ,aAzKqB,CA2KrB,kDACI,yBAAA,C/B9PJ,SA7BI,0FAAA,CAAA,wEAAA,CAAA,gHAAA,CAAA,4FAAA,CAAA,kGAAA,CAAA,mFAAA,CAAA,8HAAA,CAAA,0GAAA,CAAA,kGAAA,CAAA,4GAAA,CAAA,sGAAA,CAAA,wGAAA,CAAA,yEAAA,CmCkFR,UACI,aAAA,CACA,SAAA,CACA,eAAA,CAGJ,oHAKI,YAAA,CAGJ,eACI,qBAAA,CAGJ,6EAGI,kBAAA,CAGJ,qDAEI,uBAlCS,CAqCb,6EAGI,SAAA,CAGJ,sCACI,iBAAA,CAGJ,wBACI,mBAAA,CACA,gBAAA,CACA,iBAAA,CACA,4BAAA,CACA,uBAAA,CAGA,iCACI,kCAAA,CACA,mCAAA,CACA,sCAAA,CAIA,2CACI,oBAAA,CAIR,+BACI,UAAA,CACA,iBAAA,CACA,KAAA,CACA,oBAAA,CACA,UAAA,CACA,WAAA,CACA,wBAAA,CACA,SAAA,CAIA,qCACI,6BAAA,CAIR,8BACI,eAAA,CAGJ,yCACI,YA1FI,CA2FJ,aA3FI,CA8FR,8BACI,iBAAA,CACA,cAAA,CAEA,qDACI,UAAA,CAGJ,6DACI,qBAAA,CACA,mDAAA,CAGJ,+CACI,wBAAA,CACA,yBAAA,CAIR,iCACI,eAAA,CACA,gBAAA,CAEA,wDACI,YAAA,CAGJ,gEACI,uBAAA,CACA,sDAAA,CAGJ,kDACI,wBAAA,CACA,yBAAA,CAKZ,kCACI,qCAAA,CACA,gCAAA,CAGJ,gCACI,mCAAA,CACA,8BAAA,CAeJ,iEACI,4CAAA,CACA,uCAAA,CAGJ,iCACI,mDAAA,CAGJ,kCACI,gDAAA,CACA,2CAAA,CAEA,0BAAA,CAEA,mBAAA,CAEA,yCACI,YAAA,CAGJ,gEACI,2CAAA,CAIR,uBACI,oBAAA,CACA,YAAA,CAGJ,wBACI,aAAA,CACA,kBAAA,CACA,MAAA,CnC3LJ,kBAAA,CACA,sBAAA,CACA,eAAA,CmC6LA,8BACI,sBAAA,CACA,cAAA,CACA,gBAAA,CACA,gBArMQ,CAwMZ,+BACI,YAAA,CACA,iBAAA,CACA,iBAAA,CACA,uBAAA,CACA,QAAA,CACA,qDAAA,CAEA,mCACI,MAAA,CACA,eAAA,CACA,iCAAA,CAIR,sBACI,eAAA,CnCpQA,cA7BI,yGAAA,CAAA,g4DAAA,CAAA,yCAAA,CAAA,mGAAA,CAAA,4GAAA,CqE8BR,eACI,aAAA,CACA,iBAAA,CACA,QAAA,CACA,kBAAA,CACA,UAAA,CACA,WAAA,CACA,aAAA,CACA,mBAAA,CAGJ,qBACI,mBAAA,CACA,kBAAA,CACA,iBAAA,CACA,QAAA,CACA,kBAAA,CACA,iBAAA,CACA,sBAAA,CACA,kBAAA,CACA,kCAAA,CACA,yCAAA,CACA,kBAAA,CACA,aAAA,CACA,uCAAA,CACA,kBAAA,CACA,oBAAA,CAGJ,+BACI,UAAA,CACA,WAAA,CACA,iBAAA,CACA,KAAA,CACA,oBAAA,CACA,aAAA,CACA,mBAAA,CACA,wCAAA,CACA,wBAAA,CACA,6BAAA,CAEA,yCAZJ,+BAcQ,qBAAA,CAAA","file":"../igniteui-angular.css","sourcesContent":["@use 'igniteui-theming/sass/bem' as *;\n\n%display-container {\n    display: inherit;\n    flex-flow: inherit;\n    position: relative;\n    width: 100%;\n    overflow: hidden;\n    flex-shrink: 0;\n}\n\n%display-container--inactive {\n    width: 100%;\n}\n\n@mixin component {\n    @include b(igx-display-container) {\n        @extend %display-container !optional;\n\n        @include m(inactive) {\n            @extend %display-container--inactive !optional;\n        }\n    }\n}\n","@use 'igniteui-theming/sass/bem' as *;\n\n%drag {\n    touch-action: none;\n}\n\n%drag--select-disabled {\n    user-select: none;\n}\n\n%drag-handle {\n    user-select: none;\n}\n\n@mixin component {\n    @include b(igx-drag) {\n        @extend %drag !optional;\n\n        @include e(handle) {\n            @extend %drag-handle !optional;\n        }\n\n        @include m(select-disabled) {\n            @extend %drag--select-disabled !optional;\n        }\n    }\n}\n","@use 'igniteui-theming/sass/bem' as *;\n\n/// @group themes\n/// @access private\n%vhelper-display {\n    display: block;\n    overflow: auto;\n    z-index: 10001;\n}\n\n%vhelper--vertical {\n    position: absolute;\n    top: 0;\n    inset-inline-end: 0;\n}\n\n%vhelper--horizontal {\n    width: 100%;\n}\n\n%vhelper-content--vertical {\n    width: 1px;\n}\n\n%vhelper-content--horizontal {\n    height: 1px;\n}\n\n@mixin component {\n    @include b(igx-vhelper) {\n        @include m(vertical) {\n            @extend %vhelper-display !optional;\n            @extend %vhelper--vertical !optional;\n\n            @include e(placeholder-content) {\n                @extend %vhelper-content--vertical !optional;\n            }\n        }\n\n        @include m(horizontal) {\n            @extend %vhelper-display !optional;\n            @extend %vhelper--horizontal !optional;\n\n            @include e(placeholder-content) {\n                @extend %vhelper-content--horizontal !optional;\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n// Used to configure color accessibility for charts\n@use 'igniteui-theming/sass/color/functions' as color;\n\n// Common components\n@use '../components/_common/igx-control';\n@use '../components/_common/igx-display-container' as display-container;\n@use '../components/_common/igx-drag' as drag;\n@use '../components/_common/igx-vhelper' as vhelper;\n@use '../components/ripple/ripple-component' as ripple;\n\n// Other components\n@use '../components/action-strip/action-strip-component' as action-strip;\n@use '../components/avatar/avatar-component' as avatar;\n@use '../components/badge/badge-component' as badge;\n@use '../components/bottom-nav/bottom-nav-component' as bottom-nav;\n@use '../components/button/button-component' as button;\n@use '../components/divider/divider-component' as divider;\n@use '../components/button-group/button-group-component' as button-group;\n@use '../components/banner/banner-component' as banner;\n@use '../components/calendar/calendar-component' as calendar;\n@use '../components/card/card-component' as card;\n@use '../components/carousel/carousel-component' as carousel;\n@use '../components/checkbox/checkbox-component' as checkbox;\n@use '../components/chip/chip-component' as chip;\n@use '../components/column-actions/column-actions-component' as column-actions;\n@use '../components/combo/combo-component' as combo;\n@use '../components/charts/category-chart-component' as category-chart;\n@use '../components/charts/data-chart-component' as data-chart;\n@use '../components/charts/doughnut-chart-component' as doughnut-chart;\n@use '../components/charts/financial-chart-component' as financial-chart;\n@use '../components/charts/funnel-chart-component' as funnel-chart;\n@use '../components/charts/gauge-component' as gauge;\n@use '../components/charts/geo-map-component' as geo-map;\n@use '../components/charts/graph-component' as graph;\n@use '../components/charts/pie-chart-component' as pie-chart;\n@use '../components/charts/shape-chart-component' as shape-chart;\n@use '../components/charts/sparkline-component' as sparkline;\n@use '../components/date-picker/date-picker-component' as date-picker;\n@use '../components/date-range-picker/date-range-picker-component' as date-range-picker;\n@use '../components/dialog/dialog-component' as dialog;\n@use '../components/dock-manager/dock-manager-component' as dock-manager;\n@use '../components/rating/rating-component' as rating;\n@use '../components/drop-down/drop-down-component' as drop-down;\n@use '../components/expansion-panel/expansion-panel-component' as expansion-panel;\n@use '../components/grid/grid-component' as grid;\n@use '../components/grid/pivot-data-selector-component' as pivot-data-selector;\n@use '../components/grid-summary/grid-summary-component' as grid-summary;\n@use '../components/grid-toolbar/grid-toolbar-component' as grid-toolbar;\n@use '../components/highlight/highlight-component' as highlight;\n@use '../components/icon/icon-component' as icon;\n@use '../components/input/input-group-component' as input-group;\n@use '../components/list/list-component' as list;\n@use '../components/navbar/navbar-component' as navbar;\n@use '../components/navdrawer/navdrawer-component' as navdrawer;\n@use '../components/overlay/overlay-component' as overlay;\n@use '../components/paginator/paginator-component' as paginator;\n@use '../components/progress/progress-component' as progress;\n@use '../components/radio/radio-component' as radio;\n@use '../components/query-builder/query-builder-component' as query-builder;\n@use '../components/scrollbar/scrollbar-component' as scrollbar;\n@use '../components/slider/slider-component' as slider;\n@use '../components/splitter/splitter-component' as splitter;\n@use '../components/snackbar/snackbar-component' as snackbar;\n@use '../components/switch/switch-component' as switch;\n@use '../components/stepper/stepper-component' as stepper;\n@use '../components/tabs/tabs-component' as tabs;\n@use '../components/toast/toast-component' as toast;\n@use '../components/tooltip/tooltip-component' as tooltip;\n@use '../components/time-picker/time-picker-component' as time-picker;\n@use '../components/tree/tree-component' as tree;\n@use '../components/watermark/watermark-component' as watermark;\n@use '../print';\n\n/// @param {boolean} $print-layout [true] - Activates the printing styles of the components.\n/// @param {boolean} $enhanced-accesibility [false] - Switches component colors and other properties to more accessible values.\n@mixin core(\n    $print-layout: true,\n    $enhanced-accessibility: false\n) {\n    @include color.configure-colors($enhanced-accessibility);\n\n    // Angular hack for binding to [hidden] property\n    // not working\n    [hidden] {\n        display: none !important;\n    }\n\n    // Common styles\n    @include vhelper.component();\n    @include display-container.component();\n    @include drag.component();\n\n    // Includes the base for each theme.\n    [class^='igx-'],\n    [class^='ig-'] {\n        &,\n        *,\n        *::before,\n        *::after {\n            box-sizing: border-box;\n        }\n    }\n\n    // Component styles\n    @include ripple.component();\n    @include action-strip.component();\n    @include avatar.component();\n    @include badge.component();\n    @include banner.component();\n    @include bottom-nav.component();\n    @include button.component();\n    @include button-group.component();\n    @include divider.component();\n    @include calendar.component();\n    @include card.component();\n    @include carousel.component();\n    @include checkbox.component();\n    @include chip.component();\n    @include column-actions.component();\n    @include combo.component();\n    @include category-chart.component();\n    @include data-chart.component();\n    @include doughnut-chart.component();\n    @include financial-chart.component();\n    @include funnel-chart.component();\n    @include gauge.component();\n    @include geo-map.component();\n    @include graph.component();\n    @include pie-chart.component();\n    @include shape-chart.component();\n    @include sparkline.component();\n    @include date-picker.component();\n    @include date-range-picker.component();\n    @include dialog.component();\n    @include dock-manager.component();\n    @include rating.component();\n    @include drop-down.component();\n    @include expansion-panel.component();\n    @include grid.component();\n    @include grid-summary.component();\n    @include grid-toolbar.component();\n    @include pivot-data-selector.component();\n    @include highlight.component();\n    @include icon.component();\n    @include input-group.component();\n    @include list.component();\n    @include navbar.component();\n    @include navdrawer.component();\n    @include overlay.component();\n    @include paginator.component();\n    @include progress.component();\n    @include radio.component();\n    @include query-builder.component();\n    @include scrollbar.component();\n    @include slider.component();\n    @include splitter.component();\n    @include snackbar.component();\n    @include switch.component();\n    @include stepper.component();\n    @include tabs.component();\n    @include toast.component();\n    @include tooltip.component();\n    @include time-picker.component();\n    @include tree.component();\n    @include watermark.component();\n\n    @if $print-layout == true {\n        @include print.layout();\n    }\n}\n\n","/* stylelint-disable max-line-length */\n@use 'sass:string';\n@use 'sass:meta';\n@use 'sass:list';\n@use 'sass:selector';\n\n////\n/// @group bem\n/// @author <a href=\"https://github.com/runningskull\" target=\"_blank\">Juan Patten</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @type String - The Element separator used. Default '__'.\n/// @access private\n$bem--sep-elem: if(meta.variable-exists(bem--sep-elem), $bem--sep-elem, '__');\n\n/// @type String - The Modifier separator used. Default '--'.\n/// @access private\n$bem--sep-mod: if(meta.variable-exists(bem--sep-mod), $bem--sep-mod, '--');\n\n/// @type String - The Modifier Value separator used. Default '-'.\n/// @access private\n$bem--sep-mod-val: if(meta.variable-exists(bem--sep-mod-val), $bem--sep-mod-val, '-');\n\n/// Converts a passed selector value into plain string.\n/// @access private\n/// @param {String} $s - The selector to be converted.\n@function bem--selector-to-string($s) {\n    @if not($s) {\n        @return '';\n    }\n\n    @return string.slice(meta.inspect($s), 2, -3);\n}\n\n/// Prepends a dot to the passed BEM selector.\n/// @access private\n/// @param {String} $x - The BEM selector to prepend a dot to.\n@function bem--with-dot($x) {\n    $first: string.slice($x, 0, 1);\n\n    @return if($first == '.', $x, string.insert($x, '.', -100));\n}\n\n/// Converts a key-value map into a modifier string.\n/// @access private\n@function bem--mod-str($m) {\n    @if meta.type-of($m) == 'map' {\n        $mm: list.nth($m, 1);\n\n        @return list.nth($mm, 1) + $bem--sep-mod-val + list.nth($mm, 2);\n    } @else {\n        @return $m;\n    }\n}\n\n/// Prefixes the block name to an element selector string,\n/// with the element separator string used as a divider.\n/// @access private\n/// @param {String} $b - The block name.\n/// @param {String} $e - The element name.\n@function bem--elem-str($b, $e) {\n    @return $b + $bem--sep-elem + $e;\n}\n\n/// Returns a block selector string affixed by the modifier selector,\n/// followed by the element selector string.\n/// @access private\n/// @param {String} $block - The block name.\n/// @param {String} $elem - The sub-element name.\n/// @param {String} $mod - The modifier name.\n@function bem--bem-str($block, $elem, $mod) {\n    $elem: if($elem, ' ' + $elem, '');\n\n    @return ($block + $bem--sep-mod + bem--mod-str($mod) + $elem);\n}\n\n/// Checks if the element separator string is part of the passed string.\n/// @access private\n/// @param {String} $x - The string to check.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the element separator name is not part of the passed string.\n@function bem--contains-elem($x) {\n    // if you set the separators to common strings, this could fail\n    @return string.index($x, $bem--sep-elem);\n}\n\n/// Checks if the modifier separator string is part of the passed string.\n/// @access private\n/// @param {String} $x - The string to check.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the modifier separator string is not part of the passed string.\n@function bem--contains-mod($x) {\n    // if you set the separators to common strings, this could fail\n    @return string.index($x, $bem--sep-mod);\n}\n\n/// Checks if the passed selector string contains a colon.\n/// @access private\n/// @param {String} $x - The string to check for colons.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the string does not contain any colons.\n@function bem--contains-pseudo($x) {\n    @return string.index($x, ':');\n}\n\n/// Returns the BEM block-name that generated `$x`. Does not include leading \".\".\n/// @access private\n/// @param {String} $x - The block name.\n@function bem--extract-block($x) {\n    @if bem--contains-mod($x) {\n        @return string.slice($x, 1, string.index($x, $bem--sep-mod) - 1);\n    } @else if bem--contains-elem($x) {\n        @return string.slice($x, 1, string.index($x, $bem--sep-elem) - 1);\n    } @else if bem--contains-pseudo($x) {\n        @return string.slice($x, 1, string.index($x, ':') - 1);\n    }\n\n    @return $x;\n}\n\n/// Returns the first selector of a nested selector string.\n/// @access private\n@function bem--extract-first-selector($x) {\n    $eow: string.index($x, ' ') or -1;\n\n    @return string.slice($x, 1, $eow);\n}\n\n/// Generates a full BEM selector.\n/// @access private\n/// @param {String} $block - Required. A string block name.\n/// @param {String|List} $elem - Optional. A sub-element name. If `$mod` is not present, it is\n/// joined with $block. If $mod is present, it is nested under `$block--$mod`.\n/// @param {String|Map} $mod - Optional. A block modifier.\n/// @example scss Include a block\n///   @include bem-selector(block); // outputs .block\n/// @example scss Include a block and an element\n///   @include bem-selector(block, $e:elem); // outputs .block__elem\n/// @example scss Include block, element, and element modifier\n///   @include bem-selector(block, $e:(elem, $mod); // outputs .block__elem-emod\n/// @example scss Include block and block modifier\n///   @include bem-selector(block, $m:mod) // outputs .block--mod\n/// @example scss Include block and modifier value\n///   @include bem-selector(block, $m:(mod:val)); // outputs .block--mod-val\n/// @example scss Include block modifier followed by block sub-element\n///   @include bem-selector(block, $m:mod, $e:elem); // outputs .block--mod .block__elem\n@function bem-selector($block, $e: null, $elem: null, $m: null, $mod: null, $mods: null) {\n    $block: bem--with-dot($block);\n    $elem: $e or $elem;\n\n    // Return early if possible\n    $mods: $m or $mod or $mods;\n\n    @if not ($elem or $mods) {\n        @return $block;\n    }\n\n    @if $elem {\n        // User passed an element-specific modifier\n        @if meta.type-of($elem) == list and list.nth($elem, 2) {\n            // For now we don't support multiple elem-mods at once\n            @if meta.type-of(list.nth($elem, 2)) == 'list' {\n                @error 'Only one element-modifier allowed.';\n            }\n\n            $elem: string.slice(bem-selector(list.nth($elem, 1), $m: list.nth($elem, 2)), 2);\n        }\n\n        $elem: bem--elem-str($block, $elem);\n    }\n\n    @if not $mods {\n        @return bem--with-dot($elem);\n    }\n\n    @if meta.type-of($mods) != 'list' {\n        $mods: ($mods, );\n    }\n\n    $bemcls: '';\n\n    @for $i from 1 to list.length($mods) {\n        $bemcls: $bemcls + bem--bem-str($block, $elem, list.nth($mods, $i)) + ', ';\n    }\n\n    $bemcls: $bemcls + bem--bem-str($block, $elem, list.nth($mods, -1));\n\n    @return $bemcls;\n}\n\n/// Simply unrolls into a class-selector. The main purpose of using this mixin\n/// is to clearly denote the start of a BEM block.\n/// @access public scss\n/// @param {String} $block - The block name.\n/// @example\n///   @include bem-block(block) {\n///      background: green;\n///   }\n///   // Return\n///   .block { background: green; }\n@mixin bem-block($block) {\n    @at-root {\n        #{bem-selector($block)} {\n            @content;\n        }\n    }\n}\n\n/// Unrolls into a proper BEM element selector, depending on the context.\n/// Inside just a block, yields a root-level `.block__elem`.\n/// Inside a mod or pseudo-selector, yields a nested `.block--mod .block__elem`.\n/// If $mod is included, it is appended to the block selector. Multiple\n/// $mods are not supported.\n/// @access public\n/// @param {String} $elem - The sub-element name.\n/// @param {String} $m - The modifier name.\n/// @param {String} $mod - An alias of `$m`.\n/// @example scss\n///   @include bem-block(block) {\n///      @include bem-elem(element) {\n///        background: blue;\n///      }\n///   }\n///   // Return\n///   .block__element { background: blue; }\n@mixin bem-elem($elem, $m: null, $mod: null, $mods: null) {\n    $this: bem--selector-to-string(&);\n    $block: bem--extract-block($this);\n    $first: bem--extract-first-selector($this);\n    $nested: bem--contains-pseudo($this) or bem--contains-mod($this);\n    $mod: $m or $mod;\n    $mx: ();\n\n    @if $this == '' {\n        @error 'Detected an Element that is not inside a Block: #{$elem}';\n    }\n\n    @if bem--contains-elem($this) {\n        @error 'Detected a multi-level nested Element (#{$this} #{$elem})! Bem doesn\\'t support nested ' + 'elements because they do not have BEM nature (www.getbem.com/faq/#css-nested-elements). ' + 'If you must do it, use a hardcoded selector like &__subsubelem ';\n    }\n\n    @if $mods != null and meta.type-of($mods) == 'list' {\n        @each $i in $mods {\n            $mx: list.append($mx, #{bem-selector($block, $e: ($elem, $i))});\n        }\n    }\n\n    @if not($nested) {\n        // Normal case, no pseudo-selector present or mod, so no nesting.\n        // .block__elem { ... }\n        @at-root {\n            @if not($mods) {\n                #{bem-selector($block, $e: ($elem, $mod))} {\n                    @content;\n                }\n            } @else {\n                #{selector.append($mx...)} {\n                    @content;\n                }\n            }\n        }\n    } @else {\n        // pseudo-element or mod present, so we have nesting.\n        // .block:active .block__elem { ... }\n        // .block--mod .block__elem { ... }\n        @at-root {\n            $selector: $first + ' ' + bem-selector($block, $e: ($elem, $mod));\n\n            @if not($mods) {\n                #{$selector} {\n                    @content;\n                }\n            } @else {\n                #{$first} #{selector.append($mx...)} {\n                    @content;\n                }\n            }\n        }\n    }\n}\n\n/// Unrolls into a BEM block-modifier selector.\n/// This mixin does not generate element-modifiers, the bem-elem mixin instead.\n/// Nesting bem-mod inside a pseudo-selector is not supported, because what\n/// that should mean isn't clear.\n/// @access public\n/// @param {String} $mod - The modifier name.\n/// @example scss\n///   @include bem-block(block) {\n///      @include bem-mod(modifier) {\n///        background: red;\n///      }\n///   }\n///   // Return\n///   .block--modifier { background: red; }\n@mixin bem-mod($mod) {\n    $skip: false;\n    $this: bem--selector-to-string(&);\n\n    @if $this == '' {\n        @error 'Detected a Modifier that is not inside a Block: ' + $mod;\n    }\n\n    @if bem--contains-elem($this) {\n        @error 'Nesting a Modifier inside an Element (#{$this} #{$mod}) ' + 'is not supported. Instead, use bem-elem(myelem, elem-mod) syntax.';\n    }\n\n    @if bem--contains-pseudo($this) {\n        @error 'Nesting a Modifier inside a pseudo-selector is not supported: #{$this} #{$mod}';\n    }\n\n    @at-root {\n        #{bem-selector($this, $m: $mod)} {\n            @content;\n        }\n    }\n}\n\n/// Unrolls into a block--modifier.[block--modifier...] .block__el\n/// This mixin is useful when we want to apply classes to a block,\n/// or block element when two or more modifiers are applied in tandem\n/// @access public\n/// @param {List} $mods - A list of modifiers\n/// @example scss\n///   @include bem-block(block) {\n///      @include bem-mods(error, warn) {\n///        position: absolute;\n///      }\n///   }\n///   // Return\n///   .block--error,\n///   .block--warn {\n///       position: absolute;\n///    }\n///\n@mixin bem-mods($mods...) {\n    $this: bem--selector-to-string(&);\n    $mod-classes: ();\n\n    @each $mod in $mods {\n        @if $this == '' {\n            @error 'Detected a Modifier that is not inside a Block: ' + $mod;\n        }\n\n        @if bem--contains-elem($this) {\n            @error 'Nesting a Modifier inside an Element (#{$this} #{$mod}) ' + 'is not supported. Instead, use bem-elem(myelem, elem-mod) syntax.';\n        }\n\n        @if bem--contains-pseudo($this) {\n            @error 'Nesting a Modifier inside a pseudo-selector is not supported: #{$this} #{$mod}';\n        }\n\n        $mod-classes: list.append($mod-classes, #{bem-selector($block: $this, $m: $mod)});\n    }\n\n    @at-root {\n        #{selector.append($mod-classes...)} {\n            @content;\n        }\n    }\n}\n\n/// @alias bem-selector\n/// @see bem-selector\n@mixin bem($block, $e: null, $elem: null, $m: null, $mod: null, $mods: null) {\n    #{bem-selector($block, $e: $e, $elem: $elem, $m: $m, $mod: $mod, $mods: $mods)} {\n        @content;\n    }\n}\n\n/// @alias bem-block\n/// @see bem-block\n@mixin block($block) {\n    @include bem-block($block) {\n        @content;\n    }\n}\n\n/// @alias bem-elem\n/// @see bem-elem\n@mixin elem($elem, $m: null, $mod: null, $mods: null) {\n    @include bem-elem($elem, $m: $m, $mod: $mod, $mods: $mods) {\n        @content;\n    }\n}\n\n/// @alias bem-mod\n/// @see bem-mod\n@mixin mod($mod) {\n    @include bem-mod($mod) {\n        @content;\n    }\n}\n\n/// @alias bem-mods\n/// @see bem-mods\n@mixin mods($mods...) {\n    @include bem-mods($mods...) {\n        @content;\n    }\n}\n\n/// @alias bem-block\n/// @see bem-block\n@mixin b($block) {\n    @include bem-block($block) {\n        @content;\n    }\n}\n\n/// @alias bem-elem\n/// @see bem-elem\n@mixin e($elem, $m: null, $mod: null, $mods: null) {\n    @include bem-elem($elem, $m: $m, $mod: $mod, $mods: $mods) {\n        @content;\n    }\n}\n\n/// @alias bem-mod\n/// @see bem-mod\n@mixin m($mod) {\n    @include bem-mod($mod) {\n        @content;\n    }\n}\n\n/// @alias bem-mods\n/// @see bem-mods\n@mixin mx($mods...) {\n    @include bem-mods($mods...) {\n        @content;\n    }\n}\n","@use '../../base' as *;\n@use 'sass:string';\n\n/// @access private\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n@mixin component {\n    @include b(igx-icon) {\n        $this: bem--selector-to-string(&);\n        @include register-component(\n            $name: string.slice($this, 2, -1),\n            $deps: ()\n        );\n\n        @extend %igx-icon-display !optional;\n\n        @include m(inactive) {\n            @extend %igx-icon--inactive !optional;\n        }\n\n        @include m(success) {\n            @extend %igx-icon--success !optional;\n        }\n\n        @include m(error) {\n            @extend %igx-icon--error !optional;\n        }\n    }\n\n    @include b(igx-svg-container) {\n        visibility: hidden;\n        width: 0;\n        height: 0;\n        font-size: 0;\n        overflow: hidden;\n    }\n}\n","@use '../../base' as *;\n@use 'sass:string';\n\n/// @access private\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n@mixin component {\n    @include b(igx-radio) {\n        $this: bem--selector-to-string(&);\n        @include register-component(\n            $name: string.slice($this, 2, -1),\n            $deps: ()\n        );\n\n        @extend %radio-display !optional;\n\n        &:hover {\n            @include e(composite) {\n                @extend %igx-radio-hover__composite !optional;\n            }\n\n            @include e(ripple) {\n                @extend %radio-ripple--hover !optional;\n                @extend %radio-ripple--hover-unchecked !optional;\n            }\n        }\n\n        &:active {\n            @include e(composite) {\n                @extend %igx-radio-hover__composite !optional;\n            }\n\n            @include e(ripple) {\n                @extend %radio-ripple--hover !optional;\n                @extend %radio-ripple--hover-unchecked !optional;\n                @extend %radio-ripple--pressed !optional;\n            }\n        }\n\n        @include e(input) {\n            @extend %radio-input !optional;\n        }\n\n        @include e(composite) {\n            @extend %radio-composite !optional;\n        }\n\n        @include e(label) {\n            @extend %radio-label !optional;\n            @extend %radio-label--after !optional;\n        }\n\n        @include e(label, $m: before) {\n            @extend %radio-label !optional;\n            @extend %radio-label--before !optional;\n        }\n\n        @include e(ripple) {\n            @extend %radio-ripple !optional;\n        }\n\n        @include m(focused) {\n            @extend %igx-radio--focused !optional;\n\n            @include e(ripple) {\n                @extend %radio-ripple--focused !optional;\n            }\n        }\n\n        @include mx(focused, checked) {\n            @extend  %igx-radio--focused-checked !optional;\n        }\n\n        @include m(checked) {\n            @include e(composite) {\n                @extend %radio-composite--x !optional;\n            }\n\n            &:hover {\n                @include e(composite) {\n                    @extend %igx-radio--checked-active__composite !optional;\n                }\n\n                @include e(ripple) {\n                    @extend %radio-ripple--hover !optional;\n                    @extend %radio-ripple--hover-checked !optional;\n                }\n            }\n\n            &:active {\n                @include e(composite) {\n                    @extend %igx-radio--checked-active__composite !optional;\n                }\n\n                @include e(ripple) {\n                    @extend %radio-ripple--hover !optional;\n                    @extend %radio-ripple--hover-checked !optional;\n                    @extend %radio-ripple--pressed !optional;\n                }\n            }\n        }\n\n        @include m(disabled) {\n            @extend %radio-display--disabled !optional;\n\n            @include e(composite) {\n                @extend %radio-composite--disabled !optional;\n            }\n        }\n\n        @include mx(focused, checked) {\n            @include e(ripple) {\n                @extend %radio-ripple--focused !optional;\n                @extend %radio-ripple--focused-checked !optional;\n            }\n        }\n\n        @include mx(checked, disabled) {\n            @include e(composite) {\n                @extend %radio-composite--x--disabled !optional;\n            }\n        }\n    }\n\n    @include b(igx-radio-group) {\n        display: block;\n\n        @include m(vertical) {\n            display: flex;\n            flex-flow: column;\n        }\n    }\n}\n","/// @access private\n/// Defines printing styles for all components in the library.\n@mixin layout {\n    @media print {\n        html,\n        body,\n        app-root {\n            min-height: 100vh;\n            min-width: 100vw;\n            margin: 0;\n        }\n\n        app-root {\n            display: block;\n        }\n\n        * {\n            -webkit-print-color-adjust: exact;\n            // Fix shadows if you print to PDF using chrome START\n            -webkit-filter: opacity(1);\n            filter: opacity(1);\n            // Fix shadows if you print to PDF using chrome END\n            print-color-adjust: exact;\n            text-shadow: none !important;\n        }\n\n        a[href^='http']::after {\n            content: '[' attr(href) ']';\n            color: blue;\n        }\n\n        .igx-no-print {\n            display: none !important;\n        }\n\n        // Forcing Grayscale Printing\n        .igx-bw-print {\n            // CSS3 filter, at the moment Webkit only. Prefix it for future implementations\n            -webkit-filter: grayscale(100%);\n            filter: grayscale(100%); /* future-proof */\n        }\n\n        igx-circular-bar,\n        igx-linear-bar,\n        .igx-carousel__indicators,\n        .igx-carousel__arrow--prev,\n        .igx-carousel__arrow--next,\n        .igx-ripple,\n        .igx-grid__tbody-scrollbar,\n        igx-switch__ripple,\n        igx-virtual-helper {\n            display: none !important;\n        }\n\n        igx-grid {\n            .igx-grid-th__title,\n            .igx-grid__td-text {\n                white-space: unset !important;\n                text-overflow: initial !important;\n                overflow: visible !important;\n            }\n        }\n    }\n}\n","////\n/// @group typography\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n@use 'sass:map';\n@use 'sass:list';\n@use 'material';\n@use 'bootstrap';\n@use 'fluent';\n@use 'indigo';\n@use 'igniteui-theming/sass/utils/meta' as *;\n@use 'igniteui-theming/sass/typography' as theming;\n@use 'igniteui-theming/sass/typography/presets' as presets;\n@use 'igniteui-theming/sass/typography/charts' as *;\n\n@mixin _component-typography($type-scale, $exclude) {\n    font-family: var(--ig-font-family);\n\n    $variant: map.get(map.get($type-scale, '_meta'), 'variant');\n\n    @if not(list.index($exclude, 'charts')) {\n        @include charts-typography($type-scale);\n    }\n\n    @if ($variant == 'material' or $variant == null) {\n        @include material.typography();\n    }\n\n    @if ($variant == 'bootstrap') {\n        @include bootstrap.typography($type-scale);\n    }\n\n    @if ($variant == 'fluent') {\n        @include fluent.typography();\n    }\n\n    @if ($variant == 'indigo') {\n        @include indigo.typography();\n    }\n}\n\n/// Adds typography styles for h1-h6, paragraph and creates custom typography class selectors.\n/// The produces styles are based on the passed typeface and type scale.\n/// If omitted the $material-typeface and $material-type-scale will be used.\n/// @access public\n/// @param {String} $font-family [$material-typeface] - The font family to be used across all typographic elements.\n/// @param {Map} $type-scale [$material-type-scale] - A type scale map as produced by type-scale.\n/// @param {Map} $exclude [null] - A list of typography styles to be excluded.\n@mixin typography(\n    $font-family: presets.$material-typeface,\n    $type-scale: presets.$material-type-scale,\n    $exclude: null\n) {\n    $_scope: if(is-root() or is-host(), '.ig-typography', '&');\n\n    #{$_scope} {\n        @include _component-typography($type-scale, $exclude);\n    }\n\n    @if not(list.index($exclude, 'global')) {\n        @include theming.typography($font-family, $type-scale);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/SisIvanova\" target=\"_blank\">Silvia Ivanova</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {List} $margin [null] - Sets the margin (top, right, bottom, left) of the chart content.\n/// @param {List} $brushes [series] - Defines the palette from which automatically assigned series brushes colors are selected.\n/// @param {List} $marker-brushes [series]- Defines the palette from which automatically assigned series marker brushes colors are selected.\n/// @param {List} $negative-brushes [series] - Defines the palette used for coloring negative items in a chart type with contextual coloring, such as Waterfall.\n/// @param {List} $outlines [series] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @param {List} $marker-outlines [series] - Defines the palette from which automatically assigned series marker outline colors are selected.\n/// @param {List} $negative-outlines [series] - Defines the brushes used for drawing negative elements in a chart type with contextual coloring, such as Waterfall.\n/// @param {String} $title-alignment [null] - The horizontal alignment to use for the title.\n/// @param {List} $title-margin [null] - Sets the margin (top, right, bottom, left) of the chart title.\n/// @param {Color} $title-text-color [null] - Sets the color of the chart title.\n/// @param {String} $title-text-style [null] - Sets the CSS font property of the chart title.\n/// @param {List} $subtitle-margin [null] - Sets the margins (top, right, bottom, left) of the chart subtitle.\n/// @param {String} $subtitle-alignment [null] - The horizontal alignment to use for the subtitle.\n/// @param {Color} $subtitle-text-color [null] - Sets the color of the chart subtitle.\n/// @param {String} $subtitle-text-style [null] - Sets the CSS font property of the chart subtitle.\n/// @param {Number} $thickness [null] - Sets the thickness for all series in a chart.\n/// @param {List} $trend-line-brushes [series] - Defines the palette of brushes used for coloring trend lines in a chart.\n/// @param {Number} $trend-line-thickness [null] - Sets the thickness of the trend lines in a chart of type point, line, spline or bubble.\n/// @param {List} $x-axis-label-margin [null] - Sets the margin (top, right, bottom, left) of labels on the X-axis.\n/// @param {Color} $x-axis-label-text-color [null] - Sets the color of labels on the X-axis.\n/// @param {String} $x-axis-label-text-style [null] - Sets the CSS font property for labels on X-axis.\n/// @param {String} $x-axis-label-vertical-alignment [null] - Sets the vertical alignment of X-axis labels.\n/// @param {Color} $x-axis-major-stroke [null] - Sets the color to apply to major gridlines along the X-axis.\n/// @param {Number} $x-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the X-axis.\n/// @param {Color} $x-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the X-axis.\n/// @param {Number} $x-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the X-axis.\n/// @param {Color} $x-axis-strip [null] - Sets the color to apply to stripes along the X-axis.\n/// @param {Color} $x-axis-stroke [null] - Sets the color to apply to the X-axis line.\n/// @param {Number} $x-axis-stroke-thickness [null] - Sets the thickness to apply to the X-axis line.\n/// @param {Number} $x-axis-tick-length [null] - Sets the length of tickmarks along the X-axis.\n/// @param {Color} $x-axis-tick-stroke [null] - Sets the color to apply to tickmarks along the X-axis.\n/// @param {Number} $x-axis-tick-stroke-thickness [null] - Sets the thickness to apply to tickmarks along the X-axis.\n/// @param {String} $x-axis-title-alignment [null] - Sets the horizontal alignment of the X-axis title.\n/// @param {List} $x-axis-title-margin [null] - Sets the margin (top, right, bottom, left) of a title on the X-axis.\n/// @param {Color} $x-axis-title-text-color [null] - Sets the color of the title on the X-axis.\n/// @param {String} $x-axis-title-text-style [null] - Sets the CSS font property for the title on the X-axis.\n/// @param {List} $y-axis-label-margin [null] - Sets the margin (top, right, bottom, left) of labels on the Y-axis.\n/// @param {Color} $y-axis-label-text-color [null] - Sets the color of labels on the Y-axis.\n/// @param {String} $y-axis-label-text-style [null] - Sets the CSS font property for labels on Y-axis.\n/// @param {String} $y-axis-label-vertical-alignment [null] - Sets the vertical alignment of Y-axis labels.\n/// @param {Color} $y-axis-major-stroke [null] - Sets the color to apply to major gridlines along the y-axis.\n/// @param {Number} $y-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the Y-axis.\n/// @param {Color} $y-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the Y-axis.\n/// @param {Number} $y-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the Y-axis.\n/// @param {Color} $y-axis-strip [null] - Sets the color to apply to stripes along the Y-axis.\n/// @param {Color} $y-axis-stroke [null] - Sets the color to apply to the Y-axis line.\n/// @param {Number} $y-axis-stroke-thickness [null] - Sets the thickness to apply to the Y-axis line.\n/// @param {String} $y-axis-title-alignment [null] - Sets the horizontal alignment of the Y-axis title.\n/// @param {List} $y-axis-title-margin [null] - Sets the margin (top, right, bottom, left) of a title on the Y-axis.\n/// @param {Color} $y-axis-title-text-color [null] - Sets the color of a title on the Y-axis.\n/// @param {String} $y-axis-title-text-style [null] - Sets the CSS font property for the title on the Y-axis.\n/// @param {Number} $y-axis-tick-length [null] - Sets the length of tickmarks along the Y-axis.\n/// @param {Color} $y-axis-tick-stroke [null] - Sets the color to apply to tickmarks along the Y-axis.\n/// @param {Number} $y-axis-tick-stroke-thickness [null] - Sets the thickness to apply to tickmarks along the Y-axis.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $custom-chart-theme: category-chart-theme($brushes: (red, green, blue));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($custom-chart-theme);\n@function category-chart-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $margin: null,\n    $brushes: null,\n    $marker-brushes: null,\n    $negative-brushes: null,\n    $outlines: null,\n    $marker-outlines: null,\n    $negative-outlines: null,\n    $title-margin: null,\n    $title-alignment: null,\n    $title-text-color: null,\n    $title-text-style: null,\n    $subtitle-margin: null,\n    $subtitle-alignment: null,\n    $subtitle-text-color: null,\n    $subtitle-text-style: null,\n    $thickness: null,\n    $trend-line-brushes: null,\n    $trend-line-thickness: null,\n    $x-axis-label-margin: null,\n    $x-axis-label-text-color: null,\n    $x-axis-label-text-style: null,\n    $x-axis-label-vertical-alignment: null,\n    $x-axis-major-stroke: null,\n    $x-axis-major-stroke-thickness: null,\n    $x-axis-minor-stroke: null,\n    $x-axis-minor-stroke-thickness: null,\n    $x-axis-strip: null,\n    $x-axis-stroke: null,\n    $x-axis-stroke-thickness: null,\n    $x-axis-tick-length: null,\n    $x-axis-tick-stroke: null,\n    $x-axis-tick-stroke-thickness: null,\n    $x-axis-title-alignment: null,\n    $x-axis-title-margin: null,\n    $x-axis-title-text-color: null,\n    $x-axis-title-text-style: null,\n    $y-axis-label-margin: null,\n    $y-axis-label-text-color: null,\n    $y-axis-label-text-style: null,\n    $y-axis-label-vertical-alignment: null,\n    $y-axis-major-stroke: null,\n    $y-axis-major-stroke-thickness: null,\n    $y-axis-minor-stroke: null,\n    $y-axis-minor-stroke-thickness: null,\n    $y-axis-strip: null,\n    $y-axis-stroke: null,\n    $y-axis-stroke-thickness: null,\n    $y-axis-title-alignment: null,\n    $y-axis-title-margin: null,\n    $y-axis-title-text-color: null,\n    $y-axis-title-text-style: null,\n    $y-axis-tick-length: null,\n    $y-axis-tick-stroke: null,\n    $y-axis-tick-stroke-thickness: null\n) {\n    $name: 'category-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-category-chart',\n            'webc': 'igc-category-chart',\n            'blazor': 'igb-category-chart'\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n    $margin-default: map.get($theme, 'margin');\n    $title-margin-default: map.get($theme, 'title-margin');\n    $subtitle-margin-default: map.get($theme, 'subtitle-margin');\n    $x-axis-label-margin-default: map.get($theme, 'x-axis-label-margin');\n    $x-axis-title-margin-default: map.get($theme, 'x-axis-title-margin');\n    $y-axis-label-margin-default: map.get($theme, 'y-axis-label-margin');\n    $y-axis-title-margin-default: map.get($theme, 'y-axis-title-margin');\n\n    @if not($margin) {\n        $margin: $margin-default;\n    } @else {\n        $margin: expand-shorthand(($margin));\n    }\n\n    @if not($title-margin) {\n        $title-margin: $title-margin-default;\n    } @else {\n        $title-margin: map-keys-prefix(expand-shorthand(($title-margin)), 'title');\n    }\n\n    @if not($subtitle-margin) {\n        $subtitle-margin: $subtitle-margin-default;\n    } @else {\n        $subtitle-margin: map-keys-prefix(expand-shorthand(($subtitle-margin)), 'subtitle');\n    }\n\n    @if not($x-axis-label-margin) {\n        $x-axis-label-margin: $x-axis-label-margin-default;\n    } @else {\n        $x-axis-label-margin: map-keys-prefix(expand-shorthand(($x-axis-label-margin)), 'x-axis-label');\n    }\n\n    @if not($x-axis-title-margin) {\n        $x-axis-title-margin: $x-axis-title-margin-default;\n    } @else {\n        $x-axis-title-margin: map-keys-prefix(expand-shorthand(($x-axis-title-margin)), 'x-axis-title');\n    }\n\n    @if not($y-axis-label-margin) {\n        $y-axis-label-margin: $y-axis-label-margin-default;\n    } @else {\n        $y-axis-label-margin: map-keys-prefix(expand-shorthand(($y-axis-label-margin)), 'y-axis-label');\n    }\n\n    @if not($y-axis-title-margin) {\n        $y-axis-title-margin: $y-axis-title-margin-default;\n    } @else {\n        $y-axis-title-margin: map-keys-prefix(expand-shorthand(($y-axis-title-margin)), 'y-axis-title');\n    }\n\n    @return extend(\n        $theme,\n        $margin,\n        $title-margin,\n        $subtitle-margin,\n        $x-axis-label-margin,\n        $x-axis-title-margin,\n        $y-axis-label-margin,\n        $y-axis-title-margin,\n        (\n            name: $name,\n            selector: $selector,\n            brushes: $brushes,\n            marker-brushes: $marker-brushes,\n            negative-brushes: $negative-brushes,\n            outlines: $outlines,\n            marker-outlines: $marker-outlines,\n            negative-outlines: $negative-outlines,\n            title-alignment: $title-alignment,\n            title-text-color: $title-text-color,\n            title-text-style: $title-text-style,\n            subtitle-alignment: $subtitle-alignment,\n            subtitle-text-color: $subtitle-text-color,\n            subtitle-text-style: $subtitle-text-style,\n            thickness: $thickness,\n            trend-line-brushes: $trend-line-brushes,\n            trend-line-thickness: $trend-line-thickness,\n            x-axis-label-text-color: $x-axis-label-text-color,\n            x-axis-label-text-style: $x-axis-label-text-style,\n            x-axis-label-vertical-alignment: $x-axis-label-vertical-alignment,\n            x-axis-major-stroke: $x-axis-major-stroke,\n            x-axis-major-stroke-thickness: $x-axis-major-stroke-thickness,\n            x-axis-minor-stroke: $x-axis-minor-stroke,\n            x-axis-minor-stroke-thickness: $x-axis-minor-stroke-thickness,\n            x-axis-strip: $x-axis-strip,\n            x-axis-stroke: $x-axis-stroke,\n            x-axis-stroke-thickness: $x-axis-stroke-thickness,\n            x-axis-tick-length: $x-axis-tick-length,\n            x-axis-tick-stroke: $x-axis-tick-stroke,\n            x-axis-tick-stroke-thickness: $x-axis-tick-stroke-thickness,\n            x-axis-title-alignment: $x-axis-title-alignment,\n            x-axis-title-text-color: $x-axis-title-text-color,\n            x-axis-title-text-style: $x-axis-title-text-style,\n            y-axis-label-text-color: $y-axis-label-text-color,\n            y-axis-label-text-style: $y-axis-label-text-style,\n            y-axis-label-vertical-alignment: $y-axis-label-vertical-alignment,\n            y-axis-major-stroke: $y-axis-major-stroke,\n            y-axis-major-stroke-thickness: $y-axis-major-stroke-thickness,\n            y-axis-minor-stroke: $y-axis-minor-stroke,\n            y-axis-minor-stroke-thickness: $y-axis-minor-stroke-thickness,\n            y-axis-strip: $y-axis-strip,\n            y-axis-stroke: $y-axis-stroke,\n            y-axis-stroke-thickness: $y-axis-stroke-thickness,\n            y-axis-title-alignment: $y-axis-title-alignment,\n            y-axis-title-text-color: $y-axis-title-text-color,\n            y-axis-title-text-style: $y-axis-title-text-style,\n            y-axis-tick-length: $y-axis-tick-length,\n            y-axis-tick-stroke: $y-axis-tick-stroke,\n            y-axis-tick-stroke-thickness: $y-axis-tick-stroke-thickness\n        )\n    );\n}\n\n/// Adds typography styles for the category-chart component.\n/// Uses the 'h6', 'subtitle-1' and 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by type-scale.\n/// @param {Map} $categories [(\n/// 'title': 'h6',\n/// 'subtitle': 'subtitle-1,\n/// 'x-axis-label-text-style': 'body-2',\n/// 'y-axis-label-text-style': 'body-2',\n/// 'x-axis-title-text-style': 'body-2',\n/// 'y-axis-title-text-style': 'body-2',\n/// )] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} type-style\n@mixin category-chart-typography($type-scale, $categories: (\n    'title': 'h6',\n    'subtitle': 'subtitle-1',\n    'x-axis-label-text-style': 'body-2',\n    'x-axis-title-text-style': 'body-2',\n    'y-axis-label-text-style': 'body-2',\n    'y-axis-title-text-style': 'body-2',\n), $target: 'angular') {\n    $name: 'category-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-category-chart',\n            'webc': 'igc-category-chart',\n            'blazor': 'igb-category-chart'\n        ),\n        $target\n    );\n    $title: map.get($categories, 'title');\n    $subtitle: map.get($categories, 'subtitle');\n    $x-axis-label-text-style: map.get($categories, 'x-axis-label-text-style');\n    $x-axis-title-text-style: map.get($categories, 'x-axis-title-text-style');\n    $y-axis-label-text-style: map.get($categories, 'y-axis-label-text-style');\n    $y-axis-title-text-style: map.get($categories, 'y-axis-title-text-style');\n    $title-styles: type-scale-category($type-scale, $title);\n    $subtitle-styles: type-scale-category($type-scale, $subtitle);\n    $x-axis-label-styles: type-scale-category($type-scale, $x-axis-label-text-style);\n    $x-axis-title-styles: type-scale-category($type-scale, $x-axis-title-text-style);\n    $y-axis-label-styles: type-scale-category($type-scale, $y-axis-label-text-style);\n    $y-axis-title-styles: type-scale-category($type-scale, $y-axis-title-text-style);\n\n    #{$selector} {\n        @include font-var('title-text-style', $title-styles, $name);\n        @include font-var('subtitle-text-style', $subtitle-styles, $name);\n        @include font-var('x-axis-label-text-style', $x-axis-label-styles, $name);\n        @include font-var('x-axis-title-text-style', $x-axis-title-styles, $name);\n        @include font-var('y-axis-label-text-style', $y-axis-label-styles, $name);\n        @include font-var('y-axis-title-text-style', $y-axis-title-styles, $name);\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:string';\n@use 'sass:list';\n@use '../utils/meta' as *;\n@use '../typography/functions' as *;\n\n/// A list of ignored keywords to be excluded when generating CSS variables for a theme.\n/// @access private\n$ignored-keys: ('name', 'palette', 'variant', 'selector', 'type', '_meta');\n\n/// Parses a map of key value pairs from component themes to css variables.\n/// @access private\n/// @param {Map} $theme - The component theme to be used to generate css variables.\n/// @param {String} $name - The CSS variables name\n/// @param {Map} $ignored [$ignored-keys] - A list of ignored keywords to be excluded when generating CSS variables\n/// @example scss Convert theme colors to CSS variables.\n///   $theme: digest-schema((background: color(primary, 500), foreground: contrast-color(color, 500));\n///   :root {\n///     @include css-vars-from-theme($theme);\n///   }\n/// @require {mixin} css-vars\n@mixin css-vars-from-theme($theme, $name, $ignored: $ignored-keys) {\n    $themes: map.get($theme, 'themes');\n    $prefix: map.get($theme, 'prefix');\n\n    // This is here only because the button theme consists of 4 nested themes.\n    @if $themes and meta.type-of($themes) == 'map' {\n        @each $theme in $themes {\n            @include css-vars(list.nth($theme, 2));\n        }\n    }\n\n    @each $key, $value in map.remove($theme, $ignored...) {\n        $variable: if($prefix, #{$prefix}-#{$key}, #{$key});\n\n        @if meta.type-of($value) != 'map' and $key != 'prefix' {\n            --#{$variable}: var(--#{$name}-#{$key}, #{$value});\n        }\n    }\n}\n\n/// Add theme colors as CSS variables to a given scope.\n/// @access public\n/// @group themes\n/// @param {map} $theme - The component theme to be used.\n/// @param {map} $scope [null] - The CSS variables scope to be used. (optional)\n/// @requires {mixin} css-vars-from-theme\n/// @example scss Convert grid theme colors to css variables\n///   $my-grid-theme grid-theme(\n///     $header-background: red,\n///     $content-background: #222\n///   );\n///   .my-grid {\n///     @include css-vars($my-grid-theme);\n///   }\n@mixin css-vars($theme, $scope: null) {\n    $s: map.get($theme, 'selector');\n    $n: map.get($theme, 'name');\n    $name: if($scope, $scope, $s or $n);\n\n    @if not($n) or string.length($n) == 0 {\n        @error 'Theme should have a non-null or empty name property. Example: theme: (name: my-theme)';\n    }\n\n    @if is-root() {\n        #{$name} {\n            @include css-vars-from-theme($theme, $n);\n        }\n    } @else {\n        &,\n        #{$name} {\n            @include css-vars-from-theme($theme, $n);\n        }\n    }\n}\n\n/// Adds border-radius style with a value between an upper and a lower bound.\n/// @access private\n/// @param {Number} $radius - The preferred value.\n/// @param {Number} $min [rem(0)] - The minimum value.\n/// @param {Number} $max [$radius] - The maximum allowed value.\n/// @example scss\n///    @include border-radius(4px);\n@mixin border-radius($radius, $min: #{rem(0)}, $max: $radius) {\n    border-radius: clamp(#{$min}, #{calc(var(--ig-radius-factor) * #{$radius})}, #{$max});\n}\n\n/// Truncates text to a specific number of lines.\n/// @access public\n/// @group utilities\n/// @param {number|string} $lines - The number of lines to show\n/// @param {Boolean} $inline - Sets whether an element displays inline-box or box\n/// @param {Boolean} $vertical - Sets whether an element lays out its contents horizontally or vertically\n/// @example scss Truncates text after the fourth line\n///    @include line-clamp(4, true, true);\n@mixin line-clamp($lines, $inline, $vertical) {\n    display: if($inline, -webkit-inline-box, -webkit-box);\n    -webkit-line-clamp: if($lines, $lines, initial);\n    -webkit-box-orient: if($vertical, vertical, initial);\n    overflow: hidden;\n}\n\n/// Applies text-overflow ellipsis to e text element.\n/// This won't work on display flex elements.\n/// @group utilities\n/// @access public\n/// @example scss\n///   .my-class {\n///     @include ellipsis();\n///   }\n@mixin ellipsis() {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n\n/// Hides the element from the DOM.\n/// @group utilities\n/// @access public\n/// @example scss - Sample usage\n///   input[type=\"checkbox\"] {\n///     @include hide-default();\n///   }\n@mixin hide-default {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    border: none;\n    clip: rect(0, 0, 0, 0);\n    outline: 0;\n    pointer-events: none;\n    overflow: hidden;\n    appearance: none;\n}\n\n/// Adds the required CSS properties so that the scope can react to size changes.\n/// @group themes\n/// @access public\n/// @example scss - Sample usage\n///   .my-component {\n///     @include sizable();\n///   }\n@mixin sizable() {\n    --is-large: clamp(0, (var(--component-size, 1) + 1) - var(--ig-size-large, 3), 1);\n    --is-medium:\n        min(\n            clamp(0, (var(--component-size, 1) + 1) - var(--ig-size-medium, 2), 1),\n            clamp(0, var(--ig-size-large, 3) - var(--component-size, 1), 1)\n        );\n    --is-small: clamp(0, var(--ig-size-medium) - var(--component-size, 1), 1);\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {List} $margin [null] - Sets the margin (top, right, bottom, left) of the chart content.\n/// @param {Color} $title-text-color [null] - Sets the color of the chart title.\n/// @param {List} $title-margin [null] - Sets the margin (top, right, bottom, left) of the chart title.\n/// @param {Color} $subtitle-text-color [null] - Sets the color of the chart subtitle.\n/// @param {List} $subtitle-margin [null] - Sets the margins (top, right, bottom, left) of the chart subtitle.\n/// @param {List} $brushes [null] - Defines the palette from which automatically assigned series colors are selected.\n/// @param {List} $marker-brushes [null] - Defines the palette from which automatically assigned marker brushes are selected.\n/// @param {List} $outlines [null] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @param {List} $marker-outlines [null] - Defines the palette from which automatically assigned marker outlines are selected.\n/// @param {Color} $plot-area-background [null] - Sets the brush used as the background for the current Chart object's plot area.\n/// @param {String} $title-horizontal-alignment [null] - The horizontal alignment to use for the title. Valid options are 'left', 'center', and 'right';\n/// @param {String} $subtitle-horizontal-alignment [null] - The horizontal alignment to use for the subtitle. Valid options are 'left', 'center', and 'right';\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $my-chart-theme: data-chart-theme($brushes: (orange, blue, pink));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-chart-theme);\n@function data-chart-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $margin: null,\n    $title-text-color: null,\n    $title-margin: null,\n    $subtitle-text-color: null,\n    $subtitle-margin: null,\n    $brushes: null,\n    $outlines: null,\n    $marker-brushes: null,\n    $marker-outlines: null,\n    $plot-area-background: null,\n    $title-horizontal-alignment: null,\n    $subtitle-horizontal-alignment: null,\n) {\n    $name: 'data-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-data-chart',\n            'webc': 'igc-data-chart',\n            'blazor': 'igb-data-chart'\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n    $margin-default: map.get($theme, 'margin');\n    $title-margin-default: map.get($theme, 'title-margin');\n    $subtitle-margin-default: map.get($theme, 'subtitle-margin');\n\n    @if not($margin) {\n        $margin: $margin-default;\n    } @else {\n        $margin: expand-shorthand(($margin));\n    }\n\n    @if not($title-margin) {\n        $title-margin: $title-margin-default;\n    } @else {\n        $title-margin: map-keys-prefix(expand-shorthand(($title-margin)), 'title');\n    }\n\n    @if not($subtitle-margin) {\n        $subtitle-margin: $subtitle-margin-default;\n    } @else {\n        $subtitle-margin: map-keys-prefix(expand-shorthand(($subtitle-margin)), 'subtitle');\n    }\n\n    @return extend(\n        $theme,\n        $margin,\n        $title-margin,\n        $subtitle-margin,\n        (\n            name: $name,\n            selector: $selector,\n            title-text-color: $title-text-color,\n            subtitle-text-color: null,\n            brushes: $brushes,\n            outlines: $outlines,\n            marker-brushes: $marker-brushes,\n            marker-outlines: $marker-outlines,\n            plot-area-background: $plot-area-background,\n            title-horizontal-alignment: $title-horizontal-alignment,\n            subtitle-horizontal-alignment: $subtitle-horizontal-alignment,\n        )\n    );\n}\n\n/// Adds typography styles for the data-chart component.\n/// Uses the 'h6' and 'subtitle-1'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by type-scale.\n/// @param {Map} $categories [(title: 'h6', subtitle: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} type-style\n@mixin data-chart-typography($type-scale, $categories: (\n    title: 'h6',\n    subtitle: 'subtitle-1',\n), $target: 'angular') {\n    $name: 'data-chart';\n    $title: map.get($categories, 'title');\n    $subtitle: map.get($categories, 'subtitle');\n    $title-styles: type-scale-category($type-scale, $title);\n    $subtitle-styles: type-scale-category($type-scale, $subtitle);\n    $selector: map.get(\n        (\n            'angular': 'igx-data-chart',\n            'webc': 'igc-data-chart',\n            'blazor': 'igb-data-chart'\n        ),\n        $target\n    );\n\n    #{$selector} {\n        @include font-var('title-text-style', $title-styles, $name);\n        @include font-var('subtitle-text-style', $subtitle-styles, $name);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography' as *;\n\n////\n/// @group themes\n/// @access private\n/// @author <a href=\"https://github.com/didimmova\" target=\"_blank\">Dilyana Dimova</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {List} $margin [null] - Sets the margin (top, right, bottom, left) of the chart content.\n/// @param {String} $title-alignment [null] - The horizontal alignment to use for the title.\n/// @param {Color} $title-text-color [null] - Sets the color of the chart title.\n/// @param {List} $title-margin [null] - Sets the margin (top, right, bottom, left) of the chart title.\n/// @param {Color} $subtitle-text-color [null] - Sets the color of the chart subtitle.\n/// @param {List} $subtitle-margin [null] - Sets the margins (top, right, bottom, left) of the chart subtitle.\n/// @param {String} $subtitle-alignment [null] - Gets or sets horizontal alignment which determines the subtitle position, relative to the left and right edges of the control.\n/// @param {List} $brushes [null] - Defines the palette from which automatically assigned series brushes colors are selected.\n/// @param {List} $marker-brushes [null]- Defines the palette from which automatically assigned series marker brushes colors are selected.\n/// @param {List} $negative-brushes [null] - Defines the palette used for coloring negative items in a chart type with contextual coloring, such as Waterfall.\n/// @param {List} $outlines [null] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @param {List} $marker-outlines [null] - Defines the palette from which automatically assigned series marker outline colors are selected.\n/// @param {List} $negative-outlines [null] - Defines the brushes used for drawing negative elements in a chart type with contextual coloring, such as Waterfall.\n/// @param {List} $indicator-brushes [null] - Defines the brushes used for financial indicators.\n/// @param {List} $indicator-negative-brushes [null] - Defines the brushes used for negative elements in financial indicators.\n/// @param {Number} $indicator-thickness [null]- Defines the palette from which automatically assigned series marker brushes colors are selected.\n/// @param {Color} $plot-area-background [null]- Gets or sets the brush used as the background for the current Chart object's plot area.\n/// @param {Number} $thickness [null] - Sets the thickness for all series in a chart.\n/// @param {Number} $toolbar-height [null] - Sets the height of the tooolbar.\n/// @param {List} $trend-line-brushes [null] - Defines the palette of brushes used for coloring trend lines in a chart.\n/// @param {Number} $trend-line-thickness [null] - Sets the thickness of the trend lines in a chart of type point, line, spline or bubble.\n/// @param {List} $volume-brushes [null]- Defines the brushes to use for filling volume series in the volume pane.\n/// @param {List} $volume-outlines [null] - Defines the brushes to use for outlining volume series in the volume pane.\n/// @param {Number} $volume-thickness [null]- Defines the outline thickness of volume series in the volume pane.\n/// @param {List} $x-axis-label-margin [null] - Sets the margin (top, right, bottom, left) of labels on the X-axis.\n/// @param {Color} $x-axis-label-text-color [null] - Sets the color of labels on the X-axis.\n/// @param {String} $x-axis-label-vertical-alignment [null] - Sets the vertical alignment of X-axis labels.\n/// @param {Color} $x-axis-major-stroke [null] - Sets the color to apply to major gridlines along the X-axis.\n/// @param {Number} $x-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the X-axis.\n/// @param {Color} $x-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the X-axis.\n/// @param {Number} $x-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the X-axis.\n/// @param {Color} $x-axis-strip [null] - Sets the color to apply to stripes along the X-axis.\n/// @param {Color} $x-axis-stroke [null] - Sets the color to apply to the X-axis line.\n/// @param {Number} $x-axis-stroke-thickness [null] - Sets the thickness to apply to the X-axis line.\n/// @param {Number} $x-axis-tick-length [null] - Sets the length of tickmarks along the X-axis.\n/// @param {Color} $x-axis-tick-stroke [null] - Sets the color to apply to tickmarks along the X-axis.\n/// @param {Number} $x-axis-tick-stroke-thickness [null] - Sets the thickness to apply to tickmarks along the X-axis.\n/// @param {String} $x-axis-title-alignment [null] - Sets the horizontal alignment of the X-axis title.\n/// @param {List} $x-axis-title-margin [null] - Sets the margin (top, right, bottom, left) of a title on the X-axis.\n/// @param {Color} $x-axis-title-text-color [null] - Sets the color of the title on the X-axis.\n/// @param {List} $y-axis-label-margin [null] - Sets the margin (top, right, bottom, left) of labels on the Y-axis.\n/// @param {Color} $y-axis-label-text-color [null] - Sets the color of labels on the Y-axis.\n/// @param {String} $y-axis-label-vertical-alignment [null] - Sets the vertical alignment of Y-axis labels.\n/// @param {Color} $y-axis-major-stroke [null] - Sets the color to apply to major gridlines along the y-axis.\n/// @param {Number} $y-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the Y-axis.\n/// @param {Color} $y-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the Y-axis.\n/// @param {Number} $y-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the Y-axis.\n/// @param {Color} $y-axis-strip [null] - Sets the color to apply to stripes along the Y-axis.\n/// @param {Color} $y-axis-stroke [null] - Sets the color to apply to the Y-axis line.\n/// @param {Number} $y-axis-stroke-thickness [null] - Sets the thickness to apply to the Y-axis line.\n/// @param {String} $y-axis-title-alignment [null] - Sets the horizontal alignment of the Y-axis title.\n/// @param {List} $y-axis-title-margin [null] - Sets the margin (top, right, bottom, left) of a title on the Y-axis.\n/// @param {Color} $y-axis-title-text-color [null] - Sets the color of a title on the Y-axis.\n/// @param {Number} $y-axis-tick-length [null] - Sets the length of tickmarks along the Y-axis.\n/// @param {Color} $y-axis-tick-stroke [null] - Sets the color to apply to tickmarks along the Y-axis.\n/// @param {Number} $y-axis-tick-stroke-thickness [null] - Sets the thickness to apply to tickmarks along the Y-axis.\n/// @param {String} $zoom-slider-x-axis-major-stroke [null] - Gets or sets stroke brush of major gridlines on x-axis of the zoom slider pane.\n/// @param {Number} $zoom-slider-x-axis-major-stroke-thickness [null] - Gets or sets thickness of major gridlines on x-axis of the zoom slider pane.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $my-chart-theme: financial-chart-theme($title-alignment: left, $brushes: red, blue, yellow, pink);\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-chart-theme);\n@function financial-chart-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $margin: null,\n    $title-alignment: null,\n    $title-text-color: null,\n    $title-margin: null,\n    $subtitle-text-color: null,\n    $subtitle-margin: null,\n    $subtitle-alignment: null,\n    $brushes: null,\n    $outlines: null,\n    $marker-brushes: null,\n    $marker-outlines: null,\n    $plot-area-background: null,\n    $indicator-brushes: null,\n    $indicator-negative-brushes: null,\n    $indicator-thickness: null,\n    $negative-brushes: null,\n    $negative-outlines: null,\n    $overlay-brushes: null,\n    $overlay-outlines: null,\n    $overlay-thickness: null,\n    $thickness: null,\n    $toolbar-height: null,\n    $trend-line-brushes: null,\n    $trend-line-thickness: null,\n    $volume-brushes: null,\n    $volume-outlines: null,\n    $volume-thickness: null,\n    $x-axis-label-margin: null,\n    $x-axis-label-text-color: null,\n    $x-axis-label-vertical-alignment: null,\n    $x-axis-major-stroke: null,\n    $x-axis-major-stroke-thickness: null,\n    $x-axis-minor-stroke: null,\n    $x-axis-minor-stroke-thickness: null,\n    $x-axis-strip: null,\n    $x-axis-stroke: null,\n    $x-axis-stroke-thickness: null,\n    $x-axis-title-alignment: null,\n    $x-axis-title-margin: null,\n    $x-axis-title-text-color: null,\n    $y-axis-label-margin: null,\n    $y-axis-label-text-color: null,\n    $y-axis-label-vertical-alignment: null,\n    $y-axis-major-stroke: null,\n    $y-axis-major-stroke-thickness: null,\n    $y-axis-minor-stroke: null,\n    $y-axis-minor-stroke-thickness: null,\n    $y-axis-strip: null,\n    $y-axis-stroke: null,\n    $y-axis-stroke-thickness: null,\n    $y-axis-title-alignment: null,\n    $y-axis-title-margin: null,\n    $y-axis-title-text-color: null,\n    $zoom-slider-x-axis-major-stroke: null,\n    $zoom-slider-x-axis-major-stroke-thickness: null\n) {\n    $name: 'financial-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-financial-chart',\n            'webc': 'igc-financial-chart',\n            'blazor': 'igb-financial-chart'\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n    $title-margin-default: map.get($theme, 'title-margin');\n    $subtitle-margin-default: map.get($theme, 'subtitle-margin');\n    $x-axis-label-margin-default: map.get($theme, 'x-axis-label-margin');\n    $x-axis-title-margin-default: map.get($theme, 'x-axis-title-margin');\n    $y-axis-label-margin-default: map.get($theme, 'y-axis-label-margin');\n    $y-axis-title-margin-default: map.get($theme, 'x-axis-title-margin');\n\n    @if not($title-margin) {\n        $title-margin: $title-margin-default;\n    } @else {\n        $title-margin: map-keys-prefix(expand-shorthand(($title-margin)), 'title');\n    }\n\n    @if not($subtitle-margin) {\n        $subtitle-margin: $subtitle-margin-default;\n    } @else {\n        $subtitle-margin: map-keys-prefix(expand-shorthand(($subtitle-margin)), 'subtitle');\n    }\n\n    @if not($x-axis-label-margin) {\n        $x-axis-label-margin: $x-axis-label-margin-default;\n    } @else {\n        $x-axis-label-margin: map-keys-prefix(expand-shorthand(($x-axis-label-margin)), 'x-axis-label');\n    }\n\n    @if not($x-axis-title-margin) {\n        $x-axis-title-margin: $x-axis-title-margin-default;\n    } @else {\n        $x-axis-title-margin: map-keys-prefix(expand-shorthand(($x-axis-title-margin)), 'x-axis-title');\n    }\n\n    @if not($y-axis-label-margin) {\n        $y-axis-label-margin: $y-axis-label-margin-default;\n    } @else {\n        $y-axis-label-margin: map-keys-prefix(expand-shorthand(($y-axis-label-margin)), 'y-axis-label');\n    }\n\n    @if not($y-axis-title-margin) {\n        $y-axis-title-margin: $y-axis-title-margin-default;\n    } @else {\n        $y-axis-title-margin: map-keys-prefix(expand-shorthand(($y-axis-title-margin)), 'y-axis-title');\n    }\n\n    @return extend(\n        $theme,\n        $margin,\n        $title-margin,\n        $subtitle-margin,\n        $x-axis-label-margin,\n        $x-axis-title-margin,\n        $y-axis-label-margin,\n        $y-axis-title-margin,\n        (\n            name: $name,\n            selector: $selector,\n            margin: $margin,\n            title-alignment: $title-alignment,\n            title-text-color: $title-text-color,\n            title-margin: $title-margin,\n            subtitle-text-color: $subtitle-text-color,\n            subtitle-margin: $subtitle-margin,\n            subtitle-alignment: $subtitle-alignment,\n            brushes: $brushes,\n            outlines: $outlines,\n            marker-brushes: $marker-brushes,\n            marker-outlines: $marker-outlines,\n            plot-area-background: $plot-area-background,\n            indicator-brushes: $indicator-brushes,\n            indicator-negative-brushes: $indicator-negative-brushes,\n            indicator-thickness: $indicator-thickness,\n            negative-brushes: $negative-brushes,\n            negative-outlines: $negative-outlines,\n            overlay-brushes: $overlay-brushes,\n            overlay-outlines: $overlay-outlines,\n            overlay-thickness: $overlay-thickness,\n            thickness: $thickness,\n            toolbar-height: $toolbar-height,\n            trend-line-brushes: $trend-line-brushes,\n            trend-line-thickness: $trend-line-thickness,\n            volume-brushes: $volume-brushes,\n            volume-outlines: $volume-outlines,\n            volume-thickness: $volume-thickness,\n            x-axis-label-margin: $x-axis-label-margin,\n            x-axis-label-text-color: $x-axis-label-text-color,\n            x-axis-label-vertical-alignment: $x-axis-label-vertical-alignment,\n            x-axis-major-stroke: $x-axis-major-stroke,\n            x-axis-major-stroke-thickness: $x-axis-major-stroke-thickness,\n            x-axis-minor-stroke: $x-axis-minor-stroke,\n            x-axis-minor-stroke-thickness: $x-axis-minor-stroke-thickness,\n            x-axis-strip: $x-axis-strip,\n            x-axis-stroke: $x-axis-stroke,\n            x-axis-stroke-thickness: $x-axis-stroke-thickness,\n            x-axis-title-alignment: $x-axis-title-alignment,\n            x-axis-title-margin: $x-axis-title-margin,\n            x-axis-title-text-color: $x-axis-title-text-color,\n            y-axis-label-margin: $y-axis-label-margin,\n            y-axis-label-text-color: $y-axis-label-text-color,\n            y-axis-label-vertical-alignment: $y-axis-label-vertical-alignment,\n            y-axis-major-stroke: $y-axis-major-stroke,\n            y-axis-major-stroke-thickness: $y-axis-major-stroke-thickness,\n            y-axis-minor-stroke: $y-axis-minor-stroke,\n            y-axis-minor-stroke-thickness: $y-axis-minor-stroke-thickness,\n            y-axis-strip: $y-axis-strip,\n            y-axis-stroke: $y-axis-stroke,\n            y-axis-stroke-thickness: $y-axis-stroke-thickness,\n            y-axis-title-alignment: $y-axis-title-alignment,\n            y-axis-title-margin: $y-axis-title-margin,\n            y-axis-title-text-color: $y-axis-title-text-color,\n            zoom-slider-x-axis-major-stroke: $zoom-slider-x-axis-major-stroke,\n            zoom-slider-x-axis-major-stroke-thicknes: $zoom-slider-x-axis-major-stroke-thickness\n        )\n    );\n}\n\n/// Adds typography styles for the financial-chart component.\n/// Uses the 'h6', 'subtitle-1' and 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by type-scale.\n/// @param {Map} $categories [(\n/// 'title': 'h6',\n/// 'subtitle': 'subtitle-1,\n/// 'x-axis-label-text-style': 'body-2',\n/// 'y-axis-label-text-style': 'body-2',\n/// 'x-axis-title-text-style': 'body-2',\n/// 'y-axis-title-text-style': 'body-2',\n/// )] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} type-style\n@mixin financial-chart-typography($type-scale, $categories: (\n    'title': 'h6',\n    'subtitle': 'subtitle-1',\n    'x-axis-label-text-style': 'body-2',\n    'x-axis-title-text-style': 'body-2',\n    'y-axis-label-text-style': 'body-2',\n    'y-axis-title-text-style': 'body-2',\n), $target: 'angular') {\n    $name: 'financial-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-financial-chart',\n            'webc': 'igc-financial-chart',\n            'blazor': 'igb-financial-chart'\n        ),\n        $target\n    );\n    $title: map.get($categories, 'title');\n    $subtitle: map.get($categories, 'subtitle');\n    $x-axis-label-text-style: map.get($categories, 'x-axis-label-text-style');\n    $x-axis-title-text-style: map.get($categories, 'x-axis-title-text-style');\n    $y-axis-label-text-style: map.get($categories, 'y-axis-label-text-style');\n    $y-axis-title-text-style: map.get($categories, 'y-axis-title-text-style');\n    $title-styles: type-scale-category($type-scale, $title);\n    $subtitle-styles: type-scale-category($type-scale, $subtitle);\n    $x-axis-label-styles: type-scale-category($type-scale, $x-axis-label-text-style);\n    $x-axis-title-styles: type-scale-category($type-scale, $x-axis-title-text-style);\n    $y-axis-label-styles: type-scale-category($type-scale, $y-axis-label-text-style);\n    $y-axis-title-styles: type-scale-category($type-scale, $y-axis-title-text-style);\n\n    #{$selector} {\n        @include font-var('title-text-style', $title-styles, $name);\n        @include font-var('subtitle-text-style', $subtitle-styles, $name);\n        @include font-var('x-axis-label-text-style', $x-axis-label-styles, $name);\n        @include font-var('x-axis-title-text-style', $x-axis-title-styles, $name);\n        @include font-var('y-axis-label-text-style', $y-axis-label-styles, $name);\n        @include font-var('y-axis-title-text-style', $y-axis-title-styles, $name);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography' as *;\n\n////\n/// @group themes\n/// @access private\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n///\n/// @param {List} $brushes [null] - Defines the palette from which automatically assigned series colors are nelected.\n/// @param {List} $outlines [null] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @param {String} $outer-label-alignment [null] - Sets which side of the chart the outer labels should appear.\n/// @param {Color} $outer-label-text-color [null] - Sets the Color used for the outer labels.\n/// @param {Color} $outer-label-visibility [null] - Sets whether the outer labels are visible.\n/// @param {Number} $outline-thickness [null] - Sets the thickness of outline around slices.\n/// @param {Color} $text-color - [null] Sets the Color used for the inner labels.\n///\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $my-chart-theme: funnel-chart-theme($brushes: (orange, blue, pink));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-chart-theme);\n@function funnel-chart-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $brushes: null,\n    $outlines: null,\n    $outer-label-alignment: null,\n    $outer-label-text-color: null,\n    $outer-label-visibility: null,\n    $outline-thickness: null,\n    $text-color: null,\n) {\n    $name: 'funnel-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-funnel-chart',\n            'webc': 'igc-funnel-chart',\n            'blazor': 'igb-funnel-chart'\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        brushes: $brushes,\n        outlines: $outlines,\n        outer-label-alignment: $outer-label-alignment,\n        outer-label-text-color: $outer-label-text-color,\n        outer-label-visibility: $outer-label-visibility,\n        outline-thickness: $outline-thickness,\n        text-color: $text-color,\n    ));\n}\n\n@mixin funnel-chart-typography($type-scale, $categories: (\n    outer-label-text-style: 'h1',\n    text-style: 'subtitle-1',\n), $target: 'angular') {\n    $name: 'funnel-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-funnel-chart',\n            'webc': 'igc-funnel-chart',\n            'blazor': 'igb-funnel-chart'\n        ),\n        $target\n    );\n    $outer-label-text-style: map.get($categories, 'outer-label-text-style');\n    $text-style: map.get($categories, 'text-style');\n    $outer-label: type-scale-category($type-scale, $outer-label-text-style);\n    $text: type-scale-category($type-scale, $text-style);\n\n    #{$selector} {\n        @include font-var('outer-label-text-style', $outer-label, $name);\n        @include font-var('text-style', $text, $name);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/SisIvanova\" target=\"_blank\">Silvia Ivanova</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n///\n/// @param {Color} $backing-brush [null] - Sets the color to use to fill the backing of the linear gauge.\n/// @param {Color} $backing-outline [null] - Sets the color to use for the outline of the backing.\n/// @param {Number} $backing-stroke-thickness [null] - Sets the stroke thickness of the backing outline.\n/// @param {Color} $font-brush [null] - Sets the color to use for the label font.\n/// @param {Number} $minor-tick-stroke-thickness [null] - Sets the stroke thickness to use when rendering minor ticks.\n/// @param {Number} $needle-breadth [null] - Sets the needle breadth.\n/// @param {Color} $needle-brush [null] - Sets the color to use for the needle element.\n/// @param {Number} $needle-inner-base-width [null] - Sets the width of the needle's inner base.\n/// @param {Number} $needle-inner-point-width [null] - Sets the width of the needle's inner point.\n/// @param {Number} $needle-outer-base-width [null] - Sets the width of the needle's outer base.\n/// @param {Number} $needle-outer-point-width [null] - Sets the width of the needle's outer point.\n/// @param {Color} $needle-outline [null] - Sets the color to use for the outline of needle element.\n/// @param {Number} $needle-stroke-thickness [null] - Sets the stroke thickness to use when rendering single actual value element.\n/// @param {List} $range-brushes [null] - Sets a collection of colors to be used as the palette for linear gauge ranges.\n/// @param {List} $range-outlines [null] - Sets a collection of colors to be used as the palette for linear gauge outlines.\n/// @param {Color} $scale-brush [null] - Sets the color to use to fill the scale of the linear gauge.\n/// @param {Color} $scale-outline [null] - Sets the color to use for the outline of the scale.\n/// @param {Number} $scale-stroke-thickness [null] - Sets the stroke thickness of the scale outline.\n/// @param {Color} $tick-brush [null] - Sets the color to use for the major tickmarks.\n/// @param {Number} $tick-stroke-thickness [null] - Sets the stroke thickness to use when rendering ticks.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $custom-gauge-theme: linear-gauge-theme($brushes: (red, green, blue));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($custom-gauge-theme);\n@function linear-gauge-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n    $rest...\n) {\n    $name: 'linear-gauge';\n    $selector: map.get(\n        (\n            'angular': 'igx-linear-gauge',\n            'webc': 'igc-linear-gauge',\n            'blazor': 'igb-linear-gauge'\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n\n    @return extend(\n        $theme,\n        keywords($rest),\n        (\n            name: $name,\n            selector: $selector,\n        ),\n    );\n}\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {Map} $width [null] - The width of the gauge in pixels, string (px) or percentage (%).\n/// @param {Map} $height [null] - The height of the gauge in pixels, string (px) or percentage (%).\n/// @param {Color} $backing-brush [null] - Sets the color to use to fill the backing of the linear gauge.\n/// @param {Color} $backing-outline [null] - Sets the color to use for the outline of the backing.\n/// @param {Number} $backing-stroke-thickness [null] - Sets the stroke thickness of the backing outline.\n/// @param {Color} $font-brush [null] - Sets the color to use for the label font.\n/// @param {Number} $minor-tick-stroke-thickness [null] - Sets the stroke thickness to use when rendering minor ticks.\n/// @param {Color} $needle-brush [null] - Sets the color to use for the needle element.\n/// @param {Color} $needle-outline [null] - Sets the color to use for the outline of needle element.\n/// @param {Number} $needle-stroke-thickness [null] - Sets the stroke thickness to use when rendering single actual value element.\n/// @param {List} $range-brushes [null] - Sets a collection of colors to be used as the palette for linear gauge ranges.\n/// @param {List} $range-outlines [null] - Sets a collection of colors to be used as the palette for linear gauge outlines.\n/// @param {Color} $scale-brush [null] - Sets the color to use to fill the scale of the linear gauge.\n/// @param {Color} $tick-brush [null] - Sets the color to use for the major tickmarks.\n/// @param {Number} $tick-stroke-thickness [null] - Sets the stroke thickness to use when rendering ticks.\n/// @param {Color} $needle-pivot-brush [null] - Sets the color of the needle pivot point.\n/// @param {Color} $needle-pivot-outline [null] - Sets the outline color of the needle pivot point.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $custom-gauge-theme: radial-gauge-theme($brushes: (red, green, blue));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($custom-gauge-theme);\n@function radial-gauge-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n    $rest...\n) {\n    $name: 'radial-gauge';\n    $selector: map.get(\n        (\n            'angular': 'igx-radial-gauge',\n            'webc': 'igc-radial-gauge',\n            'blazor': 'igb-radial-gauge'\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n\n    @return extend(\n        $theme,\n        keywords($rest),\n        (\n            name: $name,\n            selector: $selector,\n        ),\n    );\n}\n\n/// Adds typography styles for the linear-gauge component.\n/// @access private\n/// @group typography\n/// @requires {mixin} type-style\n@mixin gauge-typography($target: 'angular') {\n    $linear-selector: map.get(\n        (\n            'angular': 'igx-linear-gauge',\n            'webc': 'igc-linear-gauge',\n            'blazor': 'igb-linear-gauge'\n        ),\n        $target\n    );\n    $radial-selector: map.get(\n        (\n            'angular': 'igx-radial-gauge',\n            'webc': 'igc-radial-gauge',\n            'blazor': 'igb-radial-gauge'\n        ),\n        $target\n    );\n\n    #{$linear-selector} {\n        --linear-gauge-font: var(--ig-font-family, inherit);\n    }\n\n    #{$radial-selector} {\n        --radial-gauge-font: var(--ig-font-family, inherit);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {Color} $backing-brush [null] - Sets the brush to use to fill the backing of the bullet graph.\n/// @param {Color} $backing-outline [null] - Sets the brush to use for the outline of the backing.\n/// @param {Number} $backing-stroke-thickness [null] - Sets the stroke thickness of the backing outline.\n/// @param {Color} $font-brush [null] - Sets the brush to use for the label font.\n/// @param {Color} $minor-tick-brush [null] - Sets the brush to use for the minor tickmarks.\n/// @param {Number} $minor-tick-thickness [null] - Stroke thickness to use when rendering minor ticks.\n/// @param {List} $range-brushes [null] - Sets a collection of brushes to be used as the palette for bullet graph ranges.\n/// @param {List} $range-outlines [null] - Sets a collection of brushes to be used as the palette for bullet graph outlines.\n/// @param {Color} $scale-background-brush [null] - Sets the background brush for the scale.\n/// @param {Color} $scale-background-outline [null] - Sets the background outline for the scale.\n/// @param {Number} $scale-background-thickness [null] - Sets the background outline thickness for the scale.\n/// @param {Number} $target-value-breadth [null] - Sets the breadth of the target value element.\n/// @param {Color} $target-value-brush [null] - Sets the brush to use when rendering the fill of the comparative marker.\n/// @param {Color} $target-value-outline [null] - Sets the brush to use when rendering the outline of the target value.\n/// @param {Number} $target-value-thickness [null] - Sets the stroke thickness of the outline of the target value bar.\n/// @param {Color} $tick-brush [null] - Sets the brush to use for the major tickmarks.\n/// @param {Number} $tick-stroke-thickness [null] - Sets the stroke thickness to use when rendering ticks.\n/// @param {Color} $value-brush [null] - Sets the brush to use for the actual value element.\n/// @param {Color} $value-outline [null] - Sets the brush to use for the outline of actual value element.\n/// @param {Number} $value-stroke-thickness [null] - Sets the stroke thickness to use when rendering single actual value element.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $my-chart-theme: bullet-graph-theme($brushes: (orange, blue, pink));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-chart-theme);\n@function bullet-graph-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $backing-brush: null,\n    $backing-outline: null,\n    $backing-stroke-thickness: null,\n    $font-brush: null,\n    $minor-tick-brush: null,\n    $minor-tick-thickness: null,\n    $range-brushes: null,\n    $range-outlines: null,\n    $scale-background-brush: null,\n    $scale-background-outline: null,\n    $scale-background-thickness: null,\n    $target-value-breadth: null,\n    $target-value-brush: null,\n    $target-value-outline: null,\n    $target-value-thickness: null,\n    $tick-brush: null,\n    $tick-stroke-thickness: null,\n    $value-brush: null,\n    $value-outline: null,\n    $value-stroke-thickness: null,\n) {\n    $name: 'bullet-graph';\n    $selector: map.get(\n        (\n            'angular': 'igx-bullet-graph',\n            'webc': 'igc-bullet-graph',\n            'blazor': 'igb-bullet-graph'\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n\n    @return extend(\n        $theme,\n        (\n            name: $name,\n            selector: $selector,\n            backing-brush: $backing-brush,\n            backing-outline: $backing-outline,\n            backing-stroke-thickness: $backing-stroke-thickness,\n            font-brush: $font-brush,\n            minor-tick-brush: $minor-tick-brush,\n            minor-tick-thickness: $minor-tick-thickness,\n            range-brushes: $range-brushes,\n            range-outlines: $range-outlines,\n            scale-background-brush: $scale-background-brush,\n            scale-background-outline: $scale-background-outline,\n            scale-background-thickness: $scale-background-thickness,\n            target-value-breadth: $target-value-breadth,\n            target-value-brush: $target-value-brush,\n            target-value-outline: $target-value-outline,\n            target-value-thickness: $target-value-thickness,\n            tick-brush: $tick-brush,\n            tick-stroke-thickness: $tick-stroke-thickness,\n            value-brush: $value-brush,\n            value-outline: $value-outline,\n            value-stroke-thickness: $value-stroke-thickness,\n        )\n    );\n}\n\n/// Adds typography styles for the graph component.\n/// @access private\n/// @group typography\n/// @requires {mixin} type-style\n@mixin graph-typography($target: 'angular') {\n    $selector: map.get(\n        (\n            'angular': 'igx-bullet-graph',\n            'webc': 'igc-bullet-graph',\n            'blazor': 'igb-bullet-graph'\n        ),\n        $target\n    );\n\n    #{$selector} {\n        --bullet-graph-font: var(--ig-font-family, inherit);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {List} $brushes [series] - Defines the palette from which automatically assigned series colors are selected.\n/// @param {List} $outlines [series] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @param {Number} $label-extent [null] - Sets the pixel amount by which the labels are offset from the edge of the slices.\n/// @param {Color} $label-inner-color [null] - Sets the color for labels rendered inside of the pie chart.\n/// @param {Color} $label-outer-color [null] - Sets the color for labels rendered outside of the pie chart.\n/// @param {String} $labels-position [null] - Sets the position of chart labels. Valid values are: 'none', 'center', 'insideEnd', 'outsideEnd', and 'bestFit'.\n/// @param {Number} $leader-line-margin [null] - Sets the margin between a label and the end of its leader line.\n/// @param {String} $leader-line-type [null] - Sets what type of leader lines will be used for the outside end labels. Valid values are: 'straight', 'spline', and 'arc'.\n/// @param {String} $leader-line-visibility [null] - Sets whether the leader lines are visible. Valid values are: 'visible' and 'collapsed'.\n/// @param {Number} $radius-factor [null] - Sets the scaling factor of the chart's radius. Value between 0 and 1.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $my-chart-theme: pie-chart-theme($brushes: (red, orange, blue));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-chart-theme);\n@function pie-chart-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $brushes: null,\n    $outlines: null,\n    $label-extent: null,\n    $label-inner-color: null,\n    $label-outer-color: null,\n    $labels-position: null,\n    $leader-line-margin: null,\n    $leader-line-type: null,\n    $leader-line-visibility: null,\n    $radius-factor: null,\n) {\n    $name: 'pie-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-pie-chart',\n            'webc': 'igc-pie-chart',\n            'blazor': 'igb-pie-chart'\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n\n    @return extend( $theme, (\n        name: $name,\n        selector: $selector,\n        brushes: $brushes,\n        outlines: $outlines,\n        label-extent: $label-extent,\n        label-inner-color: $label-inner-color,\n        label-outer-color: $label-outer-color,\n        labels-position: $labels-position,\n        leader-line-margin: $leader-line-margin,\n        leader-line-type: $leader-line-type,\n        leader-line-visibility: $leader-line-visibility,\n        radius-factor: $radius-factor,\n    ));\n}\n\n/// Adds typography styles for the pie-chart component.\n/// Uses the 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by type-scale.\n/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} type-style\n@mixin pie-chart-typography($type-scale, $categories: (\n    text: 'body-2',\n), $target: 'angular') {\n    $name: 'pie-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-pie-chart',\n            'webc': 'igc-pie-chart',\n            'blazor': 'igb-pie-chart'\n        ),\n        $target\n    );\n    $text: map.get($categories, 'text');\n    $text-styles: type-scale-category($type-scale, $text);\n\n    #{$selector} {\n        @include font-var('text-style', $text-styles, $name);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {List} $margin [null] - Sets the margin (top, right, bottom, left) of the chart content.\n/// @param {Color} $title-alignment [null] - Sets horizontal alignment which determines the title position, relative to the left and right edges of the control.\n/// @param {Color} $title-text-color [null] - Sets the color of the chart title.\n/// @param {List} $title-margin [null] - Sets the margin (top, right, bottom, left) of the chart title.\n/// @param {String} $subtitle-alignment [null] - Sets horizontal alignment which determines the subtitle position, relative to the left and right edges of the control.\n/// @param {Color} $subtitle-text-color [null] - Sets the color of the chart subtitle.\n/// @param {List} $subtitle-margin [null] - Sets the margins (top, right, bottom, left) of the chart subtitle.\n/// @param {List} $brushes [null] - Defines the palette from which automatically assigned series colors are selected.\n/// @param {List} $marker-brushes [null] - Sets the palette of brushes used for rendering fill area of data point markers.\n/// @param {List} $outlines [null] - Sets the palette of brushes to use for outlines on the chart series.\n/// @param {List} $marker-outlines [null] - Sets the palette of brushes used for rendering outlines of data point markers.\n/// @param {Number} $thickness [null] - Sets the thickness for all series in this chart.\n/// @param {List} $trend-line-brushes [null] - Sets the palette of brushes to used for coloring trend lines in this chart.\n/// @param {Number} $trend-line-thickness [null] - Sets the thickness of the trend lines in this chart. This property applies only to these chart types: point, line, spline, and bubble.\n/// @param {List} $x-axis-label-margin [null] - Sets the margin of labels on the X-axis.\n/// @param {Color} $x-axis-label-text-color [null] - Sets color of labels on the X-axis.\n/// @param {String} $x-axis-label-vertical-alignment [null] - Sets Vertical alignment of X-axis labels.\n/// @param {Color} $x-axis-major-stroke [null] - Sets the color to apply to major gridlines along the X-axis.\n/// @param {Number} $x-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the X-axis.\n/// @param {Color} $x-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the X-axis.\n/// @param {Number} $x-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the X-axis.\n/// @param {Color} $x-axis-strip [null] - Sets the color to apply to stripes along the X-axis.\n/// @param {Color} $x-axis-stroke [null] - Sets the color to apply to the X-axis line.\n/// @param {Number} $x-axis-stroke-thickness [null] - Sets the thickness to apply to the X-axis line.\n/// @param {String} $x-axis-title-alignment [null] - Sets Horizontal alignment of the X-axis title.\n/// @param {Color} $x-axis-title-color [null] - Sets color of title on the X-axis.\n/// @param {List} $x-axis-title-margin [null] - Sets the margin around the title on the X-axis.\n/// @param {List} $y-axis-label-margin [null] - Sets the margin of labels on the Y-axis.\n/// @param {Color} $y-axis-label-text-color [null] - Sets color of labels on the Y-axis.\n/// @param {String} $y-axis-label-vertical-alignment [null] - Sets Vertical alignment of Y-axis labels.\n/// @param {Color} $y-axis-major-stroke [null] - Sets the color to apply to major gridlines along the Y-axis.\n/// @param {Number} $y-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the Y-axis.\n/// @param {Color} $y-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the Y-axis.\n/// @param {Number} $y-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the Y-axis.\n/// @param {Color} $y-axis-strip [null] - Sets the color to apply to stripes along the Y-axis.\n/// @param {Color} $y-axis-stroke [null] - Sets the color to apply to the Y-axis line.\n/// @param {Number} $y-axis-stroke-thickness [null] - Sets the thickness to apply to the Y-axis line.\n/// @param {String} $y-axis-title-alignment [null] - Sets Horizontal alignment of the Y-axis title.\n/// @param {Color} $y-axis-title-color [null] - Sets color of title on the Y-axis.\n/// @param {List} $y-axis-title-margin [null] - Sets the margin around the title on the Y-axis.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $my-chart-theme: shape-chart-theme($brushes: (orange, blue, pink));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-chart-theme);\n@function shape-chart-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $margin: null,\n    $title-text-color: null,\n    $title-margin: null,\n    $subtitle-text-color: null,\n    $subtitle-margin: null,\n    $brushes: null,\n    $outlines: null,\n    $marker-brushes: null,\n    $marker-outlines: null,\n    $thickness: null,\n    $trend-line-brushes: null,\n    $trend-line-thickness: null,\n    $x-axis-label-margin: null,\n    $x-axis-label-text-color: null,\n    $x-axis-label-vertical-alignment: null,\n    $x-axis-major-stroke: null,\n    $x-axis-major-stroke-thickness: null,\n    $x-axis-minor-stroke: null,\n    $x-axis-minor-stroke-thickness: null,\n    $x-axis-strip: null,\n    $x-axis-stroke: null,\n    $x-axis-stroke-thickness: null,\n    $x-axis-title-alignment: null,\n    $x-axis-title-color: null,\n    $x-axis-title-margin: null,\n    $y-axis-label-margin: null,\n    $y-axis-label-text-color: null,\n    $y-axis-label-vertical-alignment: null,\n    $y-axis-major-stroke: null,\n    $y-axis-major-stroke-thickness: null,\n    $y-axis-minor-stroke: null,\n    $y-axis-minor-stroke-thickness: null,\n    $y-axis-strip: null,\n    $y-axis-stroke: null,\n    $y-axis-stroke-thickness: null,\n    $y-axis-title-alignment: null,\n    $y-axis-title-color: null,\n    $y-axis-title-margin: null,\n) {\n    $name: 'shape-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-shape-chart',\n            'webc': 'igc-shape-chart',\n            'blazor': 'igb-shape-chart'\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n    $margin-default: map.get($theme, 'margin');\n    $title-margin-default: map.get($theme, 'title-margin');\n    $subtitle-margin-default: map.get($theme, 'subtitle-margin');\n    $x-axis-label-margin-default: map.get($theme, 'x-axis-label-margin');\n    $y-axis-label-margin-default: map.get($theme, 'y-axis-label-margin');\n    $x-axis-title-margin-default: map.get($theme, 'x-axis-title-margin');\n    $y-axis-title-margin-default: map.get($theme, 'y-axis-title-margin');\n\n    @if not($margin) {\n        $margin: $margin-default;\n    } @else {\n        $margin: expand-shorthand(($margin));\n    }\n\n    @if not($title-margin) {\n        $title-margin: $title-margin-default;\n    } @else {\n        $title-margin: map-keys-prefix(expand-shorthand(($title-margin)), 'title');\n    }\n\n    @if not($subtitle-margin) {\n        $subtitle-margin: $subtitle-margin-default;\n    } @else {\n        $subtitle-margin: map-keys-prefix(expand-shorthand(($subtitle-margin)), 'subtitle');\n    }\n\n    @if not($x-axis-label-margin) {\n        $x-axis-label-margin: $x-axis-label-margin-default;\n    } @else {\n        $x-axis-label-margin: map-keys-prefix(expand-shorthand(($x-axis-label-margin)), 'x-axis-label');\n    }\n\n    @if not($y-axis-label-margin) {\n        $y-axis-label-margin: $y-axis-label-margin-default;\n    } @else {\n        $y-axis-label-margin: map-keys-prefix(expand-shorthand(($y-axis-label-margin)), 'y-axis-label');\n    }\n\n    @if not($x-axis-title-margin) {\n        $x-axis-title-margin: $x-axis-title-margin-default;\n    } @else {\n        $x-axis-title-margin: map-keys-prefix(expand-shorthand(($x-axis-title-margin)), 'x-axis-title');\n    }\n\n    @if not($y-axis-title-margin) {\n        $y-axis-title-margin: $y-axis-title-margin-default;\n    } @else {\n        $y-axis-title-margin: map-keys-prefix(expand-shorthand(($y-axis-title-margin)), 'y-axis-title');\n    }\n\n    @return extend(\n        $theme,\n        $margin,\n        $title-margin,\n        $subtitle-margin,\n        $x-axis-label-margin,\n        $x-axis-title-margin,\n        $y-axis-label-margin,\n        $y-axis-title-margin,\n        (\n            name: $name,\n            selector: $selector,\n            title-text-color: $title-text-color,\n            subtitle-text-color: $subtitle-text-color,\n            brushes: $brushes,\n            outlines: $outlines,\n            thickness: $thickness,\n            trend-line-brushes: $trend-line-brushes,\n            trend-line-thickness: $trend-line-thickness,\n            x-axis-label-text-color: $x-axis-label-text-color,\n            x-axis-label-vertical-alignment: $x-axis-label-vertical-alignment,\n            x-axis-major-stroke: $x-axis-major-stroke,\n            x-axis-major-stroke-thickness: $x-axis-major-stroke-thickness,\n            x-axis-minor-stroke: $x-axis-minor-stroke,\n            x-axis-minor-stroke-thickness: $x-axis-minor-stroke-thickness,\n            x-axis-strip: $x-axis-strip,\n            x-axis-stroke: $x-axis-stroke,\n            x-axis-stroke-thickness: $x-axis-stroke-thickness,\n            x-axis-title-alignment: $x-axis-title-alignment,\n            x-axis-title-color: $x-axis-title-color,\n            y-axis-label-text-color: $y-axis-label-text-color,\n            y-axis-label-vertical-alignment: $y-axis-label-vertical-alignment,\n            y-axis-major-stroke: $y-axis-major-stroke,\n            y-axis-major-stroke-thickness: $y-axis-major-stroke-thickness,\n            y-axis-minor-stroke: $y-axis-minor-stroke,\n            y-axis-minor-stroke-thickness: $y-axis-minor-stroke-thickness,\n            y-axis-strip: $y-axis-strip,\n            y-axis-stroke: $y-axis-stroke,\n            y-axis-stroke-thickness: $y-axis-stroke-thickness,\n            y-axis-title-alignment: $y-axis-title-alignment,\n            y-axis-title-color: $y-axis-title-color,\n        )\n    );\n}\n\n/// Adds typography styles for the shape-chart component.\n/// Uses the 'h3', 'h4', 'h6', and 'subtitle-1'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(\n/// 'title': 'h6',\n/// 'subtitle': 'subtitle-1,\n/// 'x-axis-label-text-style': 'h4',\n/// 'y-axis-label-text-style': 'h4',\n/// 'x-axis-title-text-style': 'h3',\n/// 'y-axis-title-text-style': 'h3',\n/// )] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} type-style\n@mixin shape-chart-typography($type-scale, $categories: (\n    'title': 'h6',\n    'subtitle': 'subtitle-1',\n    'x-axis-label-text-style': 'h4',\n    'y-axis-label-text-style': 'h4',\n    'x-axis-title-text-style': 'h3',\n    'y-axis-title-text-style': 'h3',\n), $target: 'angular') {\n    $name: 'shape-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-shape-chart',\n            'webc': 'igc-shape-chart',\n            'blazor': 'igb-shape-chart'\n        ),\n        $target\n    );\n    $title: map.get($categories, 'title');\n    $subtitle: map.get($categories, 'subtitle');\n    $x-axis-title-text-style: map.get($categories, 'x-axis-title-text-style');\n    $x-axis-label-text-style: map.get($categories, 'x-axis-label-text-style');\n    $y-axis-title-text-style: map.get($categories, 'y-axis-title-text-style');\n    $y-axis-label-text-style: map.get($categories, 'y-axis-label-text-style');\n    $title-styles: type-scale-category($type-scale, $title);\n    $subtitle-styles: type-scale-category($type-scale, $subtitle);\n    $x-axis-title-styles: type-scale-category($type-scale, $x-axis-title-text-style);\n    $x-axis-label-styles: type-scale-category($type-scale, $x-axis-label-text-style);\n    $y-axis-title-styles: type-scale-category($type-scale, $y-axis-title-text-style);\n    $y-axis-label-styles: type-scale-category($type-scale, $y-axis-label-text-style);\n\n    #{$selector} {\n        @include font-var('title-text-style', $title-styles, $name);\n        @include font-var('subtitle-text-style', $subtitle-styles, $name);\n        @include font-var('x-axis-title-text-style', $x-axis-title-styles, $name);\n        @include font-var('x-axis-label-text-style', $x-axis-label-styles, $name);\n        @include font-var('y-axis-title-text-style', $y-axis-title-styles, $name);\n        @include font-var('y-axis-label-text-style', $y-axis-label-styles, $name);\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $banner-background [null]- The background color used banner background.\n/// @param {Color} $banner-message-color [null]- The color used for banner label.\n/// @param {Color} $banner-border-color [null] - The border color used banner border.\n/// @param {Color} $banner-illustration-color [null] - The color used banner illustration.\n///\n/// @requires $light-schema\n///\n/// @example scss Change the background in banner\n///   $my-banner-theme: banner-theme($banner-background: #000);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-banner-theme);\n@function banner-theme(\n    $schema: $light-schema,\n    $banner-background: null,\n    $banner-message-color: null,\n    $banner-border-color: null,\n    $banner-illustration-color: null\n) {\n    $name: 'igx-banner';\n    $selector: 'igx-banner, .igx-banner, .igx-banner--cosy, .igx-banner--compact';\n    $banner-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $banner-schema: map.get($schema, $name);\n    } @else {\n        $banner-schema: $schema;\n    }\n\n    $theme: digest-schema($banner-schema);\n\n    @if not($banner-message-color) and $banner-background {\n        $banner-message-color: text-contrast($banner-background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        banner-background: $banner-background,\n        banner-message-color: $banner-message-color,\n        banner-border-color: $banner-border-color,\n        banner-illustration-color: $banner-illustration-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin banner($theme) {\n    @include css-vars($theme);\n    $variant: map.get($theme, 'variant');\n\n    $banner-padding: (\n        comfortable: rem(8px),\n        cosy: rem(8px),\n        compact: rem(8px)\n    );\n\n    %igx-banner-host {\n        igx-expansion-panel-body {\n            padding: 0;\n        }\n    }\n\n    %igx-banner__actions,\n    %igx-banner__actions > igx-banner-actions,\n    %igx-banner__illustration,\n    %igx-banner__message {\n        display: flex;\n    }\n\n    %igx-banner__illustration,\n    %igx-banner__message {\n        align-items: center;\n    }\n\n    %igx-banner {\n        display: flex;\n        justify-content: flex-end;\n        flex-wrap: wrap;\n        grid-gap: rem(8px);\n        padding-inline-start: calc(#{map.get($banner-padding, 'comfortable') * 2});\n        padding-inline-end: map.get($banner-padding, 'comfortable');\n        padding-block-start: map.get($banner-padding, 'comfortable');\n        padding-block-end: map.get($banner-padding, 'comfortable');\n        background: var-get($theme, 'banner-background');\n    }\n\n    %igx-banner__illustration {\n        justify-content: center;\n        width: rem(40px);\n        min-width: rem(40px);\n        height: rem(40px);\n        color: var-get($theme, 'banner-illustration-color');\n    }\n\n    %igx-banner__border-top {\n        border-block-start: rem(1px) solid var-get($theme, 'banner-border-color');\n        inset-block-start: rem(-1px);\n    }\n\n    %igx-banner__border-bottom {\n        border-block-end: rem(1px) solid var-get($theme, 'banner-border-color');\n        inset-block-start: 0;\n    }\n\n    %igx-banner__text {\n        color: var-get($theme, 'banner-message-color');\n        flex: 1 0 0%;\n\n        > * {\n            margin-block-start: 0 !important;\n        }\n    }\n\n    %igx-banner--cosy {\n        padding-inline-start: calc(#{map.get($banner-padding, 'cosy') * 2});\n        padding-inline-end: map.get($banner-padding, 'cosy');\n        padding-block-start: map.get($banner-padding, 'cosy');\n        padding-block-end: map.get($banner-padding, 'cosy');\n    }\n\n    %igx-banner--compact {\n        padding-inline-start: calc(#{map.get($banner-padding, 'compact') * 2});\n        padding-inline-end: map.get($banner-padding, 'compact');\n        padding-block-start: map.get($banner-padding, 'compact');\n        padding-block-end: map.get($banner-padding, 'compact');\n    }\n\n    %igx-banner__message {\n        min-width: rem(150px);\n        flex: 1 0 0%;\n        gap: rem(16px);\n    }\n\n    %igx-banner__actions > igx-banner-actions {\n        flex-wrap: wrap;\n        justify-content: flex-end;\n        align-items: center;\n        align-self: flex-end;\n        gap: rem(8px);\n        min-height: rem(40px);\n    }\n}\n\n/// Adds typography styles for the igx-banner component.\n/// Uses the 'body-2' category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(message: 'body-2')] - The categories from the typographic scale used for type styles.\n@mixin banner-typography($categories: (\n    message: 'body-2')\n) {\n    $message: map.get($categories, 'message');\n\n    %igx-banner__text {\n        @include type-style($message) {\n            margin-block-start: 0;\n            margin-block-end: 0;\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:string';\n@use 'sass:list';\n@use '../utils/meta' as *;\n@use './types';\n@use '../themes/mixins' as *;\n\n////\n/// @group Typography\n////\n\n/// Includes all category related styles into the current style block.\n/// @param {String} $category - The type scale category.\n/// @param {String} $check [true] - Toggles category checks against ITypeScale.\n/// Set to false when using a custom type scale.\n/// @example scss Add the `h1` styles to custom CSS selector.\n///   .fancy-h1 {\n///      @include type-style('h1');\n///      color: mediumvioletred;\n///   }\n@mixin type-style($category, $check: true) {\n    $valid: if($check, list.index(types.$ITypeScale, $category), true);\n\n    @if $valid {\n        @each $key, $value in types.$ITypeStyle {\n            @if #{$key} == 'font-family' {\n                font-family: var(--ig-#{$category}-#{$key}, var(--ig-font-family));\n            } @else {\n                #{$key}: var(--ig-#{$category}-#{$key});\n            }\n        }\n        @content;\n    } @else {\n        @warn '#{$category} is not a valid type style';\n    }\n}\n\n/// Transforms a type style map into css font variables.\n/// @param {String} $name - The custom CSS variable name.\n/// @param {Map} $type-style - A type style map reference as produced by type-style.\n/// @example scss Assign the `h1` styles to custom CSS property using the CSS font shorthand syntax.\n///   $h1-style: type-scale-category($type-scale, 'h1');\n///   @include type-style-vars('h1', $h1-style);\n@mixin type-style-vars($name, $type-style) {\n    @each $key, $value in map.remove($type-style, '_meta') {\n        @if $key == 'font-family' and $value != inherit {\n            --ig-#{$name}-#{$key}: #{$value};\n        }\n\n        @if $key != 'font-family' {\n            --ig-#{$name}-#{$key}: #{$value};\n        }\n    }\n}\n\n/// Styles all native elements that match the IElementCategories map.\n/// @requires {mixin} type-style\n/// @requires $ITypeScale\n/// @requires $IElementCategories\n@mixin type-style-elements() {\n    @each $category in types.$ITypeScale {\n        // Get the native element that uses typographic styles directly\n        // as mapped in the $IElementCategories\n        $e: map.get(types.$IElementCategories, $category);\n\n        // Add native element typographic styles.\n        @if $e {\n            #{$e} {\n                @include type-style($category);\n            }\n        }\n    }\n}\n\n/// Creates CSS classes with style rules for all categories in the ITypeScale map.\n/// @requires {mixin} type-style\n/// @requires $ITypeScale\n@mixin type-style-classes() {\n    @each $category in types.$ITypeScale {\n        // Add class selector typographic styles.\n        & &__#{$category} {\n            @include type-style($category);\n        }\n    }\n}\n\n/// Transforms a type style map into a font style rule assigned to a css variable.\n/// @param {String} $name - The custom CSS variable name.\n/// @param {Map} $type-style - A type style map reference as produces by type-style.\n/// @param {String} $prefix [null] - Optional prefix.\n/// @example scss Assign the `h1` styles to custom CSS property using the CSS font shorthand syntax.\n///   $h1-style: type-scale-category($type-scale, 'h1');\n///   @include font-var('h1-font', $h1-style);\n@mixin font-var($name, $type-style, $prefix: null) {\n    $ff: var(--ig-font-family);\n    $fz: map.get($type-style, 'font-size');\n    $fw: map.get($type-style, 'font-weight');\n\n    // unused for now\n    $fs: map.get($type-style, 'font-style');\n    $lh: map.get($type-style, 'line-height');\n    $tt: map.get($type-style, 'text-transform');\n    $ls: map.get($type-style, 'letter-spacing');\n    $mt: map.get($type-style, 'margin-top');\n    $mb: map.get($type-style, 'margin-bottom');\n\n    @include css-vars-from-theme((\n        #{$name}: #{$fw $fz $ff},\n    ), $prefix);\n}\n\n/// Adds typography styles for h1-h6, paragraph and creates custom typography class selectors.\n/// The produced styles are based on the passed typeface and type scale.\n/// @access public\n/// @param {String} $font-family - The font family to be used across all typographic elements.\n/// @param {Map} $type-scale - A type scale map as produced by the type-scale function.\n/// @requires {function} is-root\n/// @requires {mixin} type-style-vars\n/// @requires {mixin} type-style-classes\n/// @requires {mixin} type-style-elements\n/// @example scss\n///   @include typography('Roboto', $my-type-scale);\n@mixin typography($font-family, $type-scale) {\n    $root: is-root();\n    $host: is-host();\n    $scope: if($root, ':root', '&');\n\n    #{$scope} {\n        --ig-font-family: #{string.unquote($font-family)};\n\n        @each $name, $style in map.remove($type-scale, '_meta') {\n            @include type-style-vars($name, $style);\n        }\n    }\n\n    @if $root or $host {\n        .ig-typography {\n            @include type-style-elements();\n            @include type-style-classes();\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'igniteui-theming/sass/animations/easings' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified,\n/// the idle item color will be assigned automatically to a contrasting color.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $background [null] - The background color used for the toast.\n/// @param {Color} $idle-item-color [null] - The text-color used for the idle color.\n/// @param {Color} $active-item-color [null] - The text-color used for the active color.\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the bar.\n///\n/// @requires $light-schema\n///\n/// @example scss Set a custom background color\n///   $my-bottom-nav-theme: bottom-nav-theme($background: black);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-bottom-nav-theme);\n@function bottom-nav-theme(\n    $schema: $light-schema,\n    $elevations: null,\n\n    $background: null,\n    $idle-item-color: null,\n    $active-item-color: null,\n    $shadow: null\n) {\n    $name: 'igx-bottom-nav';\n    $bottom-nav-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $bottom-nav-schema: map.get($schema, $name);\n    } @else {\n        $bottom-nav-schema: $schema;\n    }\n\n    $theme: digest-schema($bottom-nav-schema);\n\n    @if not($idle-item-color) and $background {\n        @if meta.type-of($background) == 'color' {\n            $idle-item-color: rgba(text-contrast($background), .7);\n        }\n    }\n\n    @if not($shadow) {\n        $elevation: map.get($bottom-nav-schema, 'elevation');\n        $shadow: elevation($elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        background: $background,\n        idle-item-color: $idle-item-color,\n        active-item-color: $active-item-color,\n        shadow: $shadow\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin bottom-nav($theme) {\n    @include css-vars($theme);\n\n    $menu-height: rem(56px);\n    $item-min-width: rem(80px);\n    $item-max-width: rem(168px);\n    $item-padding: 0 rem(12px, 16px);\n\n    %igx-bottom-nav-panel {\n        display: block;\n\n        &:focus {\n            outline-style: none;\n        }\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-bottom-nav-menu {\n        display: flex;\n        position: fixed;\n        justify-content: center;\n        align-items: center;\n        inset-inline-start: 0;\n        inset-inline-end: 0;\n        height: $menu-height;\n        background: var-get($theme, 'background');\n        overflow: hidden;\n        z-index: 8;\n    }\n\n    %igx-bottom-nav-menu--top {\n        inset-block-start: 0;\n        inset-block-end: inherit;\n        box-shadow: var-get($theme, 'shadow');\n    }\n\n    %igx-bottom-nav-menu--bottom {\n        inset-block-start: inherit;\n        inset-block-end: 0;\n        box-shadow: var-get($theme, 'shadow');\n    }\n\n    %igx-bottom-nav-menu-item {\n        display: flex;\n        position: relative;\n        flex-flow: column nowrap;\n        flex: 1;\n        align-items: center;\n        justify-content: center;\n        min-width: $item-min-width;\n        max-width: $item-max-width;\n        height: 100%;\n        color: var-get($theme, 'idle-item-color');\n        cursor: pointer;\n        user-select: none;\n        overflow: hidden;\n        padding: $item-padding;\n        -webkit-tap-highlight-color: transparent;\n        outline-style: none;\n    }\n\n    %igx-bottom-nav-menu-item--disabled {\n        opacity: .5;\n        cursor: default;\n        pointer-events: none;\n    }\n\n    %igx-bottom-nav-menu-item--selected {\n        color: var-get($theme, 'active-item-color');\n        transition: color .15s $in-out-quad, opacity .25s $in-out-quad;\n    }\n\n    %igx-tab-label {\n        @include ellipsis();\n        padding-block-start: rem(4px);\n        max-width: 100%;\n        text-align: center;\n        transform: translateZ(0);\n        transition: transform .15s $in-out-quad;\n        z-index: 1;\n    }\n\n    %igx-tab-icon {\n        display: flex;\n        position: relative;\n        justify-content: center;\n        height: rem(24px);\n        padding: 0 rem(8px);\n        transform: translateZ(0);\n        transition: transform .15s $in-out-quad;\n        z-index: 1;\n    }\n\n    %igx-tab-icon--selected {\n        transform: translateY(-2px);\n    }\n\n    %igx-tab-label--selected {\n        transform: translateY(-2px) scale(1.166667);\n    }\n}\n\n/// Adds typography styles for the igx-bottom-nav component.\n/// Uses the 'caption'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(label: 'caption')] - The categories from the typographic scale used for type styles.\n@mixin bottom-nav-typography($categories: (label: 'caption')) {\n    $label: map.get($categories, 'label');\n\n    %igx-tab-label {\n        @include type-style($label) {\n            margin: 0\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:color';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n/// Does ___not___ apply for disabled state colors.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\n/// @param {Color} $background [null] - The background color of the button.\n/// @param {Color} $foreground [null] - The text color of the button.\n/// @param {Color} $hover-background [null] - The hover background color of the button.\n/// @param {Color} $hover-foreground [null] - The hover text color of the button.\n/// @param {Color} $focus-background [null] - The focus background color of the button.\n/// @param {Color} $focus-foreground [null] - The focus text color of the button.\n/// @param {Color} $focus-visible-background [null] - The focus-visible background color of the button.\n/// @param {Color} $focus-visible-foreground [null] - The focus-visible text color of the button.\n/// @param {Color} $active-background [null] - The active background of the button.\n/// @param {Color} $active-foreground [null] - The active text color of the button.\n/// @param {Number} $border-radius [null] - The border radius of the button.\n/// @param {Color} $border-color [null] - The border color of the button.\n/// @param {Color} $hover-border-color [null] - The hover border color of the button.\n/// @param {Color} $focus-border-color [null] - The focus border color of the button.\n/// @param {Color} $focus-visible-border-color [null] - The focus-visible border color of the button.\n/// @param {Color} $active-border-color [null] - The active border color of the button.\n/// @param {Color} $shadow-color [null] - The shadow color of the button.\n/// @param {Color} $resting-shadow [null] - The shadow of the button in its idle state.\n/// @param {Color} $hover-shadow [null] - The shadow of the button in its hover state.\n/// @param {Color} $focus-shadow [null] - The shadow of the button in its focus state.\n/// @param {Color} $active-shadow [null] - The shadow of the button in its focus state.\n/// @param {Color} $disabled-background [null] - The disabled background color of the button.\n/// @param {Color} $disabled-foreground [null] - The disabled text color of the button.\n/// @param {Color} $disabled-border-color [null] - The disabled border color of the button.\n///\n/// @requires $light-schema\n///\n/// @example scss Change the background and text colors in raised buttons\n///   $my-button-theme: button-theme(\n///     $foreground: white,\n///     $background: black\n///   );\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-button-theme);\n@function button-theme(\n    $schema: $light-schema,\n    $elevations: null,\n\n    $background: null,\n    $foreground: null,\n\n    $hover-background: null,\n    $hover-foreground: null,\n\n    $focus-background: null,\n    $focus-foreground: null,\n\n    $focus-visible-background: null,\n    $focus-visible-foreground: null,\n\n    $active-background: null,\n    $active-foreground: null,\n\n    $border-radius: null,\n    $border-color: null,\n    $hover-border-color: null,\n    $focus-border-color: null,\n    $focus-visible-border-color: null,\n    $active-border-color: null,\n\n    $shadow-color: null,\n\n    $resting-shadow: null,\n    $hover-shadow: null,\n    $focus-shadow: null,\n    $active-shadow: null,\n\n    $disabled-background: null,\n    $disabled-foreground: null,\n    $disabled-border-color: null,\n) {\n    $name: 'igx-button';\n    $button-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $button-schema: map.get($schema, $name);\n    } @else {\n        $button-schema: $schema;\n    }\n\n    $themes: ();\n    $variant: null;\n\n    @each $_name, $_schema in $button-schema {\n        $_resting-shadow: $resting-shadow;\n        $_hover-shadow: $hover-shadow;\n        $_focus-shadow: $focus-shadow;\n        $_active-shadow: $active-shadow;\n        $_border-radius: $border-radius;\n\n        @if not($variant) {\n            $variant: map.get($_schema, 'variant');\n        }\n\n        @if not($foreground) and $background {\n            $foreground: text-contrast($background);\n        }\n\n        @if not($hover-background) and $background {\n            @if meta.type-of($background) == 'color' {\n                $hover-background: color.scale($background, $lightness: 5%);\n            }\n        }\n\n        @if not($hover-foreground) and $hover-background {\n            @if meta.type-of($hover-background) == 'color' {\n                $hover-foreground: text-contrast($hover-background);\n            }\n        }\n\n        @if not($focus-background) and $background {\n            $focus-background: color.scale($background, $lightness: 5%);\n        }\n\n        @if not($focus-foreground) and $focus-background {\n            $focus-foreground: text-contrast($focus-background);\n        }\n\n        @if not($focus-visible-background) and $focus-background {\n            $focus-visible-background: $focus-background;\n        }\n\n        @if not($focus-visible-foreground) and $focus-foreground {\n            $focus-visible-foreground: $focus-foreground;\n        }\n\n        @if not($focus-visible-border-color) and $focus-border-color {\n            $focus-visible-border-color: $focus-border-color;\n        }\n\n        @if not($_resting-shadow) {\n            $resting-elevation: map.get($_schema, 'resting-elevation');\n            $_resting-shadow: elevation($resting-elevation);\n        }\n\n        @if not($_hover-shadow) {\n            $hover-elevation: map.get($_schema, 'hover-elevation');\n            $_hover-shadow: elevation($hover-elevation);\n        }\n\n        @if not($_focus-shadow) {\n            $focus-elevation: map.get($_schema, 'focus-elevation');\n            $_focus-shadow: elevation($focus-elevation);\n        }\n\n        @if not($_active-shadow) {\n            $active-elevation: map.get($_schema, 'active-elevation');\n            $_active-shadow: elevation($active-elevation);\n        }\n\n        @if not($_border-radius) {\n            $_border-radius: border-radius(map.get($_schema, 'border-radius'));\n        }\n\n        $themes: map.merge($themes, (\n            $_name: extend( digest-schema($_schema), (\n                name: $name,\n                background: $background,\n                foreground: $foreground,\n\n                hover-background: $hover-background,\n                hover-foreground: $hover-foreground,\n\n                focus-background: $focus-background,\n                focus-foreground: $focus-foreground,\n\n                focus-visible-background: $focus-visible-background,\n                focus-visible-foreground: $focus-visible-foreground,\n\n                active-background: $active-background,\n                active-foreground: $active-foreground,\n\n                border-radius: $_border-radius,\n                border-color: $border-color,\n                hover-border-color: $hover-border-color,\n                focus-border-color: $focus-border-color,\n                focus-visible-border-color: $focus-visible-border-color,\n                active-border-color: $active-border-color,\n\n                shadow-color: $shadow-color,\n\n                resting-shadow: $_resting-shadow,\n                hover-shadow: $_hover-shadow,\n                focus-shadow: $_focus-shadow,\n                active-shadow: $_active-shadow,\n\n                disabled-background: $disabled-background,\n                disabled-foreground: $disabled-foreground,\n                disabled-border-color: $disabled-border-color,\n            ))\n        ));\n    }\n\n    @return (\n        name: $name,\n        variant: $variant,\n        themes: $themes,\n    );\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin button($theme) {\n    $button-width: rem(88px);\n\n    $variant: map.get($theme, variant);\n\n    $flat-theme: map.get(map.get($theme, 'themes'), 'flat');\n    $outlined-theme: map.get(map.get($theme, 'themes'), 'outlined');\n    $raised-theme: map.get(map.get($theme, 'themes'), 'raised');\n    $fab-theme: map.get(map.get($theme, 'themes'), 'fab');\n    $icon-theme: map.get(map.get($theme, 'themes'), 'icon');\n\n    @include css-vars($flat-theme);\n    @include css-vars($outlined-theme);\n    @include css-vars($raised-theme);\n    @include css-vars($fab-theme);\n    @include css-vars($icon-theme);\n\n    $time: map.get((\n        material: .1s,\n        fluent: .1s,\n        bootstrap: .15s,\n        indigo-design: .15s\n    ), $variant);\n\n    $button-transition: color $time ease-in-out,\n        background-color $time ease-in-out,\n        border-color $time ease-in-out,\n        box-shadow $time ease-in-out;\n\n    $button-disabled-shadow: none;\n\n    $button-floating-width: rem(56px);\n    $button-floating-height: $button-floating-width;\n\n    $button-icon-width: map.get((\n        material: rem(36px, 16px),\n        fluent: rem(32px, 16px),\n        bootstrap: rem(36px, 16px),\n        indigo-design: rem(36px, 16px),\n    ), $variant);\n\n    $button-icon-height: $button-icon-width;\n    $button-icon-font-size: rem(24px, 24px);\n    $button-icon-padding: 0;\n\n    $button-padding-material: (\n        comfortable: rem(7px, 16px) rem(16px, 16px),\n        cosy: rem(4px, 16px) rem(16px, 16px),\n        compact: rem(1px, 16px) rem(16px, 16px)\n    );\n\n    $outlined-button-padding-material: (\n        comfortable: rem(7px, 16px) rem(14px, 16px),\n        cosy: rem(4px, 16px) rem(14px, 16px),\n        compact: rem(1px, 16px) rem(14px, 16px)\n    );\n\n    $button-padding-fluent: (\n        comfortable: 0 rem(16px, 16px),\n        cosy: 0 rem(16px, 16px),\n        compact: 0 rem(16px, 16px)\n    );\n\n    $button-padding-bootstrap: (\n        comfortable: rem(6px, 16px) rem(12px, 16px),\n        cosy: rem(4px, 16px) rem(10px, 16px),\n        compact: rem(2px, 16px) rem(8px, 16px)\n    );\n\n    $button-padding-indigo: (\n        comfortable: rem(3px, 16px) rem(12px, 16px),\n        cosy: rem(2px, 16px) rem(12px, 16px),\n        compact: rem(1px, 16px) rem(8px, 16px)\n    );\n\n    $outlined-button-padding-indigo: (\n        comfortable: rem(6px, 16px) rem(14px, 16px),\n        cosy: rem(4px, 16px) rem(10px, 16px),\n        compact: rem(2px, 16px) rem(6px, 16px)\n    );\n\n    $icon-button-width-material: (\n        comfortable: rem(36px, 16px),\n        cosy: rem(30px, 16px),\n        compact: rem(24px, 16px),\n    );\n\n    $icon-button-width-fluent: (\n        comfortable: rem(38px, 16px),\n        cosy: rem(32px, 16px),\n        compact: rem(24px, 16px),\n    );\n\n    $icon-button-width-bootstrap: (\n        comfortable: rem(48px, 16px),\n        cosy: rem(38px, 16px),\n        compact: rem(31px, 16px),\n    );\n\n    $icon-button-width-indigo: (\n        comfortable: rem(36px, 16px),\n        cosy: rem(32px, 16px),\n        compact: rem(28px, 16px),\n    );\n\n    $button-padding: map.get((\n        material: $button-padding-material,\n        fluent: $button-padding-fluent,\n        bootstrap: $button-padding-bootstrap,\n        indigo-design: $button-padding-indigo,\n    ), $variant);\n\n    $outlined-button-padding: map.get((\n        material: $outlined-button-padding-material,\n        fluent: $button-padding-fluent,\n        bootstrap: $button-padding-bootstrap,\n        indigo-design: $outlined-button-padding-indigo\n    ), $variant);\n\n    $icon-button-width: map.get((\n        material: $icon-button-width-material,\n        fluent: $icon-button-width-fluent,\n        bootstrap: $icon-button-width-bootstrap,\n        indigo-design: $icon-button-width-indigo\n    ), $variant);\n\n    $button--size-material: (\n        comfortable: rem(36px),\n        cosy: rem(30px),\n        compact: rem(24px)\n    );\n\n    $button--size-fluent: (\n        comfortable: rem(38px),\n        cosy: rem(32px),\n        compact: rem(24px)\n    );\n\n    $button--size-bootstrap: (\n        comfortable: rem(48px),\n        cosy: rem(38px),\n        compact: rem(31px)\n    );\n\n    $button--size-indigo: (\n        comfortable: rem(36px),\n        cosy: rem(32px),\n        compact: rem(28px)\n    );\n\n    $button-size: map.get((\n        material: $button--size-material,\n        fluent: $button--size-fluent,\n        bootstrap: $button--size-bootstrap,\n        indigo-design: $button--size-indigo,\n    ), $variant);\n\n    $button-floating-padding: (\n        comfortable: rem(8px) rem(14px),\n        cosy: rem(4px) rem(10px),\n        compact: 0 rem(6px)\n    );\n\n    $button-floating-size: (\n        comfortable: rem(48px),\n        cosy: rem(40px),\n        compact: rem(32px)\n    );\n\n    $button-floating-size-indigo: (\n        comfortable: rem(48px),\n        cosy: rem(42px),\n        compact: rem(36px)\n    );\n\n    $filtering-row-button-size: (\n        comfortable: rem(40px),\n        cosy: rem(30px),\n        compact: rem(21px)\n    );\n\n    $icon-in-button-margin: (\n        comfortable: rem(12px),\n        cosy: rem(8px),\n        compact: rem(4px)\n    );\n\n    $icon-sizes: map.get((\n        material: rem(18px),\n        fluent: rem(16px),\n        bootstrap: rem(18px),\n        indigo-design: rem(18px),\n    ), $variant);\n    $icon-in-button-size: $icon-sizes;\n\n    $raised-shadow: map.get((\n        material: var-get($raised-theme, 'resting-shadow'),\n        fluent: var-get($raised-theme, 'resting-shadow'),\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $raised-shadow--hover: map.get((\n        material: var-get($raised-theme, 'hover-shadow'),\n        fluent: var-get($raised-theme, 'hover-shadow'),\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $raised-shadow--focus: map.get((\n        material: var-get($raised-theme, 'focus-shadow'),\n        fluent: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'),\n        bootstrap: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'),\n        indigo-design: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color')\n    ), $variant);\n\n    $raised-shadow--active: map.get((\n        material: var-get($raised-theme, 'active-shadow'),\n        fluent: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'),\n        bootstrap: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'),\n        indigo-design: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color')\n    ), $variant);\n\n    $fab-shadow: map.get((\n        material: var-get($fab-theme, 'resting-shadow'),\n        fluent: var-get($fab-theme, 'resting-shadow'),\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $fab-shadow--hover: map.get((\n        material: var-get($fab-theme, 'hover-shadow'),\n        fluent: var-get($fab-theme, 'hover-shadow'),\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $fab-shadow--focus: map.get((\n        material: var-get($fab-theme, 'focus-shadow'),\n        fluent:  0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'),\n        bootstrap: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'),\n        indigo-design: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color')\n    ), $variant);\n\n    $fab-shadow--active: map.get((\n        material: var-get($fab-theme, 'active-shadow'),\n        fluent:  0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'),\n        bootstrap: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'),\n        indigo-design: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color')\n    ), $variant);\n\n    $icon-shadow: map.get((\n        material: var-get($icon-theme, 'focus-shadow'),\n        fluent: 0 0 0 rem(3px) var-get($icon-theme, 'shadow-color'),\n        bootstrap: 0 0 0 rem(3px) var-get($icon-theme, 'shadow-color'),\n        indigo-design: 0 0 0 rem(3px) var-get($icon-theme, 'shadow-color')\n    ), $variant);\n\n    %igx-button-display {\n        position: relative;\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        min-width: $button-width;\n        padding: map.get($button-padding, 'comfortable');\n        min-height: map.get($button-size, 'comfortable');\n        border: rem(1px) solid var-get($flat-theme, 'border-color');\n        cursor: pointer;\n        user-select: none;\n        outline-style: none;\n        -webkit-tap-highlight-color: transparent;\n        overflow: hidden;\n        white-space: nowrap;\n        transition: $button-transition;\n\n        @if ($variant == 'bootstrap') {\n            // important is needed to override the typography margins\n            margin: rem(4px) !important;\n        }\n\n        igx-icon {\n            display: flex;\n            justify-content: center;\n            width: var(--igx-icon-size, #{$icon-in-button-size});\n            height: var(--igx-icon-size, #{$icon-in-button-size});\n            font-size: var(--igx-icon-size, #{$icon-in-button-size});\n            color: inherit;\n        }\n\n        * + * {\n            margin-inline-start: map.get($icon-in-button-margin, 'comfortable');\n        }\n    }\n\n    %igx-button-display--cosy {\n        padding: map.get($button-padding, 'cosy');\n        min-height: map.get($button-size, 'cosy');\n\n        * + * {\n            margin-inline-start: map.get($icon-in-button-margin, 'cosy');\n        }\n    }\n\n    %igx-button-display--compact {\n        padding: map.get($button-padding, 'compact');\n        min-height: map.get($button-size, 'compact');\n\n        * + * {\n            margin-inline-start: map.get($icon-in-button-margin, 'compact');\n        }\n    }\n\n    igx-grid-filtering-row {\n        @if ($variant == 'bootstrap') {\n            %igx-button-display {\n                min-height: map.get($filtering-row-button-size, 'comfortable');\n                padding-block: 0;\n\n                > * {\n                    display: flex;\n                    align-items: center;\n                    height: rem(18px);\n                }\n            }\n\n            %igx-button-display--cosy {\n                min-height: map.get($filtering-row-button-size, 'cosy');\n            }\n\n            %igx-button-display--compact {\n                min-height: map.get($filtering-row-button-size, 'compact');\n            }\n        }\n    }\n\n    %igx-button--flat {\n        background: var-get($flat-theme, 'background');\n        color: var-get($flat-theme, 'foreground');\n        border-radius: var-get($flat-theme, 'border-radius');\n\n        &:hover {\n            background: var-get($flat-theme, 'hover-background');\n            color: var-get($flat-theme, 'hover-foreground');\n            border-color: var-get($flat-theme, 'hover-border-color');\n        }\n\n        &:focus {\n            background: var-get($flat-theme, 'focus-background');\n            color: var-get($flat-theme, 'focus-foreground');\n            box-shadow: 0 0 0 rem(3px) var-get($flat-theme, 'shadow-color');\n            border-color: var-get($flat-theme, 'focus-border-color');\n        }\n\n        &:active {\n            background: var-get($flat-theme, 'active-background');\n            color: var-get($flat-theme, 'active-foreground');\n            box-shadow: 0 0 0 rem(3px) var-get($flat-theme, 'shadow-color');\n            border-color: var-get($flat-theme, 'active-border-color');\n        }\n\n        &:focus-visible {\n            background: var-get($flat-theme, 'focus-visible-background');\n            color: var-get($flat-theme, 'focus-visible-foreground');\n            border-color: var-get($flat-theme, 'focus-visible-border-color');\n        }\n\n        @if($variant == 'bootstrap') {\n            &:focus,\n            &:active,\n            &:focus-visible {\n                box-shadow: 0 0 0 rem(3px) var-get($outlined-theme, 'shadow-color');\n            }\n        }\n    }\n\n    %igx-button--outlined {\n        background: var-get($outlined-theme, 'background');\n        color: var-get($outlined-theme, 'foreground');\n        border-color: var-get($outlined-theme, 'border-color');\n        border-radius: var-get($outlined-theme, 'border-radius');\n        padding: map.get($outlined-button-padding, 'comfortable');\n\n        @if $variant == 'indigo-design' {\n            border-width: rem(2px);\n        }\n\n        &:hover {\n            background: var-get($outlined-theme, 'hover-background');\n            color: var-get($outlined-theme, 'hover-foreground');\n            border-color: var-get($outlined-theme, 'hover-border-color');\n        }\n\n        &:focus {\n            background: var-get($outlined-theme, 'focus-background');\n            color: var-get($outlined-theme, 'focus-foreground');\n            border-color: var-get($outlined-theme, 'focus-border-color');\n\n            @if($variant == 'bootstrap') {\n                &:hover {\n                    background: var-get($outlined-theme, 'hover-background');\n                    color: var-get($outlined-theme, 'hover-foreground');\n                }\n                box-shadow: 0 0 0 rem(3px) var-get($outlined-theme, 'shadow-color');\n            } @else if($variant == 'indigo-design') {\n                box-shadow: 0 0 0 rem(3px) var-get($outlined-theme, 'shadow-color');\n            }\n        }\n\n        &:active {\n            background: var-get($outlined-theme, 'active-background');\n            color: var-get($outlined-theme, 'active-foreground');\n            border-color: var-get($outlined-theme, 'active-border-color');\n            box-shadow: 0 0 0 rem(3px) var-get($outlined-theme, 'shadow-color');\n        }\n\n        &:focus-visible {\n            background: var-get($outlined-theme, 'focus-visible-background');\n            color: var-get($outlined-theme, 'focus-visible-foreground');\n            border-color: var-get($outlined-theme, 'focus-visible-border-color');\n\n            &:hover {\n                background: var-get($outlined-theme, 'hover-background');\n                color: var-get($outlined-theme, 'hover-foreground');\n                border-color: var-get($outlined-theme, 'hover-border-color');\n            }\n\n            &:active {\n                background: var-get($outlined-theme, 'active-background');\n                color: var-get($outlined-theme, 'active-foreground');\n                border-color: var-get($outlined-theme, 'active-border-color');\n            }\n        }\n\n        @if($variant == 'fluent') {\n            &:focus-visible {\n                &::after {\n                    $outline-btn-indent: rem(2px);\n                    content: '';\n                    position: absolute;\n                    top: $outline-btn-indent;\n                    inset-inline-start: $outline-btn-indent;\n                    pointer-events: none;\n                    width: calc(100% - (#{$outline-btn-indent} * 2));\n                    height: calc(100% - (#{$outline-btn-indent} * 2));\n                    box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'focus-visible-foreground');\n                }\n\n                /* stylelint-disable */\n                &:hover {\n                    &::after {\n                        box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'hover-foreground');\n                    }\n                }\n\n                &:active {\n                    &::after {\n                        box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'active-foreground');\n                    }\n                }\n                /* stylelint-enable */\n            }\n        }\n    }\n\n    %igx-button--outlined-cosy {\n        padding: map.get($outlined-button-padding, 'cosy');\n        min-height: map.get($button-size, 'cosy');\n\n        * + * {\n            margin-inline-start: map.get($icon-in-button-margin, 'cosy');\n        }\n    }\n\n    %igx-button--outlined-compact {\n        padding: map.get($outlined-button-padding, 'compact');\n        min-height: map.get($button-size, 'compact');\n\n        * + * {\n            margin-inline-start: map.get($icon-in-button-margin, 'compact');\n        }\n    }\n\n    %igx-button--raised {\n        color: var-get($raised-theme, 'foreground');\n        background: var-get($raised-theme, 'background');\n        box-shadow: $raised-shadow;\n        border-radius: var-get($raised-theme, 'border-radius');\n\n        &:hover {\n            color: var-get($raised-theme, 'hover-foreground');\n            background: var-get($raised-theme, 'hover-background');\n            border-color: var-get($raised-theme, 'hover-border-color');\n            box-shadow: $raised-shadow--hover;\n        }\n\n        &:focus {\n            color: var-get($raised-theme, 'focus-foreground');\n            background: var-get($raised-theme, 'focus-background');\n            border-color: var-get($raised-theme, 'focus-border-color');\n\n            @if $variant == 'material' or  $variant == 'fluent' {\n                box-shadow: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'), $raised-shadow--focus;\n            } @else {\n                box-shadow: $raised-shadow--focus;\n            }\n        }\n\n        &:active {\n            color: var-get($raised-theme, 'active-foreground');\n            background: var-get($raised-theme, 'active-background');\n            border-color: var-get($raised-theme, 'active-border-color');\n\n            @if $variant == 'material' or  $variant == 'fluent' {\n                box-shadow: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'), $raised-shadow--active;\n            } @else {\n                box-shadow: $raised-shadow--active;\n            }\n        }\n\n        &:focus-visible {\n            background: var-get($raised-theme, 'focus-visible-background');\n            color: var-get($raised-theme, 'focus-visible-foreground');\n            border-color: var-get($raised-theme, 'focus-visible-border-color');\n\n            &:hover {\n                color: var-get($raised-theme, 'hover-foreground');\n                background: var-get($raised-theme, 'hover-background');\n                border-color: var-get($raised-theme, 'hover-border-color');\n            }\n\n            &:active {\n                color: var-get($raised-theme, 'active-foreground');\n                background: var-get($raised-theme, 'active-background');\n                border-color: var-get($raised-theme, 'active-border-color');\n            }\n        }\n\n        @if($variant == 'fluent') {\n            &:focus-visible {\n                &::after {\n                    $outline-btn-indent: rem(3px);\n                    content: '';\n                    position: absolute;\n                    top: $outline-btn-indent;\n                    inset-inline-start: $outline-btn-indent;\n                    pointer-events: none;\n                    width: calc(100% - (#{$outline-btn-indent} * 2));\n                    height: calc(100% - (#{$outline-btn-indent} * 2));\n                    box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'focus-visible-foreground');\n                }\n\n                /* stylelint-disable */\n                &:hover {\n                    &::after {\n                        box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'hover-foreground');\n                    }\n                }\n\n                &:active {\n                    &::after {\n                        box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'active-foreground');\n                    }\n                }\n                /* stylelint-enable */\n            }\n        }\n    }\n\n    %igx-button--round {\n        display: inline-flex;\n        position: relative;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n        outline: none;\n        cursor: pointer;\n        transition: $button-transition;\n        user-select: none;\n        -webkit-tap-highlight-color: transparent;\n        overflow: hidden;\n        // hack to allow circular overflow in safari...\n        filter: blur(0);\n    }\n\n    %igx-button--fab {\n        padding: map.get($button-floating-padding, 'comfortable');\n        min-width: map.get($button-floating-size, 'comfortable');\n        min-height: map.get($button-floating-size, 'comfortable');\n        line-height: unset;\n        white-space: nowrap;\n        color: var-get($fab-theme, 'foreground');\n        background: var-get($fab-theme, 'background');\n        border-color: var-get($flat-theme, 'border-color');\n        box-shadow: $fab-shadow;\n        border-radius: var-get($fab-theme, 'border-radius');\n\n        @if $variant == 'indigo-design' {\n            min-width: map.get($button-floating-size-indigo, 'comfortable');\n            min-height: map.get($button-floating-size-indigo, 'comfortable');\n        }\n\n        &:hover {\n            color: var-get($fab-theme, 'hover-foreground');\n            background: var-get($fab-theme, 'hover-background');\n            border-color: var-get($flat-theme, 'hover-border-color');\n            box-shadow: $fab-shadow;\n        }\n\n        &:focus {\n            color: var-get($fab-theme, 'focus-foreground');\n            background: var-get($fab-theme, 'focus-background');\n            border-color: var-get($flat-theme, 'focus-border-color');\n\n            @if $variant == 'material' or  $variant == 'fluent' {\n                box-shadow: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'), $fab-shadow--focus;\n            } @else {\n                box-shadow: $raised-shadow--focus;\n            }\n        }\n\n        &:active {\n            color: var-get($fab-theme, 'active-foreground');\n            background: var-get($fab-theme, 'active-background');\n            border-color: var-get($flat-theme, 'active-border-color');\n\n            @if $variant == 'material' or  $variant == 'fluent' {\n                box-shadow: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'), $fab-shadow--active;\n            } @else {\n                box-shadow: $raised-shadow--active;\n            }\n        }\n\n        &:focus-visible {\n            background: var-get($fab-theme, 'focus-visible-background');\n            color: var-get($fab-theme, 'focus-visible-foreground');\n            border-color: var-get($fab-theme, 'focus-visible-border-color');\n\n            &:hover {\n                color: var-get($fab-theme, 'hover-foreground');\n                background: var-get($fab-theme, 'hover-background');\n                border-color: var-get($fab-theme, 'hover-border-color');\n            }\n\n            &:active {\n                color: var-get($fab-theme, 'active-foreground');\n                background: var-get($fab-theme, 'active-background');\n                border-color: var-get($fab-theme, 'active-border-color');\n            }\n        }\n\n        @if($variant == 'fluent') {\n            &:focus-visible {\n                &::after {\n                    $outline-btn-indent: rem(3px);\n                    content: '';\n                    position: absolute;\n                    top: $outline-btn-indent;\n                    inset-inline-start: $outline-btn-indent;\n                    pointer-events: none;\n                    border-radius: calc(#{border-radius(#{var-get($fab-theme, 'border-radius')})} - #{$outline-btn-indent});\n                    width: calc(100% - (#{$outline-btn-indent} * 2));\n                    height: calc(100% - (#{$outline-btn-indent} * 2));\n                    box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'focus-visible-foreground');\n                }\n\n                /* stylelint-disable */\n                &:hover {\n                    &::after {\n                        box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'hover-foreground');\n                    }\n                }\n\n                &:active {\n                    &::after {\n                        box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'active-foreground');\n                    }\n                }\n                /* stylelint-enable */\n            }\n        }\n\n        * + * {\n            margin-inline-start: map.get($icon-in-button-margin, 'comfortable');\n        }\n    }\n\n    %igx-button--fab-cosy {\n        padding: map.get($button-floating-padding, 'cosy');\n        min-width: map.get($button-floating-size, 'cosy');\n        min-height: map.get($button-floating-size, 'cosy');\n\n        @if $variant == 'indigo-design' {\n            min-width: map.get($button-floating-size-indigo, 'cosy');\n            min-height: map.get($button-floating-size-indigo, 'cosy');\n        }\n\n        * + * {\n            margin-inline-start: map.get($icon-in-button-margin, 'cosy');\n        }\n    }\n\n    %igx-button--fab-compact {\n        padding: map.get($button-floating-padding, 'compact');\n        min-width: map.get($button-floating-size, 'compact');\n        min-height: map.get($button-floating-size, 'compact');\n\n        @if $variant == 'indigo-design' {\n            min-width: map.get($button-floating-size-indigo, 'compact');\n            min-height: map.get($button-floating-size-indigo, 'compact');\n        }\n\n        * + * {\n            margin-inline-start: map.get($icon-in-button-margin, 'compact');\n        }\n    }\n\n    %igx-button--icon {\n        width: map.get($icon-button-width, 'comfortable');\n        height: map.get($icon-button-width, 'comfortable');\n        min-width: unset;\n        min-height: unset;\n        font-size: $button-icon-font-size;\n        padding: $button-icon-padding;\n        color: var-get($icon-theme, 'foreground');\n        background: var-get($icon-theme, 'background');\n        border-radius: var-get($icon-theme, 'border-radius');\n        border-color: var-get($icon-theme, 'border-color');\n\n        @if $variant == 'indigo-design' {\n            border-width: rem(3px);\n        }\n\n\n        &:hover {\n            @if $variant != 'fluent' {\n                transition: $button-transition;\n            }\n\n            color: var-get($icon-theme, 'hover-foreground');\n            background: var-get($icon-theme, 'hover-background');\n            border-color: var-get($icon-theme, 'hover-border-color');\n        }\n\n        &:focus {\n            color: var-get($icon-theme, 'focus-foreground');\n            background: var-get($icon-theme, 'focus-background');\n            border-color: var-get($icon-theme, 'focus-border-color');\n\n            @if $variant == 'fluent' {\n                &:hover {\n                    color: var-get($icon-theme, 'hover-foreground');\n                    background: var-get($icon-theme, 'hover-background');\n                    border-color: var-get($icon-theme, 'hover-border-color');\n                }\n\n                &:active {\n                    color: var-get($icon-theme, 'active-foreground');\n                    background: var-get($icon-theme, 'active-background');\n                    border-color: var-get($icon-theme, 'active-border-color');\n                }\n            }\n        }\n\n        &:active {\n            color: var-get($icon-theme, 'active-foreground');\n            background: var-get($icon-theme, 'active-background');\n            border-color: var-get($flat-theme, 'active-border-color');\n        }\n\n        &:focus-visible {\n            color: var-get($icon-theme, 'focus-visible-foreground');\n            background: var-get($icon-theme, 'focus-visible-background');\n            border-color: var-get($icon-theme, 'focus-visible-border-color') ;\n\n            &:hover {\n                color: var-get($icon-theme, 'hover-foreground');\n                background: var-get($icon-theme, 'hover-background');\n                border-color: var-get($icon-theme, 'focus-visible-border-color');\n            }\n\n            &:active {\n                color: var-get($icon-theme, 'active-foreground');\n                background: var-get($icon-theme, 'active-background');\n                border-color: var-get($icon-theme, 'focus-visible-border-color');\n            }\n        }\n\n        &:focus,\n        &:active {\n            @if $variant == 'material' or  $variant == 'fluent' {\n                box-shadow: 0 0 0 rem(3px) var-get($icon-theme, 'shadow-color'), $icon-shadow;\n            } @else {\n                box-shadow: $icon-shadow;\n            }\n        }\n    }\n\n    %igx-button--icon-cosy {\n        width: map.get($icon-button-width, 'cosy');\n        height: map.get($icon-button-width, 'cosy');\n    }\n\n    %igx-button--icon-compact {\n        width: map.get($icon-button-width, 'compact');\n        height: map.get($icon-button-width, 'compact');\n    }\n\n    %igx-button--disabled {\n        background: var-get($flat-theme, 'disabled-background');\n        color: var-get($flat-theme, 'disabled-foreground');\n        border-color: var-get($flat-theme, 'disabled-border-color');\n        pointer-events: none;\n        box-shadow: none;\n\n        &:focus {\n            box-shadow: none;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-button component.\n/// Uses the 'button' category from the typographic scale.\n/// @group typography\n/// @param {String} $categories [(text: 'button')] - The category from the typographic scale used for type styles.\n@mixin button-typography($categories: (text: 'button')) {\n    $text: map.get($categories, 'text');\n\n    %igx-button-display {\n        @include type-style($text) {\n            text-align: center;\n        }\n    }\n\n    %igx-button--fab {\n        @include type-style($text) {\n            text-align: center;\n            margin: 0;\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:math';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only header background color is specified, that color will be\n/// used as the leading color for all accented elements, such as:\n/// - current date color\n/// - selected date background\n/// - picker elements hover colors\n/// - year/month hover/selected colors\n/// If only background colors are specified, text/icon colors\n/// will be assigned automatically to a contrasting color.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $content-background [null] - The main content background color.\n/// @param {Color} $content-text-color [null] - The main content text color.\n///\n/// @param {Color} $picker-background-color [null] - The igx-calendar-picker background color.\n/// @param {Color} $border-color [null] - The calendar border color.\n///\n/// @param {Color} $header-background [null] - The header background color.\n/// @param {Color} $header-text-color [null] - The header text color.\n///\n/// @param {Color} $picker-arrow-color [null] - The idle picker arrow color.\n/// @param {Color} $picker-arrow-hover-color [null] - The picker hover arrow color.\n///\n/// @param {Color} $picker-text-color [null]- The idle picker month/year color.\n/// @param {Color} $picker-text-hover-color [null]-  The hover picker month/year color.\n///\n/// @param {Color} $inactive-text-color [null] - The text color for previous and next month dates.\n/// @param {Color} $label-color [null] - The text color for weekday labels.\n/// @param {Color} $weekend-text-color [null] - The text color for weekend days.\n///\n/// @param {Color} $year-current-text-color [null] - The text color for the current/selected year.\n///\n/// @param {Color} $month-current-text-color [null]- The text color for the current/selected month.\n/// @param {Color} $month-hover-current-text-color [null]- The text color for the current/selected month on hover.\n/// @param {Color} $month-hover-text-color [null] - The month hover text color.\n/// @param {Color} $month-hover-background [null] - The month hover background color.\n/// @param {border-radius} $month-border-radius [null] - The border radius used for the outline outline of the month.\n///\n/// @param {Color} $year-hover-text-color [null] - The year hover text color.\n///\n/// @param {Color} $date-selected-background [null] - The background color for the selected date.\n/// @param {Color} $date-selected-hover-background [null] - The hover background color for the selected date.\n/// @param {Color} $date-selected-focus-background [null] - The focus background color for the selected date.\n/// @param {Color} $date-selected-text-color [null] - The text color for the selected date.\n/// @param {Color} $date-selected-hover-foreground [null] - The hover text color for the selected date.\n/// @param {Color} $date-selected-focus-foreground [null] - The focus text color for the selected date.\n///\n/// @param {Color} $date-hover-background [null] - The hover date background color.\n/// @param {Color} $date-focus-background [null] - The focus date background color.\n/// @param {Color} $date-current-text-color [null] - The text color for the current date.\n/// @param {Color} $date-current-bg-color [null] - The background color for the current date.\n/// @param {Color} $date-current-hover-background [null] - The hover background color for the current date.\n/// @param {Color} $date-current-focus-background [null] - The focus background color for the current date.\n/// @param {Color} $date-current-hover-foreground [null] - The hover text color for the current date.\n/// @param {Color} $date-current-focus-foreground [null] - The focus text color for the current date.\n/// @param {Color} $date-selected-current-background [null] - The background color for the selected/current date.\n/// @param {Color} $date-selected-current-hover-background [null] - The hover background color for the selected/current date.\n/// @param {Color} $date-selected-current-focus-background [null] - The focus background color for the selected/current date.\n/// @param {Color} $date-selected-current-foreground [null] - The text color for the selected/current date.\n/// @param {Color} $date-selected-current-hover-foreground [null] - The hover text color for the selected/current date.\n/// @param {Color} $date-selected-current-focus-foreground [null] - The focus text color for the selected/current date.\n///\n/// @param {Color} $date-special-background [null] - The background color used for special dates.\n/// @param {Color} $date-special-text-color [null] - The text color used for special dates.\n///\n/// @param {Color} $date-disabled-text-color [null] - The text color for disabled dates.\n/// @param {Color} $date-disabled-background [null] - The background color for disabled dates in a range.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for the outline of the calendar.\n/// @param {border-radius} $date-border-radius [null] - The border radius used for the outline outline of the date.\n///\n/// @param {Color} $week-number-color [null] - The text color of the week number column.\n/// @param {Color} $week-number-background [null] - The background color of the week number column.\n///\n/// @requires $light-schema\n///\n/// @example scss Change the header and content background colors\n///   $my-calendar-theme: calendar-theme(\n///     $header-background: purple,\n///     $content-background: black\n///   );\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-calendar-theme);\n@function calendar-theme(\n    $schema: $light-schema,\n\n    $content-background: null,\n    $content-text-color: null,\n\n    $border-radius: null,\n    $date-border-radius: null,\n    $month-border-radius: null,\n\n    $header-background: null,\n    $header-text-color: null,\n\n    $picker-arrow-color: null,\n    $picker-arrow-hover-color: null,\n\n    $picker-text-color: null,\n    $picker-text-hover-color: null,\n\n    $inactive-text-color: null,\n    $weekend-text-color: null,\n\n    $year-current-text-color: null,\n    $month-current-text-color: null,\n\n    $year-hover-text-color: null,\n    $month-hover-text-color: null,\n    $month-hover-current-text-color: null,\n    $month-hover-background: null,\n\n    $date-selected-background: null,\n    $date-selected-hover-background: null,\n    $date-selected-focus-background: null,\n    $date-selected-text-color: null,\n    $date-selected-hover-foreground: null,\n    $date-selected-focus-foreground: null,\n\n    $date-current-bg-color: null,\n    $date-current-text-color: null,\n    $date-current-hover-foreground: null,\n    $date-current-focus-foreground: null,\n    $date-current-hover-background: null,\n    $date-current-focus-background: null,\n    $date-selected-current-background: null,\n    $date-selected-current-foreground: null,\n    $date-selected-current-hover-background: null,\n    $date-selected-current-hover-foreground: null,\n    $date-selected-current-focus-background: null,\n    $date-selected-current-focus-foreground: null,\n\n    $date-hover-background: null,\n    $date-focus-background: null,\n\n    $date-special-background: null,\n    $date-special-text-color: null,\n\n    $date-disabled-text-color: null,\n    $date-disabled-background: null,\n    $border-color: null,\n    $border-width: null,\n    $picker-background-color: null,\n    $label-color: null,\n    $week-number-color: null,\n    $week-number-background: null,\n) {\n    $name: 'igx-calendar';\n    $selector: 'igx-calendar, igx-days-view, igx-months-view, igx-years-view';\n    $calendar-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $calendar-schema: map.get($schema, $name);\n    } @else {\n        $calendar-schema: $schema;\n    }\n\n    $theme: digest-schema($calendar-schema);\n    $variant: map.get($theme, variant);\n    $not-bootstrap-theme: $variant != 'bootstrap';\n    $bootstrap-theme: $variant == 'bootstrap';\n\n    @if not($content-text-color) and $content-background {\n        @if meta.type-of($content-background) == 'color' {\n            $content-text-color: text-contrast($content-background);\n        }\n    }\n\n    @if not($weekend-text-color) and $content-background {\n        @if meta.type-of($content-background) == 'color' {\n            $weekend-text-color: rgba($content-text-color, .7);\n        }\n    }\n\n    @if not($inactive-text-color) and $content-background {\n        @if meta.type-of($content-background) == 'color' {\n            $inactive-text-color: rgba($content-text-color, .5);\n        }\n    }\n\n    @if not($label-color) and $content-background {\n        @if meta.type-of($content-background) == 'color' {\n            $label-color: rgba($content-text-color, .5);\n        }\n    }\n\n    @if not($picker-arrow-color) and $content-background {\n        $picker-arrow-color: $content-text-color;\n    }\n\n    @if not($picker-arrow-hover-color) and $header-background {\n        @if meta.type-of($header-background) == 'color' {\n            $picker-arrow-hover-color: $header-background;\n        }\n    }\n\n    @if not($picker-text-color) and $content-background {\n        $picker-text-color: $content-text-color;\n    }\n\n    @if not($date-selected-text-color) and $date-selected-background {\n        $date-selected-text-color: text-contrast($date-selected-background);\n    }\n\n    @if not($date-selected-hover-foreground) and $date-selected-hover-background {\n        $date-selected-hover-foreground: text-contrast($date-selected-hover-background);\n    }\n\n    @if not($date-selected-focus-foreground) and $date-selected-focus-background {\n        $date-selected-focus-foreground: text-contrast($date-selected-focus-background);\n    }\n\n    @if not($date-hover-background) and $content-background {\n        @if meta.type-of($content-background) == 'color' {\n            $date-hover-background: rgba(text-contrast($content-background), .12);\n        }\n    }\n\n    @if $not-bootstrap-theme {\n        @if not($picker-text-hover-color) and $header-background {\n            $picker-text-hover-color: $header-background;\n        }\n\n        @if not($header-text-color) and $header-background {\n            $header-text-color: text-contrast($header-background);\n        }\n\n        @if not($date-selected-background) and $header-background {\n            $date-selected-background: $header-background;\n        }\n\n        @if not($date-selected-current-background) and $date-selected-background {\n            $date-selected-current-background: $date-selected-background;\n        }\n\n        @if not($date-selected-current-hover-background) and $date-selected-hover-background {\n            $date-selected-current-hover-background: $date-selected-hover-background;\n        }\n\n        @if not($date-selected-current-focus-background) and $date-selected-focus-background {\n            $date-selected-current-focus-background: $date-selected-focus-background;\n        }\n\n        @if not($date-selected-text-color) and $header-background {\n            $date-selected-text-color: text-contrast($header-background);\n        }\n\n        @if not($date-current-text-color) and $header-background {\n            $date-current-text-color: $header-background;\n        }\n\n        @if not($date-current-hover-foreground) {\n            $date-current-hover-foreground: $date-current-text-color;\n        }\n\n        @if not($date-current-focus-foreground) {\n            $date-current-focus-foreground: $date-current-text-color;\n        }\n\n        @if not($year-hover-text-color) and $header-background {\n            $year-hover-text-color: $header-background;\n        }\n\n        @if not($year-current-text-color) and $header-background {\n            $year-current-text-color: $header-background;\n        }\n\n        @if not($month-current-text-color) and $header-background {\n            @if $header-background == 'color' {\n                $month-current-text-color: $header-background;\n            }\n        }\n    }\n\n    @if not($date-special-background) and $content-background {\n        @if meta.type-of($content-background) == 'color' {\n            $date-special-background: rgba(text-contrast($content-background), .04);\n        }\n    }\n\n    @if not($date-special-text-color) and $date-special-background {\n        $date-special-text-color: text-contrast($date-special-background);\n    }\n\n    @if not($month-hover-text-color) and $month-hover-background {\n        @if meta.type-of($month-hover-background) == 'color' {\n            $month-hover-text-color: text-contrast($month-hover-background);\n        }\n    }\n\n    @if not($month-hover-current-text-color) and $month-hover-background {\n        @if meta.type-of($month-hover-background) == 'color' {\n            $month-hover-current-text-color: text-contrast($month-hover-background);\n        }\n    }\n\n    @if not($date-disabled-text-color) and $date-disabled-background {\n        @if meta.type-of($date-disabled-background) == 'color' {\n            $date-disabled-color: rgba(text-contrast($date-disabled-background), .38);\n        }\n    }\n\n    @if not($week-number-color) and $week-number-background {\n        $week-number-color: text-contrast($week-number-background);\n    }\n\n    @if not($border-radius) {\n        $border-radius: border-radius(map.get($theme, 'border-radius'));\n    }\n\n    @if not($month-border-radius) {\n        $month-border-radius: border-radius(map.get($theme, 'month-border-radius'));\n    }\n\n    @if not($date-border-radius) {\n        $date-border-radius: border-radius(map.get($theme, 'date-border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        content-background: $content-background,\n        content-text-color: $content-text-color,\n\n        header-background: $header-background,\n        header-text-color: $header-text-color,\n\n        border-radius: $border-radius,\n        date-border-radius: $date-border-radius,\n        month-border-radius: $month-border-radius,\n\n        border-color: $border-color,\n        picker-background-color: $picker-background-color,\n        border-width: $border-width,\n\n        picker-arrow-color: $picker-arrow-color,\n        picker-arrow-hover-color: $picker-arrow-hover-color,\n\n        picker-text-color: $picker-text-color,\n        picker-text-hover-color: $picker-text-hover-color,\n\n        weekend-text-color: $weekend-text-color,\n        inactive-text-color: $inactive-text-color,\n        label-color: $label-color,\n\n        year-current-text-color: $year-current-text-color,\n        month-current-text-color: $month-current-text-color,\n\n        year-hover-text-color: $year-hover-text-color,\n        month-hover-text-color: $month-hover-text-color,\n        month-hover-current-text-color: $month-hover-current-text-color,\n        month-hover-background: $month-hover-background,\n\n        date-selected-background: $date-selected-background,\n        date-selected-text-color: $date-selected-text-color,\n\n        date-selected-hover-background: $date-selected-hover-background,\n        date-selected-focus-background: $date-selected-focus-background,\n        date-selected-hover-foreground: $date-selected-hover-foreground,\n        date-selected-focus-foreground: $date-selected-focus-foreground,\n\n        date-current-bg-color: $date-current-bg-color,\n        date-current-text-color: $date-current-text-color,\n\n        date-current-hover-background: $date-current-hover-background,\n        date-current-focus-background: $date-current-focus-background,\n        date-current-hover-foreground: $date-current-hover-foreground,\n        date-current-focus-foreground: $date-current-focus-foreground,\n\n        date-selected-current-background: $date-selected-current-background,\n        date-selected-current-hover-background: $date-selected-current-hover-background,\n        date-selected-current-focus-background: $date-selected-current-focus-background,\n        date-selected-current-foreground: $date-selected-current-foreground,\n        date-selected-current-hover-foreground: $date-selected-current-hover-foreground,\n        date-selected-current-focus-foreground: $date-selected-current-focus-foreground,\n\n        date-hover-background: $date-hover-background,\n        date-focus-background: $date-focus-background,\n\n        date-special-text-color: $date-special-text-color,\n        date-special-background: $date-special-background,\n\n        date-disabled-text-color: $date-disabled-text-color,\n        date-disabled-background: $date-disabled-background,\n\n        week-number-color: $week-number-color,\n        week-number-background: $week-number-background,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin calendar($theme) {\n    @include css-vars($theme);\n\n    $cal-header-year-margin: 0;\n    $cal-header-date-margin: 0;\n    $cal-header-padding: rem(16px);\n\n    $variant: map.get($theme, 'variant');\n    $bootstrap-theme: $variant == 'bootstrap';\n    $not-bootstrap-theme: $variant != 'bootstrap';\n\n    $cal-picker-padding: map.get((\n        material: rem(16px),\n        fluent: rem(16px),\n        bootstrap: rem(8px),\n        indigo-design: rem(16px),\n    ), $variant);\n\n    $cal-value-w: map.get((\n        material: rem(40px),\n        fluent: rem(40px),\n        bootstrap: rem(32px),\n        indigo-design: rem(40px),\n    ), $variant);\n\n    $border-width: map.get((\n        material: 0,\n        fluent: 0,\n        bootstrap: 1px,\n        indigo-design: 0\n    ), $variant);\n\n    $border-radius: map.get((\n        material: 4px,\n        fluent: 0,\n        bootstrap: 0,\n        indigo-design: 8px\n    ), $variant);\n\n    $cal-value-h: $cal-value-w;\n    $cal-value-br: math.div($cal-value-w, 2);\n    $cal-value-fw: 600;\n\n    $cal-value-month-margin: 0 rem(12px);\n    $cal-value-month-height: rem(91px);\n\n    $cal-row-padding: rem(8px);\n    $cal-row-margin: rem(2px) 0;\n\n    %cal-display {\n        display: flex;\n        flex-flow: column nowrap;\n        width: 100%;\n        min-width: rem(290px);\n        background: var-get($theme, 'content-background');\n        outline: none;\n        border-radius: var-get($theme, 'border-radius');\n        overflow: hidden;\n        border: $border-width solid var-get($theme, 'border-color');\n\n        %cal-display {\n\n            @if $bootstrap-theme {\n                border: none;\n                border-radius: 0;\n            }\n        }\n    }\n\n    igx-calendar-container {\n        @if $bootstrap-theme {\n            %cal-display {\n                border: 0;\n                border-radius: 0;\n            }\n\n            margin-bottom: 0;\n\n            %cal-picker-display {\n                padding-bottom: 0;\n            }\n\n            %cal-row-display {\n                &:first-of-type {\n                    padding-top: 0;\n                    padding-bottom: math.div($cal-picker-padding, 2);\n                }\n            }\n\n            %cal-picker-arrow {\n                top: $cal-picker-padding;\n            }\n        }\n    }\n\n    igx-month-picker {\n        %cal-picker-display {\n            @if $bootstrap-theme {\n                border-bottom: rem(1px) solid var-get($theme, 'border-color');\n            }\n        }\n    }\n\n    %cal-display + %cal-display {\n        margin-inline-start: 1rem;\n\n        @if $bootstrap-theme {\n            margin: 0;\n        }\n    }\n\n    %cal-display--vertical {\n        flex-flow: row nowrap;\n\n        %cal-header-display {\n            min-width: rem(168px);\n        }\n    }\n\n    %cal-header-display {\n        background: var-get($theme, 'header-background');\n        color: var-get($theme, 'header-text-color');\n        padding: $cal-header-padding;\n\n        @if $bootstrap-theme {\n            display: none;\n        }\n    }\n\n    %cal-header-year {\n        margin: $cal-header-year-margin;\n        color: currentColor;\n        opacity: .8;\n\n        @if $variant == 'indigo-design' {\n            opacity: 1;\n        }\n    }\n\n    %cal-header-date {\n        display: flex;\n        margin: $cal-header-date-margin;\n\n        > span {\n            @include ellipsis();\n        }\n    }\n\n    %cal-header-date--vertical {\n        flex-flow: column nowrap;\n    }\n\n    %cal-picker-display {\n        display: flex;\n        height: rem(56px);\n        align-items: center;\n        padding-bottom: $cal-picker-padding;\n        background: var-get($theme, 'picker-background-color');\n\n        @if $bootstrap-theme {\n            height: auto;\n            padding-top: $cal-picker-padding;\n        }\n        position: relative;\n\n        div {\n            text-align: center;\n        }\n\n        &:focus {\n            outline: none;\n        }\n    }\n\n    %cal-picker-dates {\n        display: flex;\n        justify-content: center;\n    }\n\n    %cal-picker-arrow {\n        position: absolute;\n        display: inline-flex;\n        justify-content: center;\n        color: var-get($theme, 'picker-arrow-color');\n        user-select: none;\n        outline: none;\n        cursor: pointer;\n        height: calc(100% - #{$cal-picker-padding});\n        align-items: center;\n        top: 0;\n\n        @if $bootstrap-theme {\n            top: math.div($cal-picker-padding, 2);\n        }\n\n        &:focus,\n        &:hover {\n            color: var-get($theme, 'picker-arrow-hover-color');\n        }\n\n        [dir='rtl'] & {\n            transform: scaleX(-1);\n        }\n    }\n\n    %cal-picker-arrow__prev {\n        inset-inline-start: 0;\n    }\n\n    %cal-picker-arrow__next {\n        inset-inline-end: 0;\n    }\n\n    %cal-picker-date {\n        color: var-get($theme, 'picker-text-color');\n        text-align: center;\n        outline: none;\n        padding: 0 rem(2px);\n\n        &:hover,\n        &:focus {\n            color: var-get($theme, 'picker-text-hover-color');\n            cursor: pointer;\n        }\n    }\n\n    %cal-body-display {\n        flex: 1 1 auto;\n        @if $not-bootstrap-theme {\n            padding-top: $cal-picker-padding;\n        }\n        padding-bottom: $cal-picker-padding;\n\n        overflow: hidden;\n    }\n\n    igx-years-view,\n    igx-month-picker,\n    igx-months-view {\n        color: var-get($theme, 'content-text-color');\n\n        %cal-body-display {\n            @if $bootstrap-theme {\n                padding-bottom: 0;\n            }\n        }\n    }\n\n    %cal-value {\n        position: relative;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        color: var-get($theme, 'content-text-color');\n        outline: none;\n\n        &:first-of-type {\n            padding-inline-start: $cal-row-padding;\n        }\n\n        &:last-of-type {\n            padding-inline-end: $cal-row-padding;\n        }\n\n        // 100 divided by the number of weekdays\n        min-width: 14.28%;\n\n        // Quantity Query selector\n        // 8 comes from the number of columns in the calendar\n        &:nth-last-child(8):first-child,\n        &:nth-last-child(8):first-child ~ * {\n            // 100 divided by the number of weekdays + weeks number column\n            min-width: 12.5% !important;\n        }\n    }\n\n    %cal-row-display {\n        display: flex;\n        justify-content: space-between;\n        margin: $cal-row-margin;\n        padding: 0;\n\n        &:first-of-type {\n            @if $bootstrap-theme {\n                margin-top: 0;\n                background: var-get($theme, 'picker-background-color');\n                border-bottom: rem(1px) solid var-get($theme, 'border-color');\n                padding-bottom: $cal-picker-padding;\n                padding-top: $cal-picker-padding;\n            }\n\n            @if $not-bootstrap-theme{\n                margin-bottom: 0;\n            }\n        }\n\n        &:nth-child(2) {\n            @if $not-bootstrap-theme {\n                margin-top: 0;\n            }\n        }\n\n        &:last-of-type {\n            %cal-value-content--week-number {\n                border-bottom-left-radius: $border-radius;\n                border-bottom-right-radius: $border-radius;\n\n                &::before {\n                    display: none;\n                }\n            }\n\n            @if $bootstrap-theme {\n                margin-bottom: 0;\n            }\n        }\n    }\n\n    %cal-row-display--wrap {\n        flex-wrap: wrap;\n\n        &:first-of-type {\n            @if $bootstrap-theme {\n                background: transparent;\n                margin-bottom: 0;\n                border-bottom: 0;\n                padding: 0;\n            }\n        }\n    }\n\n    %cal-column-display {\n        display: flex;\n        flex-flow: column nowrap;\n        justify-content: space-between;\n        align-items: center;\n    }\n\n    %cal-column-year {\n        padding: 0;\n        margin: 0;\n\n        %cal-value--year {\n            flex: 1 0 0;\n        }\n    }\n\n    %cal-value--focus,\n    %cal-value--hover {\n        @if $bootstrap-theme {\n            color: var-get($theme, 'date-selected-text-color');\n        }\n    }\n\n    %cal-value--hover {\n        %cal-value-content::after {\n            background: var-get($theme, 'date-hover-background');\n        }\n    }\n\n    %cal-value--focus {\n        %cal-value-content::after {\n            background: var-get($theme, 'date-focus-background');\n        }\n    }\n\n    %cal-value--selected--hover {\n        %cal-value-content{\n            color: var-get($theme, 'date-selected-hover-foreground');\n        }\n\n        %cal-value-content::after {\n            background: var-get($theme, 'date-selected-hover-background');\n        }\n    }\n\n    %cal-value--current {\n        %cal-value-content {\n            color: var-get($theme, 'date-current-text-color');\n            font-weight: $cal-value-fw ;\n            background: var-get($theme, 'date-current-bg-color');\n        }\n    }\n\n    %cal-value--current--hover {\n        %cal-value-content {\n            color: var-get($theme, 'date-current-hover-foreground');\n            background: var-get($theme, 'date-current-hover-background');\n\n            &::after {\n                background: var-get($theme, 'date-current-hover-background');\n            }\n        }\n    }\n\n    %cal-value--current--focus {\n        %cal-value-content {\n            color: var-get($theme, 'date-current-focus-foreground');\n            background: var-get($theme, 'date-current-focus-background');\n\n            &::after {\n                background: var-get($theme, 'date-current-focus-background');\n            }\n        }\n    }\n\n    %cal-value--selected--current {\n        %cal-value-content {\n            color: var-get($theme, 'date-selected-current-foreground');\n            background: var-get($theme, 'date-selected-current-background');\n\n            @if $variant == 'indigo-design' {\n                font-weight: 700;\n            }\n        }\n    }\n\n    %cal-value--selected--current--hover {\n        %cal-value-content {\n            color: var-get($theme, 'date-selected-current-hover-foreground');\n\n            &::after {\n                background: var-get($theme, 'date-selected-current-hover-background');\n            }\n        }\n    }\n\n    %cal-value--selected--current--focus {\n        %cal-value-content {\n            color: var-get($theme, 'date-selected-current-focus-foreground');\n\n            &::after {\n                background: var-get($theme, 'date-selected-current-focus-background');\n            }\n        }\n    }\n\n    %cal-value--selected--focus {\n        %cal-value-content {\n            color: var-get($theme, 'date-selected-focus-foreground');\n        }\n\n        %cal-value-content::after {\n            background: var-get($theme, 'date-selected-focus-background');\n        }\n    }\n\n    %cal-value-content {\n        position: relative;\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        width: $cal-value-w;\n        min-width: $cal-value-w;\n        height: $cal-value-h;\n        border-radius: var-get($theme, 'date-border-radius');\n        z-index: 0;\n        // transition: background .15s ease-out;\n\n        &::after {\n            position: absolute; content: '';\n            width: calc(100% - 4px);\n            height: calc(100% - 4px);\n            top: rem(2px);\n            inset-inline-start: rem(2px);\n            border-radius: inherit;\n            z-index: -1;\n        }\n    }\n\n    %cal-value--label {\n        @if $not-bootstrap-theme{\n            height: $cal-value-h;\n        }\n\n        color: var-get($theme, 'label-color');\n\n        &:hover,\n        &:focus {\n            color: var-get($theme, 'label-color');\n        }\n\n        border-radius: 0;\n\n        @if $bootstrap-theme {\n            font-style: italic;\n            cursor: default;\n        }\n    }\n\n    %cal-value--weekend {\n        color: var-get($theme, 'weekend-text-color');\n    }\n\n    %cal-value-date--week-number + %cal-value {\n        padding-inline-start: 0 !important;\n    }\n\n    %label--week-number,\n    %cal-value-content--week-number {\n        position: relative;\n        color: var-get($theme, 'week-number-color') !important;\n        border-radius: 0;\n        pointer-events: none;\n    }\n\n    %cal-value-date--week-number {\n        padding-inline-end: 0 !important;\n        cursor: default;\n\n        &:hover,\n        &:focus {\n            %cal-value-content--week-number {\n                color: var-get($theme, 'week-number-color') !important;\n            }\n        }\n    }\n\n    %cal-value-content--week-number {\n        position: relative;\n        background: var-get($theme, 'week-number-background') !important;\n        min-width: auto;\n\n        &::after {\n            display: none;\n        }\n\n        &::before {\n            content: '';\n            position: absolute;\n            width: 100%;\n            height: math.div($cal-row-padding, 2);\n            inset-inline-start: 0;\n            top: 100%;\n            background: var-get($theme, 'week-number-background') !important;\n        }\n    }\n\n    %label--week-number {\n        padding-inline-end: 0 !important;\n        text-align: center;\n\n        span {\n            width: $cal-value-w;\n            position: relative;\n            background: var-get($theme, 'week-number-background');\n\n            &::before,\n            &::after {\n                content: '';\n                position: absolute;\n                width: 100%;\n                background: var-get($theme, 'week-number-background');\n                inset-inline-start: 0;\n            }\n\n            &::after {\n                top: 100%;\n                height: if($not-bootstrap-theme, math.div($cal-row-padding, 2) + rem(2px), $cal-row-padding + rem(5px));\n            }\n\n            &::before {\n                bottom: 100%;\n                height: $cal-row-padding;\n                border-top-left-radius: $border-radius;\n                border-top-right-radius: $border-radius;\n            }\n        }\n    }\n\n    %label--week-number + %cal-value--label {\n        padding-inline-start: 0 !important;\n    }\n\n    %cal-value--year {\n        margin: 0;\n        min-width: 8ch;\n        line-height: rem(52px);\n\n        &:first-of-type {\n            padding-inline-start: 0;\n        }\n\n        &:last-of-type {\n            padding-inline-end: 0;\n        }\n    }\n\n    %cal-value--year-current {\n        color: var-get($theme, 'year-current-text-color');\n\n        @if $bootstrap-theme {\n            &:hover,\n            &:focus {\n                color: var-get($theme, 'year-hover-text-color');\n            }\n        }\n    }\n\n    %cal-value--year-hover {\n        color: var-get($theme, 'year-hover-text-color');\n    }\n\n    %cal-value--month-hover {\n        color: var-get($theme, 'month-hover-text-color');\n        outline-width: 0;\n\n        &::after {\n            background: var-get($theme, 'month-hover-background');\n        }\n    }\n\n    %cal-value--month {\n        position: relative;\n        display: flex;\n        margin: $cal-value-month-margin;\n        flex: 1 0 25%;\n        justify-content: center;\n        align-items: center;\n        height: $cal-value-month-height;\n        z-index: 1;\n\n        &::after {\n            position: absolute;\n            content: '';\n            top: 50%;\n            inset-inline-start: 0;\n            inset-inline-end: 0;\n            transform: translateY(-50%);\n            height: rem(48px);\n            background: transparent;\n            border-radius: var-get($theme, 'month-border-radius');\n            transition: background-color .15s ease-out;\n            z-index: -1;\n        }\n    }\n\n    %cal-value--month-current {\n        color: var-get($theme, 'month-current-text-color');\n    }\n\n    %cal-value--month-current-hover {\n        color: var-get($theme, 'month-hover-current-text-color');\n    }\n\n    %cal-value--inactive {\n        cursor: pointer;\n        color: var-get($theme, 'inactive-text-color');\n    }\n\n    %cal-value--inactive--single--hover {\n        @if $bootstrap-theme {\n            color: var-get($theme, 'date-selected-text-color');\n        } @else {\n            color: var-get($theme, 'inactive-text-color');\n        }\n    }\n\n    %cal-value--special {\n        %cal-value-content {\n            background: var-get($theme, 'date-special-background');\n            @if $not-bootstrap-theme {\n                color: var-get($theme, 'date-special-text-color');\n            }\n            font-weight: 900;\n        }\n    }\n\n    %cal-value--selected {\n        position: relative;\n        background: var-get($theme, 'date-selected-background');\n\n        %cal-value-content {\n            color: var-get($theme, 'date-selected-text-color');\n            background: var-get($theme, 'date-selected-background') ;\n        }\n    }\n\n    %cal-value--disabled {\n        pointer-events: none;\n        cursor: not-allowed;\n        color: var-get($theme, 'date-disabled-text-color');\n    }\n\n    %cal-value--single {\n        background: transparent;\n\n        &::before,\n        &::after {\n            background: transparent;\n        }\n\n        @if $bootstrap-theme {\n            &:hover,\n            &:focus {\n                color: var-get($theme, 'date-selected-text-color');\n            }\n        }\n    }\n\n    %cal-value--disabled-range {\n        background: var-get($theme, 'date-disabled-background') !important;\n\n        %cal-value-content {\n            color: var-get($theme, 'date-disabled-text-color');\n            background: transparent !important;\n        }\n    }\n\n    %cal-value--hidden%cal-value--disabled-range {\n        background: transparent !important;\n\n        &::after,\n        &::before {\n            background: transparent !important;\n        }\n    }\n\n    %cal-value--range%cal-value--inactive%cal-value--selected {\n        %cal-value-content {\n            color: var-get($theme, 'date-selected-text-color');\n        }\n\n        &:focus,\n        &:hover {\n            %cal-value-content {\n                color: var-get($theme, 'date-selected-text-color');\n            }\n        }\n    }\n\n    %cal-value--range%cal-value--inactive%cal-value--selected%cal-value--single {\n        %cal-value-content {\n            color: var-get($theme, 'date-selected-text-color');\n            background: var-get($theme, 'date-selected-background') !important;\n        }\n    }\n\n    %cal-value--first {\n        position: relative;\n        background: transparent;\n        z-index: 0;\n\n        &::after {\n            position: absolute;\n            content: '';\n            width: 50%;\n            top: 0;\n            inset-inline-start: 50%;\n            bottom: 0;\n            background: var-get($theme, 'date-selected-background');\n            z-index: -1;\n        }\n    }\n\n    %cal-value--last {\n        position: relative;\n        background: transparent;\n        z-index: 0;\n\n        &::before {\n            position: absolute;\n            content: '';\n            width: 50%;\n            top: 0;\n            inset-inline-end: 50%;\n            bottom: 0;\n            background: var-get($theme, 'date-selected-background');\n            z-index: -1;\n        }\n    }\n\n    %cal-value--hidden {\n        %cal-value-content {\n            visibility: hidden;\n        }\n    }\n\n    %calendar__aria-off-screen {\n        position: absolute!important;\n        border: none!important;\n        height: 1px!important;\n        width: 1px!important;\n        inset-inline-start: 0!important;\n        top: 0!important;\n        overflow: hidden!important;\n        padding: 0!important;\n        margin: 0 !important;\n        user-select: none;\n        pointer-events: none;\n\n        &:focus {\n            outline: none;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-calendar component.\n/// Uses the 'h4', 'subtitle-1' and 'body-1'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(header-year: 'subtitle-1', header-date: 'h4', picker-date: 'subtitle-1', content: 'body-1')] - The categories from the typographic scale used for type styles.\n@mixin calendar-typography($categories: (\n    header-year: 'overline',\n    header-date: 'h4',\n    weekday-label: 'body-1',\n    picker-date: 'subtitle-1',\n    content: 'body-1')\n) {\n    $header-year: map.get($categories, 'header-year');\n    $header-date: map.get($categories, 'header-date');\n    $weekday-label: map.get($categories, 'weekday-label');\n    $picker-date: map.get($categories, 'picker-date');\n    $content: map.get($categories, 'content');\n\n    %cal-header-year {\n        @include type-style($header-year) {\n            margin: 0;\n        }\n    }\n\n    %cal-header-date {\n        @include type-style($header-date) {\n            margin: 0;\n        }\n    }\n\n    %cal-picker-date {\n        @include type-style($picker-date) {\n            margin: 0;\n        }\n    }\n\n    %cal-value-content {\n        @include type-style($content) {\n            margin: 0;\n        }\n    }\n\n    %cal-value--label {\n        @include type-style($weekday-label, false);\n        margin: 0;\n    }\n\n    %cal-value--year-current {\n        @include type-style($content) {\n            font-size: rem(24px);\n            line-height: rem(52px);\n            margin: 0;\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n///\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\n/// @param {Color} $background [null] - The card background color.\n/// @param {Color} $outline-color [null] - The color of the outline for outlined type cards.\n/// @param {Color} $header-text-color [null] - The text color of the card title.\n/// @param {Color} $subtitle-text-color [null] - The text color of the card subtitle.\n/// @param {Color} $content-text-color [null] - The text color of the card content.\n/// @param {Color} $actions-text-color [null] - The text color of the card buttons.\n/// @param {box-shadow} $resting-shadow [null] - The shadow of the card in its resting state.\n/// @param {box-shadow} $hover-shadow [null] - The shadow of the card in its hover state.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for card component.\n///\n/// @requires $light-schema\n///\n/// @example scss Change the background and content text colors in card\n///   $my-card-theme: card-theme($background: #fff);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-card-theme);\n@function card-theme(\n    $schema: $light-schema,\n    $elevations: null,\n\n    $border-radius: null,\n    $background: null,\n    $outline-color: null,\n    $header-text-color: null,\n    $subtitle-text-color: null,\n    $content-text-color: null,\n    $actions-text-color: null,\n    $resting-shadow: null,\n    $hover-shadow: null,\n) {\n    $name: 'igx-card';\n    $card-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $card-schema: map.get($schema, $name);\n    } @else {\n        $card-schema: $schema;\n    }\n\n    $theme: digest-schema($card-schema);\n\n    @if not($header-text-color) and $background {\n        $header-text-color: text-contrast($background);\n    }\n\n    @if not($actions-text-color) and $background {\n        @if meta.type-of($background) == 'color' {\n            $actions-text-color: rgba(text-contrast($background), .5);\n        }\n    }\n\n    @if not($content-text-color) and $background {\n        @if meta.type-of($background) == 'color' {\n            $content-text-color: rgba(text-contrast($background), .7);\n        }\n    }\n\n    @if not($subtitle-text-color) and $background {\n        @if meta.type-of($background) == 'color' {\n            $subtitle-text-color: rgba(text-contrast($background), .7);\n        }\n    }\n\n    @if not($resting-shadow) {\n        $resting-elevation: map.get($card-schema, 'resting-elevation');\n        $resting-shadow: elevation($resting-elevation);\n    }\n\n    @if not($hover-shadow) {\n        $hover-elevation: map.get($card-schema, 'hover-elevation');\n        $hover-shadow: elevation($hover-elevation);\n    }\n\n    @if not($border-radius) {\n        $border-radius: border-radius(map.get($theme, 'border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        background: $background,\n        outline-color: $outline-color,\n        border-radius: $border-radius,\n        header-text-color: $header-text-color,\n        subtitle-text-color: $subtitle-text-color,\n        content-text-color: $content-text-color,\n        actions-text-color: $actions-text-color,\n        resting-shadow: $resting-shadow,\n        hover-shadow: $hover-shadow,\n    ));\n}\n\n/// Card Component\n/// @param {Map} $theme - The theme used to style the component.\n@mixin card($theme) {\n    $variant: map.get($theme, 'variant');\n    $not-material-theme: $variant != 'material';\n\n    @include css-vars($theme);\n\n    $card-heading-padding: rem(16px);\n    $card-heading-compact-padding: rem(16px, 16px);\n    $card-content-padding: rem(14px);\n    $card-actions-padding: rem(8px);\n\n    $card-tgroup-margin: 0 em(16px);\n\n    $card-transitions: box-shadow .3s cubic-bezier(.25, .8, .25, 1);\n\n    %igx-card-display {\n        display: flex;\n        flex-direction: column;\n        box-shadow: var-get($theme, 'resting-shadow');\n        overflow: hidden;\n        border-radius: var-get($theme, 'border-radius');\n        background: var-get($theme, 'background');\n        transition: $card-transitions;\n        backface-visibility: hidden;\n\n        @if $not-material-theme {\n            border: rem(1px) solid var-get($theme, 'outline-color');\n        }\n\n        &:hover {\n            box-shadow: var-get($theme, 'hover-shadow');\n        }\n    }\n\n    %igx-card--outlined {\n        box-shadow: none;\n        border: rem(1px) solid var-get($theme, 'outline-color');\n\n        &:hover {\n            box-shadow: none;\n        }\n    }\n\n    %igx-card--horizontal {\n        flex-direction: row;\n    }\n\n    %igx-card-header {\n        display: flex;\n        flex: 1 1 auto;\n        flex-flow: row wrap;\n        align-content: flex-start;\n        width: 100%;\n        padding: $card-heading-padding;\n        color: var-get($theme, 'header-text-color');\n\n        &:empty {\n            display: block;\n            padding: 0;\n        }\n    }\n\n    %igx-card-header--vertical {\n        flex-flow: column nowrap;\n\n        %igx-card-header-titles {\n            text-align: center;\n        }\n\n        %igx-card-header-thumbnail {\n            display: flex;\n            justify-content: center;\n            align-self: unset;\n            margin-inline-end: 0;\n            margin-bottom: rem(16px);\n        }\n    }\n\n    %igx-card-header--compact {\n        padding: $card-heading-compact-padding;\n    }\n\n    %igx-card-header-thumbnail {\n        align-self: flex-start;\n        margin-inline-end: rem(16px);\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-card-header-titles {\n        display: flex;\n        flex-flow: column nowrap;\n        overflow: hidden;\n        flex: 1 1 auto;\n        justify-content: center;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-card-header-subtitle {\n        color: var-get($theme, 'subtitle-text-color');\n    }\n\n    %igx-card-tgroup {\n        margin: $card-tgroup-margin;\n    }\n\n    %igx-card-content {\n        display: block;\n        width: 100%;\n        flex: 1 1 auto;\n        padding: $card-content-padding;\n        color: var-get($theme, 'content-text-color');\n    }\n\n    %igx-card-media {\n        display: block;\n        overflow: hidden;\n        line-height: 0;\n\n        > * {\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n        }\n    }\n\n    %igx-card-media--right {\n        width: auto;\n        margin-inline-start: auto;\n        order: 9999;\n    }\n\n    %igx-card-actions {\n        display: flex;\n        flex-flow: row wrap;\n        justify-content: space-between;\n        flex: 0 1 auto;\n        align-items: center;\n        padding: $card-actions-padding;\n\n        [igxButton] ~ [igxButton] {\n            margin-inline-start: rem(8px);\n        }\n    }\n\n    %igx-card-actions--vertical {\n        flex-direction: column;\n\n        [dir='rtl'] & {\n            order: -1;\n        }\n    }\n\n    %igx-card-actions__icons {\n        display: flex;\n        align-items: center;\n        order: 1;\n        color: var-get($theme, 'actions-text-color');\n        margin-inline-start: auto;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-card-actions__buttons {\n        display: flex;\n        align-items: center;\n        order: 0;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-card-actions__buttons--justify,\n    %igx-card-actions__icons--justify {\n        justify-content: space-around;\n        flex-grow: 1;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-card-actions__icons--vertical,\n    %igx-card-actions__buttons--vertical {\n        flex-direction: column;\n\n        [igxButton] ~ [igxButton] {\n            margin-inline-start: 0;\n            margin-top: rem(8px);\n        }\n    }\n\n    %igx-card-actions__icons--vertical {\n        margin-top: auto;\n        margin-inline-start: 0;\n    }\n\n    %igx-card-actions__icons--reverse {\n        order: 0;\n        margin-inline-start: 0;\n    }\n\n    %igx-card-actions__buttons--reverse {\n        order: 1;\n        margin-inline-start: auto;\n    }\n\n    %igx-card-actions__icons--vertical-reverse {\n        margin: 0;\n        margin-bottom: auto;\n    }\n\n    %igx-card-actions__buttons--vertical-reverse {\n        margin: 0;\n        margin-top: auto;\n    }\n\n    %igx-card-actions-bgroup {\n        display: flex;\n        flex-flow: row nowrap;\n\n        [igxButton] ~ [igxButton] {\n            margin-inline-start: rem(8px);\n        }\n    }\n\n    %igx-card-actions-igroup {\n        display: flex;\n        flex-flow: row nowrap;\n\n        %igx-button--icon {\n            color: var-get($theme, 'actions-text-color');\n        }\n    }\n\n    %igx-card-actions-igroup--start {\n        margin-inline-end: auto;\n    }\n\n    %igx-card-actions-igroup--end {\n        margin-inline-start: auto;\n    }\n}\n\n/// Adds typography styles for the igx-card component.\n/// Uses the 'h5', 'subtitle-2' and 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(title: 'h6', title-small: 'subtitle-2', subtitle: 'subtitle-2', content: 'body-2')] - The categories from the typographic scale used for type styles.\n@mixin card-typography($categories: (\n    title: 'h6',\n    title-small: 'subtitle-2',\n    subtitle: 'subtitle-2',\n    content: 'body-2')\n) {\n    $title: map.get($categories, 'title');\n    $title-small: map.get($categories, 'title-small');\n    $subtitle: map.get($categories, 'subtitle');\n    $content: map.get($categories, 'content');\n\n    %igx-card-header-title {\n        @include type-style($title) {\n            margin: 0;\n        }\n    }\n\n    %igx-card-header-title--small {\n        @include type-style($title-small) {\n            margin: 0;\n        }\n    }\n\n    %igx-card-header-subtitle {\n        @include type-style($subtitle){\n            margin: 0;\n        }\n    }\n\n    %igx-card-content > p {\n        @include type-style($content) {\n            margin: 0;\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../ripple/ripple-component' as *;\n@use '../ripple/ripple-theme' as *;\n@use 'igniteui-theming/sass/animations' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Checkbox Theme\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $label-color [null]- The text color used for the label text.\n/// @param {Color} $empty-color [null] - The unchecked border color.\n/// @param {Color} $fill-color [null] - The checked border and fill colors.\n/// @param {Color} $tick-color [null] - The checked mark color.\n/// @param {Color} $disabled-color [null] - The disabled border and fill colors.\n/// @param {Color} $disabled-indeterminate-color [null] - The disabled border and fill colors in indeterminate state.\n/// @param {Color} $disabled-color-label [null] - The disabled label color.\n/// @param {border-radius} $border-radius [null] - The border radius used for checkbox component.\n/// @param {border-radius} $border-radius-ripple [null] - The border radius used for checkbox ripple.\n/// @param {Color} $focus-outline-color [null] - The focus outlined color.\n/// Set to light when the surrounding area is dark.\n///\n/// @requires $light-schema\n///\n///\n/// @example scss Change the checked fill color\n///   $my-checkbox-theme: igx-checkbox-theme($fill-color: magenta);\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-checkbox-theme);\n@function checkbox-theme(\n    $schema: $light-schema,\n\n    $border-radius: null,\n    $label-color: null,\n    $empty-color: null,\n    $fill-color: null,\n    $tick-color: null,\n    $disabled-color: null,\n    $disabled-indeterminate-color: null,\n    $disabled-color-label: null,\n    $border-radius-ripple: null,\n    $focus-outline-color: null\n) {\n    $name: 'igx-checkbox';\n    $checkbox-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $checkbox-schema: map.get($schema, $name);\n    } @else {\n        $checkbox-schema: $schema;\n    }\n\n    $theme: digest-schema($checkbox-schema);\n\n    @if not($border-radius) {\n        $border-radius: border-radius(map.get($theme, 'border-radius'));\n    }\n\n    @if not($border-radius-ripple) {\n        $border-radius-ripple: border-radius(map.get($theme, 'border-radius-ripple'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        label-color: $label-color,\n        empty-color: $empty-color,\n        fill-color: $fill-color,\n        tick-color: $tick-color,\n        disabled-color: $disabled-color,\n        disabled-indeterminate-color: $disabled-indeterminate-color,\n        disabled-color-label: $disabled-color-label,\n        border-radius: $border-radius,\n        border-radius-ripple: $border-radius-ripple,\n        focus-outline-color: $focus-outline-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} ripple\n/// @requires ripple-theme\n@mixin checkbox($theme) {\n    @include css-vars($theme);\n    $variant: map.get($theme, 'variant');\n\n    @include scale-in-out($start-scale: .9);\n\n    // If updating the WIDTH of the checkbox here, please update it in the grid theme as well.\n    // It is under the name of $cbx-size\n    $size: rem(20px);\n    $size-bs: rem(16px);\n    $checkbox-radius: math.div($size, 2);\n\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: $variant == 'bootstrap';\n\n    $size: map.get((\n        material: $size,\n        fluent: $size,\n        bootstrap: $size-bs,\n        indigo-design: $size,\n    ), $variant);\n\n    $border-width: map.get((\n        material: 2px,\n        fluent: 1px,\n        bootstrap: 1px,\n        indigo-design: 2px,\n    ), $variant);\n\n    $ripple-display: map.get((\n        material: block,\n        fluent: none,\n        bootstrap: none,\n        indigo-design: none,\n    ), $variant);\n\n    $label-margin: rem(8px);\n\n    $mark-stroke: map.get((\n        material: 3,\n        fluent: 1,\n        bootstrap: 3,\n        indigo-design: 3,\n    ), $variant);\n\n    $mark-offset: map.get((\n        material: 0,\n        fluent: -1px,\n        bootstrap: 0,\n        indigo-design: 0,\n    ), $variant);\n\n    $mark-length: 24;\n    $mark-x-factor: math.div($mark-stroke, $mark-length);\n\n    $ripple-size: rem(48px);\n    $ripple-radius: math.div($ripple-size, 2);\n\n    $ripple-theme: ripple-theme(\n        $schema: $light-schema,\n        $color: var-get($theme, 'fill-color')\n    );\n\n    @include scale-in-center();\n\n    %cbx-display {\n        position: relative;\n        display: inline-flex;\n        flex-flow: row nowrap;\n        align-items: center;\n        outline-style: none;\n    }\n\n    %cbx-display--disabled {\n        user-select: none;\n        pointer-events: none;\n        cursor: initial;\n    }\n\n    %cbx-input {\n        @include hide-default();\n    }\n\n    %cbx-composite-wrapper {\n        align-items: center;\n        justify-content: center;\n        display: flex;\n        position: relative;\n        width: $size;\n        height: $size;\n    }\n\n    %cbx-composite {\n        position: relative;\n        display: inline-block;\n        cursor: pointer;\n        width: $size;\n        height: $size;\n        min-width: $size;\n        border-width: rem($border-width);\n        border-style: solid;\n        border-color: var-get($theme, 'empty-color');\n        border-radius: var-get($theme, 'border-radius');\n        -webkit-tap-highlight-color: transparent;\n        transition: border-color .2s $ease-out-quad;\n        overflow: hidden;\n\n        &::after {\n            position: absolute;\n            content: '';\n            inset: 0;\n            transition: background .2s $ease-out-quad;\n        }\n    }\n\n    %cbx-composite--x {\n        border-color: var-get($theme, 'fill-color');\n        background: var-get($theme, 'fill-color');\n\n        &::after {\n            background: var-get($theme, 'fill-color');\n        }\n    }\n\n    %cbx-composite--disabled {\n        border-color: var-get($theme, 'disabled-color');\n        background: transparent;\n\n        @if $bootstrap-theme {\n            border-color: var-get($theme, 'disabled-color-label');\n        }\n    }\n\n    %cbx-composite--x--disabled {\n        background: var-get($theme, 'disabled-color');\n\n        &::after {\n            background: var-get($theme, 'disabled-color');\n        }\n\n        @if $bootstrap-theme {\n            border-color: var-get($theme, 'disabled-color');\n        }\n    }\n\n    %cbx-composite-mark {\n        position: absolute;\n        inset: 0;\n        stroke: var-get($theme, 'tick-color');\n        stroke-linecap: square;\n        stroke-width: $mark-stroke;\n        stroke-dasharray: $mark-length;\n        stroke-dashoffset: $mark-length;\n        fill: none;\n        opacity: 0;\n        z-index: 1;\n        transition: opacity .1s $ease-out-quad;\n    }\n\n    %igx-checkbox--indeterminate {\n        %cbx-composite-mark {\n            top: $mark-offset;\n            inset-inline-start: $mark-offset;\n        }\n\n        @if $variant == 'material' {\n            %cbx-composite--x--disabled {\n                border: var-get($theme, 'disabled-indeterminate-color');\n\n                &::after {\n                    background: var-get($theme, 'disabled-indeterminate-color');\n                }\n            }\n        }\n\n        @if $variant == 'fluent' {\n            %cbx-composite-mark {\n                stroke: transparent;\n            }\n\n            %cbx-composite {\n                background: transparent;\n\n                &::after {\n                    background: transparent;\n                }\n\n                &::before {\n                    content: '';\n                    position: absolute;\n                    top: calc($size / 2 - rem(6px));\n                    inset-inline-start: calc($size / 2 - rem(6px));\n                    width: rem(10px);\n                    height: rem(10px);\n                    border-radius: border-radius(rem(2px));\n                    border: rem(5px) solid var-get($theme, 'fill-color');\n                    z-index: 1;\n                }\n            }\n\n            %cbx-composite--x--disabled {\n                background: transparent;\n\n                &::after {\n                    background: transparent;\n                }\n\n                &::before {\n                    border-color: var-get($theme, 'disabled-color');\n                    background: var-get($theme, 'disabled-color');\n                }\n            }\n        }\n    }\n\n    %cbx-composite-mark--x {\n        stroke-dashoffset: 0;\n        opacity: 1;\n        transition: all .2s $ease-out-quad, opacity .2s $ease-out-quad;\n    }\n\n    %cbx-composite-mark--in {\n        stroke-dashoffset: 41; /* length of path - adjacent line length */\n        opacity: 1;\n        transform: rotate(45deg) translateX(-#{$mark-x-factor}em);\n    }\n\n    %cbx-label {\n        display: inline-block;\n        color: var-get($theme, 'label-color');\n        cursor: pointer;\n        user-select: none;\n        word-wrap: break-all;\n\n        &:empty {\n            margin: 0;\n        }\n    }\n\n    %cbx-label-pos--before,\n    %cbx-label-pos--after {\n        &:empty {\n            margin: 0;\n        }\n    }\n\n    %cbx-label-pos--after {\n        margin-inline-start: $label-margin;\n    }\n\n    %cbx-label-pos--before {\n        margin-inline-end: $label-margin;\n        order: -1;\n    }\n\n    %cbx-label--disabled {\n        color: var-get($theme, 'disabled-color-label');\n    }\n\n    %cbx-ripple {\n        @include ripple($ripple-theme);\n        @include css-vars($ripple-theme);\n        display: $ripple-display;\n        position: absolute;\n        top: calc(50% - #{$ripple-radius});\n        inset-inline-end: calc(100% - #{$ripple-radius} - #{$checkbox-radius});\n        width: $ripple-size;\n        height: $ripple-size;\n        border-radius: var-get($theme, 'border-radius-ripple');\n        overflow: hidden;\n        pointer-events: none;\n        filter: opacity(1);\n    }\n\n    %igx-checkbox--focused {\n        @if $variant == 'fluent' {\n            position: relative;\n            $focus-outline-offset-top: rem(2px);\n            $focus-outline-offset-left: rem(2px);\n\n            &::after {\n                content: '';\n                position: absolute;\n                top: -$focus-outline-offset-top;\n                inset-inline-start: -$focus-outline-offset-left;\n                box-shadow: 0 0 0 rem(1px) var-get($theme, 'focus-outline-color');\n                width: calc(100% + (#{$focus-outline-offset-left} * 2));\n                height: calc(100% + (#{$focus-outline-offset-top} * 2));\n            }\n        }\n\n        @if $variant == 'bootstrap' {\n            %cbx-composite {\n                border-radius: var-get($theme, 'border-radius');\n                box-shadow: 0 0 0 rem(2px) var-get($theme, 'focus-outline-color');\n            }\n        }\n\n        @if $variant == 'indigo-design' {\n            %cbx-composite {\n                border-radius: var-get($theme, 'border-radius');\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color');\n            }\n        }\n    }\n\n    %igx-checkbox--focused-checked {\n        @if $variant == 'indigo-design' {\n            %cbx-composite {\n                border-radius: var-get($theme, 'border-radius');\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color-focused');\n            }\n        }\n    }\n\n    %cbx-ripple--focused {\n        background: var-get($theme, 'empty-color');\n        transition: background .2s $ease-out-quad;\n        opacity: .12;\n    }\n\n    %cbx-ripple--focused-checked {\n        background: var-get($theme, 'fill-color');\n    }\n\n    %cbx-ripple--hover {\n        &::after {\n            position: absolute;\n            content: '';\n            opacity: .06;\n            inset: 0;\n        }\n    }\n\n    %cbx-ripple--hover-unchecked {\n        &::after {\n            background: var-get($theme, 'empty-color');\n        }\n    }\n\n    %cbx-ripple--hover-checked {\n        &::after {\n            background: var-get($theme, 'fill-color');\n        }\n    }\n\n    %cbx-ripple--pressed {\n        &::after {\n            opacity: .12;\n        }\n    }\n\n    %cbx-display--plain {\n        %cbx-composite,\n        %cbx-composite::after,\n        %cbx-composite-mark,\n        %cbx-composite-mark--x {\n            transition: none;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-checkbox component.\n/// Uses the 'subtitle-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n@mixin checkbox-typography(\n    $categories: (label: 'subtitle-1')\n) {\n    $label: map.get($categories, 'label');\n\n    %cbx-label {\n        @include type-style($label) {\n            margin-top: 0;\n            margin-bottom: 0;\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:color';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'igniteui-theming/sass/animations/easings' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Chip Theme\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {String} $border-radius [null] - The chip border-radius.\n///\n/// @param {Color} $text-color [null] - The chip text color.\n/// @param {Color} $background [null] - The chip background color.\n/// @param {Color} $border-color [null] - The chip border color.\n/// @param {Color} $ghost-background [null] - The chip ghost background color.\n/// @param {box-shadow} $ghost-shadow [null] - The chip ghost shadow.\n///\n/// @param {Color} $hover-text-color [null] - The chip text hover color.\n/// @param {Color} $hover-background [null] - The chip hover background color.\n/// @param {Color} $hover-border-color [null] - The chip hover border color.\n///\n/// @param {Color} $focus-text-color [null] - The chip text focus color.\n/// @param {Color} $focus-background [null] - The chip focus background color.\n/// @param {color} $focus-border-color [null] - The chip focus border color.\n///\n/// @param {color} $selected-text-color [null] - The selected chip text color.\n/// @param {color} $selected-background [null] - The selected chip background color.\n/// @param {color} $selected-border-color [null] The selected chip border color.\n///\n/// @param {color} $hover-selected-text-color [null] - The selected chip hover text color.\n/// @param {color} $hover-selected-background [null] - The selected chip hover background color.\n/// @param {color} $hover-selected-border-color [null] - The selected chip hover border color.\n///\n/// @param {color} $focus-selected-text-color [null] - The selected chip text focus color.\n/// @param {color} $focus-selected-background [null] - The selected chip focus background color.\n/// @param {color} $focus-selected-border-color [null] - The selected chip focus border color.\n///\n/// @param {color} $remove-icon-color [null] - The remove icon color for the chip.\n/// @param {color} $remove-icon-color-focus [null] - The remove icon color on focus for the chip.\n///\n/// @requires $light-schema\n///\n/// @example scss Change the background color\n///   $my-chip-theme: igx-chip-theme($background: black);\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-chip-theme);\n@function chip-theme(\n    $schema: $light-schema,\n    $elevations: null,\n    $border-radius: null,\n\n    $text-color: null,\n    $background: null,\n    $border-color: null,\n    $ghost-background: null,\n\n    $hover-text-color: null,\n    $hover-background: null,\n    $hover-border-color: null,\n\n    $focus-text-color: null,\n    $focus-background: null,\n    $focus-border-color: null,\n    $focus-outline-color: null,\n\n    $selected-text-color: null,\n    $selected-background: null,\n    $selected-border-color: null,\n\n    $hover-selected-text-color: null,\n    $hover-selected-background: null,\n    $hover-selected-border-color: null,\n\n    $focus-selected-text-color: null,\n    $focus-selected-background: null,\n    $focus-selected-border-color: null,\n    $focus-selected-outline-color: null,\n\n    $ghost-shadow: null,\n    $remove-icon-color: null,\n    $remove-icon-color-focus: null,\n) {\n    $name: 'igx-chip';\n    $selector: 'igx-chip, .igx-chip__ghost, .igx-chip__ghost--compact, .igx-chip__ghost--cosy';\n    $chip-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chip-schema: map.get($schema, $name);\n    } @else {\n        $chip-schema: $schema;\n    }\n\n    $theme: digest-schema($chip-schema);\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @if not($hover-background) and $background {\n        $luminance: luminance($background);\n\n        @if meta.type-of($luminance) == 'color' and $luminance + .05 < .5 {\n            $hover-background: color.scale($background, $lightness: 14%);\n        } @else {\n            $hover-background: color.scale($background, $lightness: -4%);\n        }\n    }\n\n    @if not($hover-text-color) and $hover-background {\n        $hover-text-color: text-contrast(to-opaque($hover-background));\n    }\n\n    @if not($focus-background) and $background {\n        $luminance: luminance($background);\n\n        @if meta.type-of($luminance) == 'color' and $luminance + .05 < .5 {\n            $focus-background: color.scale($background, $lightness: 22%);\n        } @else {\n            $focus-background: color.scale($background, $lightness: -8%);\n        }\n    }\n\n    @if not($focus-text-color) and $focus-background {\n        $focus-text-color: text-contrast(to-opaque($focus-background));\n    }\n\n    @if not($selected-background) and $background {\n        $luminance: luminance($background);\n\n        @if meta.type-of($luminance) == 'color' and $luminance + .05 < .5 {\n            $selected-background: color.scale($background, $lightness: 22%);\n        } @else {\n            $selected-background: color.scale($background, $lightness: -8%);\n        }\n    }\n\n    @if not($selected-text-color) and $selected-background {\n        $selected-text-color: text-contrast(to-opaque($selected-background));\n    }\n\n    @if not($hover-selected-background) and $hover-background {\n        $hover-selected-background: $hover-background;\n    }\n\n    @if not($hover-selected-text-color) and $hover-selected-background {\n        $hover-selected-text-color: text-contrast(to-opaque($hover-selected-background));\n    }\n\n    @if not($focus-selected-background) and $selected-background {\n        $luminance: luminance($selected-background);\n\n        @if meta.type-of($luminance) == 'color' and $luminance + .05 < .5 {\n            $focus-selected-background: color.scale($background, $lightness: 32%);\n        } @else {\n            $focus-selected-background: color.scale($background, $lightness: -16%);\n        }\n    }\n\n    @if not($focus-selected-text-color) and $focus-selected-background {\n        $focus-selected-text-color: text-contrast(to-opaque($focus-selected-background));\n    }\n\n    @if not($hover-border-color) and $border-color {\n        $hover-border-color: $border-color;\n    }\n\n    @if not($focus-border-color) and $border-color {\n        $focus-border-color: $border-color;\n    }\n\n    @if not($selected-border-color) and $border-color {\n        $selected-border-color: $border-color;\n    }\n\n    @if not($hover-selected-border-color) and $border-color {\n        $hover-selected-border-color: $border-color;\n    }\n\n    @if not($focus-selected-border-color) and $border-color {\n        $focus-selected-border-color: $border-color;\n    }\n\n    @if not($ghost-shadow) {\n        $ghost-elevation: map.get($chip-schema, 'ghost-elevation');\n        $ghost-shadow: elevation($ghost-elevation);\n    }\n\n    @if not($border-radius) {\n        $border-radius: border-radius(map.get($theme, 'border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        border-radius: $border-radius,\n\n        text-color: $text-color,\n        background: $background,\n        border-color: $border-color,\n        ghost-background: $ghost-background,\n\n        hover-text-color: $hover-text-color,\n        hover-background: $hover-background,\n        hover-border-color: $hover-border-color,\n\n        focus-text-color: $focus-text-color,\n        focus-background: $focus-background,\n        focus-border-color: $focus-border-color,\n\n        selected-text-color: $selected-text-color,\n        selected-background: $selected-background,\n        selected-border-color: $selected-border-color,\n\n        hover-selected-text-color: $hover-selected-text-color,\n        hover-selected-background: $hover-selected-background,\n        hover-selected-border-color: $hover-selected-border-color,\n\n        focus-selected-text-color: $focus-selected-text-color,\n        focus-selected-background: $focus-selected-background,\n        focus-selected-border-color: $focus-selected-border-color,\n\n        ghost-shadow: $ghost-shadow,\n        remove-icon-color: $remove-icon-color,\n        remove-icon-color-focus: $remove-icon-color-focus,\n        focus-selected-outline-color: $focus-selected-outline-color,\n        focus-outline-color: $focus-outline-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin chip($theme) {\n    @include css-vars($theme);\n    $variant: map.get($theme, 'variant');\n\n    $transition: all 120ms $in-out-quad;\n    $chip-max-width: 32ch;\n\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: $variant == 'bootstrap';\n\n    $chip-height-material: (\n        comfortable: rem(32px),\n        cosy: rem(24px),\n        compact: rem(18px)\n    );\n\n    $chip-height-fluent: (\n        comfortable: rem(26px),\n        cosy: rem(24px),\n        compact: rem(18px)\n    );\n\n    $chip-height: map.get((\n        material: $chip-height-material,\n        fluent: $chip-height-fluent,\n        bootstrap: $chip-height-material,\n        indigo-design: $chip-height-material\n    ), $variant);\n\n    $chip-padding: (\n        comfortable: 0 rem(8px),\n        cosy: 0 rem(4px),\n        compact: 0 rem(2px)\n    );\n\n    $box-shadow: map.get((\n        material: null,\n        fluent: null,\n        bootstrap: 0 0 0 rem(3px) var-get($theme, 'hover-background'),\n        indigo-design: null\n    ), $variant);\n\n    $item-padding: rem(4px);\n    $chip-item-padding: 0 $item-padding;\n\n    $chip-avatar-inset: map.get((\n        material: 0,\n        fluent: -$item-padding,\n        bootstrap: 0,\n        indigo-design: 0\n    ), $variant);\n\n    $chip-icon-size: (\n        comfortable: rem(18px),\n        cosy: rem(18px),\n        compact: rem(16px)\n    );\n\n    %igx-chip-area {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        flex-wrap: wrap;\n        width: 100%;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-chip {\n        @extend  %igx-chip-custom-icon;\n\n        position: relative;\n        display: inline-flex;\n        flex-shrink: 0;\n        transition: $transition;\n        transition-property: top, left;\n\n        [dir='rtl'] & {\n            transition-property: top right;\n        }\n\n        touch-action: none;\n\n        &:focus {\n            outline-style: none;\n\n            %igx-chip__item {\n                @extend %igx-chip__item--focus;\n            }\n\n            %igx-chip__item--selected {\n                @extend %igx-chip__item--focus-selected;\n            }\n        }\n\n        &:hover {\n            %igx-chip__item {\n                @extend %igx-chip__item--hover;\n            }\n\n            %igx-chip__item--selected {\n                @extend %igx-chip__item--hover-selected;\n            }\n        }\n\n        // We target the tag selector directly to\n        // avoid having to set custom classes on the prefix\n        // and suffix based on the host element.\n        igx-prefix,\n        [igxPrefix] {\n            @extend %igx-chip__prefix;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %igx-chip__suffix;\n        }\n    }\n\n    %igx-chip--cosy {\n        @extend  %igx-chip-custom-icon--cosy;\n    }\n\n    %igx-chip--compact {\n        @extend  %igx-chip-custom-icon--compact;\n    }\n\n    %igx-chip--disabled {\n        %igx-chip__item {\n            cursor: default;\n            pointer-events: none;\n        }\n    }\n\n    %igx-chip-custom-icon {\n        igx-icon {\n            width: var(--igx-icon-size, map.get($chip-icon-size, 'comfortable'));\n            height: var(--igx-icon-size, map.get($chip-icon-size, 'comfortable'));\n            font-size: var(--igx-icon-size, map.get($chip-icon-size, 'comfortable'));\n            outline-style: none;\n        }\n    }\n\n    %igx-chip-custom-icon--cosy {\n        igx-icon {\n            width: var(--igx-icon-size, map.get($chip-icon-size, 'cosy'));\n            height: var(--igx-icon-size, map.get($chip-icon-size, 'cosy'));\n            font-size: var(--igx-icon-size, map.get($chip-icon-size, 'cosy'));\n            outline-style: none;\n        }\n    }\n\n    %igx-chip-custom-icon--compact {\n        igx-icon {\n            width: var(--igx-icon-size, map.get($chip-icon-size, 'compact'));\n            height: var(--igx-icon-size, map.get($chip-icon-size, 'compact'));\n            font-size: var(--igx-icon-size, map.get($chip-icon-size, 'compact'));\n            outline-style: none;\n        }\n    }\n\n    %igx-chip__prefix,\n    %igx-chip__suffix {\n        @include ellipsis();\n        display: inline-block;\n        vertical-align: middle;\n        max-width: $chip-max-width;\n\n        > igx-icon { \n            display: block;\n        }\n    }\n\n    %igx-chip__suffix {\n        + igx-suffix,\n        + [igxSuffix],\n        + %igx-chip__remove {\n            margin-inline-start: rem(4px);\n        }\n    }\n\n    %igx-chip__prefix {\n        + igx-prefix,\n        + [igxPrefix] {\n            margin-inline-start: rem(4px);\n\n            igx-avatar {\n                max-height: 100%;\n                max-width: 100%;\n                margin-inline-start: $chip-avatar-inset!important;\n            }\n        }\n    }\n\n    %igx-chip__content {\n        @include ellipsis();\n        padding: map.get($chip-padding, 'comfortable');\n        max-width: $chip-max-width;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-chip__content--cosy {\n        padding: map.get($chip-padding, 'cosy');\n    }\n\n    %igx-chip__content--compact {\n        padding: map.get($chip-padding, 'compact');\n    }\n\n    %igx-chip__remove {\n        display: inline-flex;\n        margin-inline-end: rem(4px);\n        color: var-get($theme, 'remove-icon-color', currentColor);\n\n        &:empty {\n            display: none;\n        }\n\n        // FIX IE11 and Edge focus styles.\n        // [focus-within] is not supported by IE & Edge.\n        &:focus {\n            outline-style: none;\n\n            igx-icon {\n                outline-style: none;\n                color: var-get($theme, 'remove-icon-color-focus');\n            }\n        }\n\n        igx-icon {\n            &:focus{\n                outline-style: none;\n            }\n        }\n    }\n\n    %igx-chip__select {\n        display: inline-flex;\n        align-items: center;\n        width: rem(18px);\n        opacity: 1;\n        z-index: 1;\n        transition: opacity 120ms $out-quad, width 120ms $out-quad;\n\n        > * {\n            width: inherit !important;\n        }\n\n        + igx-prefix,\n        + [igxPrefix] {\n            margin-inline-start: rem(4px);\n        }\n    }\n\n    %igx-chip__select--hidden {\n        width: 0;\n        opacity: 0;\n        z-index: -1;\n\n        + igx-prefix,\n        + [igxPrefix] {\n            margin-inline-start: 0;\n        }\n    }\n\n    %igx-chip__item {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex: 1 1 auto;\n        height: map.get($chip-height, 'comfortable');\n        padding: $chip-item-padding;\n        color: var-get($theme, 'text-color');\n        background: var-get($theme, 'background');\n        border-width: rem(1px);\n        border-style: solid;\n        border-color: var-get($theme, 'border-color');\n        border-radius: var-get($theme, 'border-radius');\n        user-select: none;\n        overflow: hidden;\n        cursor: pointer;\n        //hacking overflow hidden with border radius\n        // not playing nicely together\n        filter: opacity(1);\n    }\n\n    %igx-chip__item--hover {\n        color: var-get($theme, 'hover-text-color');\n        background: var-get($theme, 'hover-background');\n        border-color: var-get($theme, 'hover-border-color');\n        transition: all 120ms ease-in;\n    }\n\n    %igx-chip__item--focus {\n        color: var-get($theme, 'focus-text-color');\n        background: var-get($theme, 'focus-background');\n        border-color: var-get($theme, 'focus-border-color');\n        outline-style: none;\n        box-shadow: $box-shadow;\n\n        @if $variant == 'indigo-design' {\n            box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color');\n        }\n    }\n\n    %igx-chip__item--selected {\n        color: var-get($theme, 'selected-text-color');\n        background: var-get($theme, 'selected-background');\n        border-color: var-get($theme, 'selected-border-color');\n    }\n\n    %igx-chip__item--hover-selected {\n        color: var-get($theme, 'hover-selected-text-color');\n        background: var-get($theme, 'hover-selected-background');\n        border-color: var-get($theme, 'hover-selected-border-color');\n        transition: $transition;\n    }\n\n    %igx-chip__item--focus-selected {\n        color: var-get($theme, 'focus-selected-text-color');\n        background: var-get($theme, 'focus-selected-background');\n        border-color: var-get($theme, 'focus-selected-border-color');\n        transition: $transition;\n\n        @if $variant == 'indigo-design' {\n            box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-selected-outline-color');\n        }\n    }\n\n    %igx-chip__item--cosy {\n        height: map.get($chip-height, 'cosy');\n        padding: map.get($chip-padding, 'cosy');\n    }\n\n    %igx-chip__item--compact {\n        height: map.get($chip-height, 'compact');\n        padding: map.get($chip-padding, 'compact');\n    }\n\n    %igx-chip__ghost {\n        position: absolute;\n        box-shadow: var-get($theme, 'ghost-shadow');\n        overflow: hidden;\n        color: var-get($theme, 'focus-text-color');\n        background: var-get($theme, 'ghost-background');\n\n        &:hover,\n        &:focus {\n            background: var-get($theme, 'ghost-background');\n        }\n    }\n\n    %igx-chip__ghost--cosy {\n        height: map.get($chip-height, 'cosy');\n\n        %igx-chip__content {\n            padding: map.get($chip-padding, 'cosy');\n        }\n    }\n\n    %igx-chip__ghost--compact {\n        @extend  %igx-chip-custom-icon--compact;\n        height: map.get($chip-height, 'compact');\n\n        %igx-chip__content {\n            padding: map.get($chip-padding, 'compact');\n        }\n    }\n\n    // Remark: If z-index is not set, the chip would\n    // hide behind it's parent grid as it has a z-index of 1\n    %igx-chip__ghost,\n    %igx-chip__ghost--cosy,\n    %igx-chip__ghost--compact {\n        z-index: 10;\n    }\n}\n\n/// Adds typography styles for the igx-chip component.\n/// Uses the 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.\n@mixin chip-typography(\n    $categories: (text: 'body-2'))\n{\n    $text: map.get($categories, 'text');\n\n    %igx-chip {\n        @include type-style($text) {\n            font-weight: 600;\n        }\n    }\n\n    %igx-chip--compact,\n    %igx-chip__ghost--compact {\n        %igx-chip__content {\n            @include type-style($text) {\n                font-size: rem(12px);\n                font-weight: 600;\n            }\n        }\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Column actions Theme\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $title-color [null]- The text color used for the title of the list.\n/// @param {Color} $background-color [null] - The background color of the panel.\n///\n/// @requires $light-schema\n///\n///\n/// @example scss Change the title color\n///   $column-actions-theme: igx-column-actions-theme($title-color: black);\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($column-actions-theme);\n////\n@function column-actions-theme(\n    $schema: $light-schema,\n    $elevations: null,\n\n    $title-color: null,\n    $background-color: null\n) {\n    $name: 'igx-column-actions';\n    $column-actions-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $column-actions-schema: map.get($schema, $name);\n    } @else {\n        $column-actions-schema: $schema;\n    }\n\n    $theme: digest-schema($column-actions-schema);\n\n    @if not($title-color) and $background-color {\n        $title-color: text-contrast($background-color);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        elevations: $elevations,\n        title-color: $title-color,\n        background-color: $background-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin column-actions($theme) {\n    @include css-vars($theme);\n\n    %column-actions-display {\n        display: flex;\n        flex-flow: column nowrap;\n        background: var-get($theme, 'background-color');\n        box-shadow: elevation(8);\n        width: 100%;\n        flex: 1 1 auto;\n        min-width: rem(180px);\n    }\n\n    %column-actions-title {\n        color: var-get($theme, 'title-color');\n        margin: 0;\n        padding: rem(16px) rem(16px) rem(8px);\n    }\n\n    %column-actions-input {\n        font-size: rem(16px) !important;\n        margin: rem(-16px) 0 0 !important;\n        padding: rem(8px) rem(16px);\n    }\n\n    %column-actions-columns {\n        display: flex;\n        flex-flow: column nowrap;\n        overflow-y: auto;\n        outline-style: none;\n    }\n\n    %column-actions-item {\n        padding: rem(4px) rem(16px);\n        min-height: rem(32px);\n    }\n\n    %column-actions-buttons {\n        display: flex;\n        justify-content: flex-end;\n        padding: rem(8px) rem(16px);\n    }\n}\n\n/// Adds typography styles for the igx-column-actions component.\n/// Uses the 'subtitle-1'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(title: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n@mixin column-actions-typography($categories: (title: 'subtitle-1')) {\n    $title: map.get($categories, 'title');\n\n    %column-actions-title {\n        @include type-style($title) {\n            margin: 0;\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Dialog Theme\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $background [null] - The dialog background color.\n/// @param {Color} $title-color [null] - The dialog title text color.\n/// @param {Color} $message-color [null] - The dialog message text color.\n/// @param {box-shadow} $shadow [null] - The shadow used for the dialog.\n/// @param {border-radius} $border-radius [null] - The border radius used for dialog component.\n/// @param {Color} $border-color [null] - The border color used for dialog component.\n/// @requires $light-schema\n/// @example scss Change the background color\n///   $my-dialog-theme: dialog-theme($background: black);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-dialog-theme);\n@function dialog-theme(\n    $schema: $light-schema,\n    $elevations: null,\n\n    $border-radius: null,\n    $border-color: null,\n\n    $background: null,\n    $title-color: null,\n    $message-color: null,\n    $shadow: null,\n) {\n    $name: 'igx-dialog';\n    $selector: '.igx-dialog';\n\n    $dialog-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $dialog-schema: map.get($schema, $name);\n    } @else {\n        $dialog-schema: $schema;\n    }\n\n    $theme: digest-schema($dialog-schema);\n\n    @if not($title-color) and $background{\n        $title-color: text-contrast($background);\n    }\n\n    @if not($message-color) and $background{\n        @if meta.type-of($background) == 'color' {\n            $message-color: rgba(text-contrast($background), .8);\n        }\n    }\n\n    @if not($shadow) {\n        $elevation: map.get($dialog-schema, 'elevation');\n        $shadow: elevation($elevation);\n    }\n\n    @if not($border-radius) {\n        $border-radius: border-radius(map.get($theme, 'border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        border-radius: $border-radius,\n        background: $background,\n        title-color: $title-color,\n        message-color: $message-color,\n        shadow: $shadow,\n        border-color: $border-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin dialog($theme) {\n    @include css-vars($theme);\n\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: map.get($theme, variant) == 'bootstrap';\n\n    $dialog-min-width: map.get((\n        material: rem(280px),\n        fluent: rem(288px),\n        bootstrap: rem(288px),\n    ), $variant);\n\n    $dialog-title-padding: map.get((\n        material: rem(24px) rem(24px) rem(12px) rem(24px),\n        fluent: rem(16px) rem(24px) rem(24px) rem(24px),\n        bootstrap: rem(16px),\n        indigo-design: rem(16px) rem(24px),\n    ), $variant);\n\n    $dialog-message-padding: map.get((\n        material: rem(12px) rem(24px),\n        fluent: 0 rem(24px) rem(20px) rem(24px),\n        bootstrap: rem(16px),\n        indigo-design: 0 rem(24px) rem(8px) rem(24px),\n    ), $variant);\n\n    $dialog-actions-padding: map.get((\n        material: rem(8px),\n        fluent: 0 rem(24px) rem(24px) rem(24px),\n        bootstrap: rem(16px),\n        indigo-design: rem(8px),\n    ), $variant);\n\n    %igx-dialog-display {\n        outline-style: none;\n    }\n\n    %igx-dialog--hidden {\n        display: none;\n    }\n\n    %igx-dialog-window {\n        position: relative;\n        min-width: $dialog-min-width;\n        border: rem(1px) solid var-get($theme, 'border-color');\n        border-radius: var-get($theme, 'border-radius');\n        background: var-get($theme, 'background');\n        box-shadow: var-get($theme, 'shadow');\n        overflow: hidden;\n\n        .igx-calendar {\n            min-width: rem(320px);\n        }\n\n        .igx-calendar--vertical {\n            min-width: rem(496px);\n        }\n    }\n\n    %igx-dialog-title {\n        display: flex;\n        color: var-get($theme, 'title-color');\n        padding: $dialog-title-padding;\n\n        @if $bootstrap-theme {\n            border-bottom: rem(1px) solid var-get($theme, 'border-color');\n        }\n    }\n\n    %igx-dialog-content {\n        color: var-get($theme, 'message-color');\n        padding: $dialog-message-padding;\n        // The 2 rules below are related to https://github.com/IgniteUI/igniteui-angular/issues/11300\n        position: relative;\n        z-index: 0;\n    }\n\n    %igx-dialog-message {\n        display: inline-block;\n        max-width: 40ch;\n\n        @media all and (-ms-high-contrast: none)\n        {\n            max-width: map.get((\n                material: 62ch,\n                fluent: 48ch,\n                bootstrap: 60ch,\n                indigo-design: 48ch,\n            ), $variant);\n        }\n    }\n\n    %igx-dialog-actions {\n        display: flex;\n        flex-flow: row nowrap;\n        justify-content: flex-end;\n        padding: $dialog-actions-padding;\n\n        @if $bootstrap-theme {\n            border-top: rem(1px) solid var-get($theme, 'border-color');\n        }\n\n        button + button {\n            margin-inline-start: rem(8px);\n        }\n    }\n}\n\n/// Adds typography styles for the igx-dialog component.\n/// Uses the 'h6' and 'body-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(title: 'h6', content: 'body-1')] - The categories from the typographic scale used for type styles.\n@mixin dialog-typography($categories: (\n    title: 'h6',\n    content: 'body-1')\n) {\n    $title: map.get($categories, 'title');\n    $content: map.get($categories, 'content');\n\n    %igx-dialog-title {\n        @include type-style($title) {\n            margin: 0;\n        }\n    }\n\n    %igx-dialog-content {\n        @include type-style($content) {\n            margin: 0;\n        }\n\n        > * {\n            letter-spacing: normal;\n        }\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color will be assigned automatically to a contrasting color.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $accent-color [null] - Sets the pinned header background color, the joystick background and border colors, as well as the context menu background color.\n/// @param {Color} $active-color [null] - Sets the active text and border colors for tabs, panes, and menus.\n/// @param {Color} $border-color [null] - Sets the global border color in the dock manager. Also sets the pane content background and the context menu active background colors.\n/// @param {Color} $button-text [null] - Sets the button text color.\n/// @param {Color} $context-menu-background [null] - Sets the background color for context menus.\n/// @param {Color} $context-menu-background-active [null] - Sets the background color for active context menus.\n/// @param {Color} $context-menu-color [null] - Sets the text color for context menus.\n/// @param {Color} $context-menu-color-active [null] - Sets the text color for active context menus.\n/// @param {Color} $dock-background [null] - Sets the background color of the dock manager.\n/// @param {Color} $dock-text [null] - Sets the text color of the dock manager.\n/// @param {Color} $drop-shadow-background [null] - Sets the drop-shadow background color.\n/// @param {Color} $floating-pane-border-color [null] - Sets the border color for floating panes.\n/// @param {Color} $flyout-shadow-color [null] - Sets the flyout shadow color.\n/// @param {Color} $joystick-background [null] - Sets the background color of the joystick.\n/// @param {Color} $joystick-background-active [null] - Sets the background color of the joysticks.\n/// @param {Color} $joystick-border-color [null] - Sets the border color of the joystick.\n/// @param {Color} $joystick-icon-color [null] - Sets the color for the joystick icons.\n/// @param {Color} $joystick-icon-color-active [null] - Sets the color of the active joystick icons.\n/// @param {Color} $pane-content-background [null] - Sets the background color of the content panes.\n/// @param {Color} $pane-content-text [null] - Sets the text color of the content panes.\n/// @param {Color} $pane-header-background [null] - Sets the background color for pane headers.\n/// @param {Color} $pane-header-text [null] - Sets the text color for pane headers.\n/// @param {Color} $pinned-header-background [null] - Sets the background colors of pinned headers.\n/// @param {Color} $pinned-header-text [null] - Sets the text colors of pinned headers.\n/// @param {Color} $background-color [null] - Sets the base dock manager color as well as the pane headers and tabs background colors.\n/// @param {Color} $splitter-background [null] - Sets the background color for the splitters.\n/// @param {Color} $splitter-handle [null] - Sets the background color for the splitter handles.\n/// @param {Color} $tab-background [null] - Sets the background color for tabs.\n/// @param {Color} $tab-background-active [null] - Sets the background color for active tabs.\n/// @param {Color} $tab-border-color [null] - Sets the border color for tabs.\n/// @param {Color} $tab-border-color-active [null] - Sets the border color for active tabs.\n/// @param {Color} $tab-text [null] - Sets the text color for tabs.\n/// @param {Color} $tab-text-active [null] - Sets the text color for active tabs.\n/// @param {Color} $text-color [null] - Sets the text color for most elements in the dock manager. Used as the default joystick icon color.\n/// @requires $light-schema\n/// @example scss Change the background and icon colors in icon dock-managers\n///   $my-dock-manager-theme: dock-manager-theme();\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-dock-manager-theme);\n@function dock-manager-theme(\n    $schema: $light-schema,\n    $rest...\n) {\n    $name: 'igc-dockmanager';\n    $dock-manager-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $dock-manager-schema: map.get($schema, $name);\n    } @else {\n        $dock-manager-schema: $schema;\n    }\n\n    $theme: digest-schema($dock-manager-schema);\n\n    @return extend($theme, (name: $name, prefix: 'igc'), keywords($rest));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin dock-manager($theme) {\n    @include css-vars($theme);\n}\n\n/// Adds typography styles for the dock manager component.\n/// @access private\n/// @group typography\n@mixin dock-manager-typography() {\n    igx-dock-manager {\n        --igc-font-family: var(--ig-font-family, inherit);\n    }\n}\n\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Generates a drop-down theme.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $background-color [null] - The drop-down background color.\n/// @param {Color} $header-text-color [null] - The drop-down header text color.\n/// @param {Color} $item-text-color [null] - The drop-down text color.\n/// @param {Color} $hover-item-text-color [null] - The drop-down hover text color.\n/// @param {Color} $hover-item-background [null] - The drop-down hover item background color.\n/// @param {Color} $focused-item-background [null] - The drop-down focused item background color.\n/// @param {Color} $focused-item-text-color [null] - The drop-down focused item text color.\n/// @param {Color} $selected-item-background [null] - The drop-down selected item background color.\n/// @param {Color} $selected-item-text-color [null] - The drop-down selected item text color.\n/// @param {Color} $selected-hover-item-background [null] - The drop-down selected item hover background color.\n/// @param {Color} $selected-hover-item-text-color [null] - The drop-down selected item hover text color.\n/// @param {Color} $selected-focus-item-background [null] - The drop-down selected item focus background color.\n/// @param {Color} selected-focus-item-text-color [null] - The drop-down selected item focus text color.\n/// @param {Color} $disabled-item-background [null] - The drop-down disabled item background color.\n/// @param {Color} $disabled-item-text-color [null] - The drop-down disabled item text color.\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the drop-down.\n/// @param {Number} $border-width [null] - The border width used for drop-down component.\n/// @param {Color} $border-color [null] - The border color used for drop-down component.\n/// @param {Number} $border-radius [null] - The border radius used for drop-down component.\n/// @param {Number} $item-border-radius [null] - The border radius used for drop-down items.\n/// @requires $light-schema\n/// @example scss Change the background-color of the dropdown\n///   $my-dropdown-theme: drop-down-theme($background-color: #09f);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-dropdown-theme);\n@function drop-down-theme(\n    $schema: $light-schema,\n    $elevations: null,\n\n    $border-radius: null,\n    $item-border-radius: null,\n\n    $background-color: null,\n    $header-text-color: null,\n\n    $item-text-color: null,\n    $hover-item-text-color: null,\n\n    $hover-item-background: null,\n\n    $focused-item-background: null,\n    $focused-item-text-color: null,\n\n    $selected-item-background: null,\n    $selected-item-text-color: null,\n\n    $selected-hover-item-background: null,\n    $selected-hover-item-text-color: null,\n\n    $selected-focus-item-background: null,\n    $selected-focus-item-text-color: null,\n\n    $disabled-item-background: null,\n    $disabled-item-text-color: null,\n    $border-color: null,\n    $border-width: null,\n    $shadow: null\n) {\n    $name: 'igx-drop-down';\n    $selector: '.igx-drop-down__list, .igx-grid-toolbar__dd-list';\n\n    $drop-down-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $drop-down-schema: map.get($schema, $name);\n    } @else {\n        $drop-down-schema: $schema;\n    }\n\n    $theme: digest-schema($drop-down-schema);\n\n    @if not($item-text-color) and $background-color {\n        $item-text-color: text-contrast($background-color);\n    }\n\n    @if not($hover-item-background) and $background-color {\n        $hover-item-text-color: text-contrast($background-color);\n\n        @if meta.type-of($background-color) == 'color' {\n            $hover-item-background: rgba(text-contrast($background-color), .12);\n        }\n    }\n\n    @if not($hover-item-text-color) and $background-color {\n        $hover-item-text-color: text-contrast($background-color);\n    }\n\n    @if not($focused-item-background) and $background-color {\n        $focused-item-text-color: text-contrast($background-color);\n\n        @if meta.type-of($background-color) == 'color' {\n            $focused-item-background: rgba(text-contrast($background-color), .12);\n        }\n    }\n\n    @if not($focused-item-text-color) and $focused-item-background {\n        $focused-item-text-color: text-contrast($focused-item-background);\n    }\n\n    @if not($selected-item-text-color) and $selected-item-background {\n        $selected-item-text-color: text-contrast($selected-item-background);\n    }\n\n    @if not($selected-hover-item-text-color) and $selected-hover-item-background {\n        $selected-hover-item-text-color: text-contrast($selected-hover-item-background);\n    }\n\n    @if not($selected-focus-item-text-color) and $selected-focus-item-background {\n        $selected-focus-item-text-color: text-contrast($selected-focus-item-background);\n    }\n\n    @if not($selected-focus-item-text-color) and $selected-focus-item-background {\n        $selected-focus-item-text-color: text-contrast($selected-focus-item-background);\n    }\n\n    @if not($disabled-item-text-color) and $background-color {\n        @if meta.type-of($background-color) == 'color' {\n            $disabled-item-text-color: rgba(text-contrast($background-color), .36);\n        }\n    }\n\n    @if not($disabled-item-text-color) and $disabled-item-background {\n        @if meta.type-of($disabled-item-background) == 'color' {\n            $disabled-item-text-color: rgba(text-contrast($disabled-item-background), .36);\n        }\n    }\n\n    @if not($header-text-color) and $background-color {\n        @if meta.type-of($background-color) == 'color' {\n            $header-text-color: rgba(text-contrast($background-color), .7);\n        }\n    }\n\n    @if not($shadow) {\n        $elevation: map.get($drop-down-schema, 'elevation');\n        $shadow: elevation($elevation);\n    }\n\n    @if not($border-radius) {\n        $border-radius: border-radius(map.get($theme, 'border-radius'));\n    }\n\n    @if not($item-border-radius) {\n        $item-border-radius: border-radius(map.get($theme, 'item-border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        background-color: $background-color,\n        border-radius: $border-radius,\n        item-border-radius: $item-border-radius,\n        header-text-color: $header-text-color,\n        item-text-color: $item-text-color,\n        hover-item-text-color: $hover-item-text-color,\n        hover-item-background: $hover-item-background,\n        focused-item-background: $focused-item-background,\n        focused-item-text-color: $focused-item-text-color,\n        selected-item-background: $selected-item-background,\n        selected-item-text-color: $selected-item-text-color,\n        selected-hover-item-background: $selected-hover-item-background,\n        selected-hover-item-text-color: $selected-hover-item-text-color,\n        selected-focus-item-background: $selected-focus-item-background,\n        selected-focus-item-text-color: $selected-focus-item-text-color,\n        disabled-item-background: $disabled-item-background,\n        disabled-item-text-color: $disabled-item-text-color,\n        shadow: $shadow,\n        border-color: $border-color,\n        border-width: $border-width\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin drop-down($theme) {\n    @include css-vars($theme);\n    $variant: map.get($theme, variant);\n\n    $item-height: (\n        comfortable: rem(40px),\n        cosy: rem(32px),\n        compact: rem(28px)\n    );\n\n    $item-padding-comfortable: 0 rem(24px);\n    $item-padding-cosy: 0 rem(20px);\n    $item-padding-compact: 0 rem(16px);\n\n    $prefix-margin-comfortable: rem(20px);\n    $prefix-margin-cosy: rem(16px);\n    $prefix-margin-compact: rem(12px);\n\n    $suffix-margin-comfortable: rem(8px);\n    $suffix-margin-cosy: rem(6px);\n    $suffix-margin-compact: rem(4px);\n\n    $item-padding: (\n        comfortable: $item-padding-comfortable,\n        cosy: $item-padding-cosy,\n        compact: $item-padding-compact\n    );\n\n    $prefix-margin: (\n        comfortable: $prefix-margin-comfortable,\n        cosy: $prefix-margin-cosy,\n        compact: $prefix-margin-compact\n    );\n\n    $suffix-margin: (\n        comfortable: $suffix-margin-comfortable,\n        cosy: $suffix-margin-cosy,\n        compact: $suffix-margin-compact\n    );\n\n    $header-item-padding: (\n        comfortable: 0 rem(16px),\n        cosy: 0 rem(12px),\n        compact: 0 rem(8px)\n    );\n\n    %igx-drop-down {\n        position: absolute;\n    }\n\n    %igx-drop-down__list {\n        overflow: hidden;\n        border-radius: var-get($theme, 'border-radius');\n        background: var-get($theme, 'background-color');\n        box-shadow: var-get($theme, 'shadow');\n        min-width: rem(128px);\n        border: var-get($theme, 'border-width') solid var-get($theme, 'border-color');\n    }\n\n    %igx-drop-down__list-scroll {\n        overflow-y: auto;\n        overflow-x: hidden;\n        -webkit-overflow-scrolling: touch;\n        position: relative;\n\n        igx-input-group {\n            margin-top: -16px !important;\n        }\n    }\n\n    %igx-drop-down__header,\n    %igx-drop-down__item {\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        width: 100%;\n        white-space: nowrap;\n        height: map.get($item-height, 'comfortable');\n        position: relative;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %igx-drop-down__prefix;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %igx-drop-down__suffix;\n        }\n\n        igx-divider {\n            position: absolute;\n            width: 100%;\n            inset-inline-start: 0;\n            bottom: 0;\n        }\n    }\n\n    %igx-drop-down__item {\n        color: var-get($theme, 'item-text-color');\n        cursor: pointer;\n        padding: map.get($item-padding, 'comfortable');\n        border-radius: var-get($theme, 'item-border-radius');\n\n        &:focus {\n            outline: 0;\n            outline-color: transparent;\n            background: var-get($theme, 'focused-item-background');\n            color: var-get($theme, 'focused-item-text-color');\n        }\n\n        &:hover {\n            background: var-get($theme, 'hover-item-background');\n            color: var-get($theme, 'hover-item-text-color');\n        }\n    }\n\n    %igx-drop-down__content {\n        display: flex;\n        width: 100%;\n        align-items: center;\n    }\n\n    %igx-drop-down__inner {\n        display: block;\n        @include ellipsis();\n        margin-inline-end: auto;\n    }\n\n    %igx-drop-down__item--cosy {\n        height: map.get($item-height, 'cosy');\n        padding: map.get($item-padding, 'cosy');\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %igx-drop-down__prefix--cosy;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %igx-drop-down__suffix--cosy;\n        }\n    }\n\n    %igx-drop-down__item--compact {\n        height: map.get($item-height, 'compact');\n        padding: map.get($item-padding, 'compact');\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %igx-drop-down__prefix--compact;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %igx-drop-down__suffix--compact;\n        }\n    }\n\n    %igx-drop-down__prefix {\n        margin-inline-end: map.get($prefix-margin, 'comfortable');\n    }\n\n    %igx-drop-down__suffix {\n        + igx-suffix,\n        + [igxSuffix] {\n            margin-inline-start: map.get($suffix-margin, 'comfortable');\n        }\n    }\n\n    %igx-drop-down__prefix--cosy {\n        margin-inline-end: map.get($prefix-margin, 'cosy');\n    }\n\n    %igx-drop-down__suffix--cosy {\n        + igx-suffix,\n        + [igxSuffix] {\n            margin-inline-start: map.get($suffix-margin, 'cosy');\n        }\n    }\n\n    %igx-drop-down__prefix--compact {\n        margin-inline-end: map.get($prefix-margin, 'compact');\n    }\n\n    %igx-drop-down__suffix--compact {\n        + igx-suffix,\n        + [igxSuffix] {\n            margin-inline-start: map.get($suffix-margin, 'compact');\n        }\n    }\n\n    %igx-drop-down__header {\n        color: var-get($theme, 'header-text-color');\n        pointer-events: none;\n        padding: map.get($header-item-padding, 'comfortable');\n    }\n\n    %igx-drop-down__header--cosy {\n        height: map.get($item-height, 'cosy');\n        padding: map.get($header-item-padding, 'cosy');\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %igx-drop-down__prefix--cosy;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %igx-drop-down__suffix--cosy;\n        }\n    }\n\n    %igx-drop-down__header--compact {\n        height: map.get($item-height, 'compact');\n        padding: map.get($header-item-padding, 'compact');\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %igx-drop-down__prefix--compact;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %igx-drop-down__suffix--compact;\n        }\n    }\n\n    %igx-drop-down__group {\n        pointer-events: auto;\n\n        label {\n            @extend %igx-drop-down__header !optional;\n        }\n\n        %igx-drop-down__item {\n            text-indent: map.get($item-padding, 'comfortable');\n        }\n    }\n\n    %igx-drop-down__item--focused {\n        background: var-get($theme, 'focused-item-background');\n        color: var-get($theme, 'focused-item-text-color');\n\n        &:hover {\n            color: var-get($theme, 'focused-item-text-color');\n            background: var-get($theme, 'focused-item-background');\n        }\n    }\n\n    %igx-drop-down__item--selected {\n        background: var-get($theme, 'selected-item-background');\n        color: var-get($theme, 'selected-item-text-color');\n\n        &:hover {\n            background: var-get($theme, 'selected-hover-item-background');\n            color: var-get($theme, 'selected-hover-item-text-color');\n        }\n    }\n\n    %igx-drop-down__item--selected--focused {\n        background: var-get($theme, 'selected-focus-item-background');\n        color: var-get($theme, 'selected-focus-item-text-color');\n    }\n\n    %igx-drop-down__item--disabled {\n        background: var-get($theme, 'disabled-item-background');\n        color: var-get($theme, 'disabled-item-text-color');\n        cursor: default;\n        pointer-events: none;\n\n        &:hover {\n            background: var-get($theme, 'disabled-item-background');\n        }\n    }\n}\n\n/// Adds typography styles for the igx-list component.\n/// Uses the 'caption' and 'subtitle-2'\n/// categories from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(header: 'overline', item: 'body-2', select-item: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n@mixin drop-down-typography(\n    $categories: (\n        header: 'overline',\n        item: 'body-2',\n        select-item: 'subtitle-1'\n    )\n) {\n    $header: map.get($categories, 'header');\n    $item: map.get($categories, 'item');\n    $select-item: map.get($categories, 'select-item');\n\n    %igx-drop-down__header,\n    %igx-drop-down__group > label {\n        @include type-style($header) {\n            margin: 0;\n        }\n    }\n\n    %igx-drop-down__item {\n        @include type-style($item) {\n            margin: 0;\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'igniteui-theming/sass/animations/easings' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Expansion panel Theme\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $header-background [null] - The panel header background color.\n/// @param {Color} $header-focus-background [null] - The panel header focus background color.\n/// @param {Color} $header-title-color [null] - The panel header title text color.\n/// @param {Color} $header-description-color [null] - The panel header description text color.\n/// @param {Color} $header-icon-color [null] - The panel header icon color.\n/// @param {Color} $body-color [null] - The panel body text color.\n/// @param {Color} $body-background [null] - The panel body background color.\n/// @param {Color} $disabled-color [null] - The panel body disabled text color.\n/// @param {Number} $expanded-margin [null] - The expansion panel margin in expanded state when positioned inside accordion.\n/// @param {border-radius} $border-radius [null] - The border radius used for expansion-panel component.\n/// @requires $light-schema\n/// @example scss Change the header background color\n///   $my-expansion-panel-theme: expansion-panel-theme($header-background: black);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-expansion-panel-theme);\n@function expansion-panel-theme(\n    $schema: $light-schema,\n\n    $border-radius: null,\n    $header-background: null,\n    $header-focus-background: null,\n    $header-title-color: null,\n    $header-description-color: null,\n    $header-icon-color: null,\n    $body-color: null,\n    $body-background: null,\n    $disabled-color: null,\n    $expanded-margin: null\n) {\n    $name: 'igx-expansion-panel';\n    $expansion-panel-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $expansion-panel-schema: map.get($schema, $name);\n    } @else {\n        $expansion-panel-schema: $schema;\n    }\n\n    $theme: digest-schema($expansion-panel-schema);\n\n    @if not($header-title-color) and $header-background {\n        $header-title-color: text-contrast($header-background);\n    }\n\n    @if not($header-description-color) and $header-background {\n        @if meta.type-of($header-background) == 'color' {\n            $header-description-color: rgba(text-contrast($header-background), .8);\n        }\n    }\n\n    @if not($header-icon-color) and $header-background {\n        $header-icon-color: text-contrast($header-background);\n    }\n\n    @if not($body-color) and $body-background {\n        $body-color: text-contrast($body-background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        header-background: $header-background,\n        border-radius: $border-radius,\n        header-focus-background: $header-focus-background,\n        header-title-color: $header-title-color,\n        header-description-color: $header-description-color,\n        header-icon-color: $header-icon-color,\n        body-color: $body-color,\n        body-background: $body-background,\n        disabled-color: $disabled-color,\n        expanded-margin: $expanded-margin\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin expansion-panel($theme) {\n    @include css-vars($theme);\n    $variant: map.get($theme, 'variant');\n\n    $panel-padding: rem(16px) rem(24px);\n\n    %igx-expansion-panel {\n        display: flex;\n        flex-direction: column;\n        border-radius: border-radius(var-get($theme, 'border-radius'));\n        overflow: hidden;\n        transition: margin 350ms $out-quad;\n    }\n\n    %igx-expansion-panel__header-title {\n        color: var-get($theme, 'header-title-color');\n        margin-inline-end: rem(16px, 16px);\n    }\n\n    %igx-expansion-panel__header-description {\n        color: var-get($theme, 'header-description-color');\n    }\n\n    %igx-expansion-panel__header-title,\n    %igx-expansion-panel__header-description {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n    }\n\n    %igx-accordion {\n        overflow-y: auto;\n\n        %igx-expansion-panel__header-title {\n            @include line-clamp(4, true, true);\n\n            white-space: initial;\n            word-wrap: break-word;\n        }\n\n        %igx-expansion-panel--expanded {\n            margin: var-get($theme, 'expanded-margin') 0;\n\n            &:first-of-type {\n                margin-top: 0;\n            }\n\n            &:last-of-type {\n                margin-bottom: 0;\n            }\n        }\n    }\n\n    %igx-expansion-panel__header-inner {\n        display: flex;\n        align-items: center;\n        padding: $panel-padding;\n        cursor: pointer;\n        background: var-get($theme, 'header-background');\n\n        &:focus,\n        &:active\n        {\n            background: var-get($theme, 'header-focus-background');\n            outline: transparent;\n        }\n    }\n\n    %igx-expansion-panel__title-wrapper {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        flex: 1 0 0%;\n        overflow: hidden;\n    }\n\n    %igx-expansion-panel__header-icon--end {\n        order: 1;\n        margin-inline-start: rem(16px, 16px);\n    }\n\n    %igx-expansion-panel__header-icon--start {\n        order: -1;\n        margin-inline-end: rem(16px, 16px);\n    }\n\n    %igx-expansion-panel__header-icon--none {\n        display: none;\n    }\n\n    %igx-expansion-panel__header-icon--end,\n    %igx-expansion-panel__header-icon--start {\n        display: flex;\n        align-content: center;\n        justify-content: center;\n        user-select: none;\n\n        color: var-get($theme, 'header-icon-color');\n\n        igx-icon {\n            color: var-get($theme, 'header-icon-color');\n        }\n    }\n\n    %igx-expansion-panel__body {\n        color: var-get($theme, 'body-color');\n        background: var-get($theme, 'body-background');\n        overflow: hidden;\n        padding: $panel-padding;\n    }\n\n    %igx-expansion-panel--disabled {\n        pointer-events: none;\n\n        %igx-expansion-panel__header-title,\n        %igx-expansion-panel__header-description {\n            color: var-get($theme, 'disabled-color')\n        }\n\n        %igx-expansion-panel__header-icon--start,\n        %igx-expansion-panel__header-icon--end {\n            igx-icon {\n                color: var-get($theme, 'disabled-color');\n            }\n        }\n    }\n}\n\n/// Adds typography styles for the igx-expansion-panel component.\n/// @group typography\n/// @param {Map} $categories [(title: 'h5', description: 'subtitle-2', body: 'body-2')] - The categories from the typographic scale used for type styles.\n@mixin expansion-panel-typography($categories: (\n    title: 'h5',\n    description: 'subtitle-2',\n    body: 'body-2')\n) {\n    $title: map.get($categories, 'title');\n    $description: map.get($categories, 'description');\n    $body: map.get($categories, 'body');\n\n    %igx-expansion-panel__header-title {\n        @include type-style($title) {\n            margin: 0;\n        }\n    }\n\n    %igx-expansion-panel__header-description {\n        @include type-style($description) {\n            margin: 0;\n        }\n    }\n\n    %igx-expansion-panel__body {\n        @include type-style($body) {\n            margin: 0;\n        }\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas/dark' as *;\n@use '../button-group/button-group-component' as *;\n@use '../button-group/button-group-theme' as *;\n@use '../tree/tree-theme' as *;\n\n////\n/// @group themes\n/// @access private\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $theme - The grid theme used to style the component.\n@mixin excel-filtering($theme) {\n\n    $variant: map.get($theme, 'variant');\n    $bootstrap-theme: $variant == 'bootstrap';\n\n    $tree-node-indent: (\n        comfortable: rem(16px),\n        cosy: rem(8px),\n        compact: rem(4px)\n    );\n\n    $tree-node-expander-size: rem(20px);\n    $tree-node-height: (\n        comfortable: rem(40px),\n        cosy: rem(32px),\n        compact: rem(24px)\n    );\n\n    $checkbox-indent: (\n        comfortable: calc(#{map.get($tree-node-indent, 'comfortable')} + #{$tree-node-expander-size} + #{rem(8px)}),\n        cosy: calc((#{map.get($tree-node-indent, 'cosy')} * 2) + #{$tree-node-expander-size}),\n        compact: calc((#{map.get($tree-node-indent, 'compact')} * 2) + #{$tree-node-expander-size}),\n    );\n\n    %grid-excel-filter {\n        display: block;\n        width: rem(320px);\n        height: 100%;\n        flex-grow: 1;\n        box-shadow: elevation(12);\n        overflow: auto;\n        min-width: rem(320px);\n    }\n\n    %grid-excel-filter--inline {\n        box-shadow: none;\n        width: 100%;\n    }\n\n    %igx-excel-filter__loading {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    %grid-excel-icon {\n        display: flex;\n        cursor: pointer;\n\n        igx-icon {\n            width: var(--igx-icon-size, #{rem(15px)});\n            height: var(--igx-icon-size, #{rem(15px)});\n            font-size: var(--igx-icon-size, #{rem(15px)});\n        }\n    }\n\n    %grid-excel-icon--filtered {\n        igx-icon {\n            color: if(\n                $variant == 'indigo-design',\n                color($color: 'warn', $variant: 500),\n                color($color: 'secondary')\n            );\n        }\n    }\n\n    %grid-excel-menu {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        background: var-get($theme, 'filtering-row-background');\n        // TODO: The border-radius should not be hardcoded.\n        border-radius: border-radius(rem(4px));\n\n        igx-buttongroup {\n            --shadow: none;\n            --item-background: #{var-get($theme, 'filtering-row-background')};\n            --item-hover-background: #{color($color: 'gray', $variant: 100)};\n            --item-selected-background: #{color($color: 'gray', $variant: 100)};\n            --item-text-color: #{color($color: 'gray', $variant: 700)};\n            --item-hover-text-color: #{color($color: 'gray', $variant: 800)};\n            --item-selected-text-color: #{if(\n                $variant == 'indigo-design',\n                contrast-color($color: 'surface'),\n                color($color: 'secondary', $variant: 500)\n            )};\n            --item-border-color: transparent;\n            --item-selected-border-color: transparent;\n            --item-disabled-border: transparent;\n        }\n\n        @include tree(tree-theme(\n            $background: color($color: 'surface'),\n            $background-selected: color($color: 'surface'),\n            $background-active: color($color: 'surface'),\n            $background-active-selected: color($color: 'surface'),\n            $foreground: contrast-color($color: 'surface'),\n            $foreground-selected: contrast-color($color: 'surface'),\n            $foreground-active: contrast-color($color: 'surface'),\n            $foreground-active-selected: contrast-color($color: 'surface'),\n        ));\n\n        .igx-tree-node__wrapper {\n            padding: 0;\n        }\n\n        igx-chips-area  {\n            padding: rem(16px) rem(16px) 0 rem(16px);\n            gap: rem(8px);\n        }\n    }\n\n    %grid-excel-menu__header {\n        display: flex;\n        align-items: center;\n        padding: rem(16px);\n        color: color($color: 'gray', $variant: 700);\n    }\n\n    %grid-excel-menu__header-actions {\n        display: flex;\n        margin-inline-start: auto;\n\n        [igxButton] + [igxButton] {\n            margin-inline-start: rem(4px);\n        }\n\n        %grid-excel-actions__action {\n            padding: 0 !important;\n            margin: 0 !important;\n        }\n\n        %grid-excel-actions__action,\n        %grid-excel-actions--selected {\n            justify-content: center;\n        }\n    }\n\n    %grid-excel-menu__footer {\n        display: flex;\n        justify-content: space-between;\n\n        %grid-excel-filter__apply,\n        %grid-excel-filter__cancel {\n            flex-grow: 1;\n\n            [igxButton] {\n                width: 100%;\n            }\n        }\n    }\n\n    %grid-excel-filter__clear {\n        flex-grow: 1;\n    }\n\n    %grid-excel-filter__cancel + %grid-excel-filter__apply {\n        margin-inline-start: rem(16px);\n    }\n\n    %grid-excel-sort,\n    %grid-excel-move {\n        display: block;\n        padding: rem(8px) rem(16px);\n\n        header {\n            color: color($color: 'gray', $variant: 700);\n            margin-bottom: rem(4px);\n        }\n\n        igx-icon {\n            display: initial;\n            width: var(--igx-icon-size, #{rem(18px)});\n            height: var(--igx-icon-size, #{rem(18px)});\n            font-size: var(--igx-icon-size, #{rem(18px)});\n        }\n    }\n\n    %grid-excel-action--compact {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        header {\n            color: color($color: 'gray', $variant: 700);\n            margin-inline-end: auto;\n        }\n    }\n\n    %grid-excel-actions {\n        padding: rem(8px) rem(16px);\n    }\n\n    %grid-excel-actions--selected {\n        igx-icon {\n            color: if(\n                $variant == 'indigo-design',\n                color($color: 'primary', $variant: 200),\n                color($color: 'secondary')\n            );\n        }\n    }\n\n    %grid-excel-move .igx-button-group {\n        [dir='rtl'] & {\n            flex-direction: row-reverse;\n\n            igx-icon,\n            [igxButton] {\n                direction: ltr;\n            }\n        }\n    }\n\n    %grid-excel-sort .igx-button-group {\n        [dir='rtl'] & {\n            flex-direction: row-reverse;\n\n            igx-icon,\n            [igxButton] {\n                direction: ltr;\n            }\n        }\n    }\n\n    %grid-excel-actions__action {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: rem(8px) rem(16px);\n        cursor: pointer;\n        color: color($color: 'gray', $variant: 700);\n        outline-style: none;\n\n        &:hover,\n        &:focus {\n            background: color($color: 'gray', $variant: 100);\n        }\n\n        [dir='rtl'] & {\n            igx-icon {\n                transform: scaleX(-1);\n            }\n        }\n    }\n\n    %grid-excel-actions__action--disabled {\n        color: color($color: 'gray', $variant: 400);\n        pointer-events: none;\n    }\n\n    %igx-excel-filter__empty {\n        display: grid;\n        place-items: center;\n        height: 100%;\n    }\n\n    %grid-excel-main {\n        display: flex;\n        flex-direction: column;\n        flex-grow: 1;\n        overflow: hidden;\n        padding: rem(16px);\n        gap: rem(16px);\n\n        igx-list {\n            flex-grow: 1;\n            overflow: hidden;\n            margin-inline: -#{rem(16px)};\n            border: 0;\n\n            @if $bootstrap-theme {\n                border-top: rem(1px) dashed color($color: 'gray', $variant: 100);\n                border-bottom: rem(1px) dashed color($color: 'gray', $variant: 100);\n            } @else {\n                border-top: rem(1px) dashed color($color: 'gray', $variant: 300);\n                border-bottom: rem(1px) dashed color($color: 'gray', $variant: 300);\n            }\n        }\n\n        %igx-excel-filter__tree {\n            background: color($color: 'surface');\n            overflow-y: auto;\n            margin: 0 rem(-16px);\n            flex: 1;\n\n            @if $bootstrap-theme {\n                border-top: rem(1px) dashed color($color: 'gray', $variant: 100);\n                border-bottom: rem(1px) dashed color($color: 'gray', $variant: 100);\n            } @else {\n                border-top: rem(1px) dashed color($color: 'gray', $variant: 300);\n                border-bottom: rem(1px) dashed color($color: 'gray', $variant: 300);\n            }\n\n            igx-icon {\n                width: var(--igx-icon-size, #{$tree-node-expander-size});\n                height: var(--igx-icon-size, #{$tree-node-expander-size});\n                font-size: var(--igx-icon-size, #{$tree-node-expander-size});\n            }\n\n            > igx-checkbox,\n            .igx-tree-node__wrapper {\n                height: map.get($tree-node-height, 'comfortable');\n                min-height: map.get($tree-node-height, 'comfortable');\n            }\n\n            .igx-tree-node__toggle-button {\n                min-width: rem(20px);\n                margin-inline-start: map.get($tree-node-indent, 'comfortable');\n            }\n\n            .igx-tree {\n                overflow-y: hidden;\n            }\n        }\n\n        %igx-excel-filter__tree-alike {\n            background: color($color: 'surface');\n            display: flex;\n            flex-direction: column;\n            z-index: 1;\n        }\n\n        %igx-excel-filter__tree-alike-item {\n            display: flex;\n            align-items: center;\n            height: map.get($tree-node-height, 'comfortable');\n            background: color($color: 'surface');\n\n            &:hover,\n            &:focus {\n                background: color($color: 'gray', $variant: 200);\n            }\n\n            > igx-checkbox {\n                margin-inline-start: map.get($checkbox-indent, 'comfortable');\n            }\n        }\n    }\n\n    %grid-excel-menu--cosy {\n        igx-chips-area {\n            padding: rem(8px) rem(8px) 0 rem(8px);\n        }\n\n        %grid-excel-menu__header {\n            justify-content: space-between;\n            padding: rem(8px);\n        }\n\n        %grid-excel-sort {\n            padding: rem(8px);\n        }\n\n        %grid-excel-move {\n            padding: rem(8px);\n        }\n\n        %grid-excel-actions {\n            padding: rem(8px);\n        }\n\n        %grid-excel-actions__action {\n            padding: rem(8px);\n        }\n\n        %grid-excel-main {\n            padding: rem(8px);\n            gap: rem(8px);\n        }\n\n        igx-list {\n            margin-inline-start: -#{rem(8px)};\n            margin-inline-end: -#{rem(8px)};\n        }\n\n        %igx-excel-filter__tree {\n            margin: 0 rem(-8px);\n\n            > igx-checkbox,\n            .igx-tree-node__wrapper {\n                height: map.get($tree-node-height, 'cosy');\n                min-height: map.get($tree-node-height, 'cosy');\n            }\n\n            .igx-tree-node__toggle-button {\n                margin-inline-start: map.get($tree-node-indent, 'cosy');\n            }\n        }\n\n        %igx-excel-filter__tree-alike-item {\n            height: map.get($tree-node-height, 'cosy');\n\n            > igx-checkbox {\n                margin-inline-start: map.get($checkbox-indent, 'cosy');\n            }\n        }\n    }\n\n    %grid-excel-menu--compact {\n        igx-chips-area {\n            padding: rem(4px) rem(4px) 0 rem(4px);\n            gap: rem(4px);\n        }\n\n        %grid-excel-menu__header {\n            justify-content: space-between;\n            padding: rem(4px);\n        }\n\n        %grid-excel-sort,\n        %grid-excel-move {\n            padding: rem(4px);\n\n            @extend %grid-excel-action--compact;\n\n            igx-buttongroup {\n                width: rem(208px);\n            }\n        }\n\n        %grid-excel-move {\n            margin-bottom: 0;\n        }\n\n        %grid-excel-actions {\n            padding: rem(4px);\n        }\n\n        %grid-excel-actions__action {\n            padding: rem(4px);\n        }\n\n        %grid-excel-main {\n            padding: rem(4px);\n            gap: rem(4px);\n        }\n\n        igx-list {\n            margin-inline-start: -#{rem(4px)};\n            margin-inline-end: -#{rem(4px)};\n        }\n\n        %igx-excel-filter__tree {\n            margin: 0 rem(-4px);\n\n            igx-checkbox,\n            .igx-tree-node__wrapper {\n                height: map.get($tree-node-height, 'compact');\n                min-height: map.get($tree-node-height, 'compact');\n            }\n\n            .igx-tree-node__toggle-button {\n                margin: 0 map.get($tree-node-indent, 'compact');\n            }\n        }\n\n        %igx-excel-filter__tree-alike-item {\n            height: map.get($tree-node-height, 'compact');\n\n            > igx-checkbox {\n                margin-inline-start: map.get($checkbox-indent, 'compact');\n            }\n        }\n    }\n\n    %grid-excel-menu__secondary {\n        width: rem(520px);\n        min-width: rem(520px);\n        background: var-get($theme, 'filtering-row-background');\n        box-shadow: elevation(12);\n        border-radius: border-radius(rem(4px));\n    }\n\n    %grid-excel-menu__secondary--cosy {\n        %grid-excel-menu__header {\n            padding: rem(8px);\n        }\n\n        %grid-excel-menu__condition {\n            padding: 0 rem(8px);\n        }\n\n        %grid-excel-menu__add-filter {\n            margin: 0 rem(8px) rem(8px);\n        }\n\n        %grid-excel-menu__footer {\n            padding: rem(8px);\n        }\n    }\n\n    %grid-excel-menu__secondary--compact {\n        %grid-excel-menu__header {\n            padding: rem(4px);\n        }\n\n        %grid-excel-menu__condition {\n            padding: 0 rem(4px);\n        }\n\n        %grid-excel-menu__add-filter {\n            margin: 0 rem(4px) rem(4px);\n        }\n\n        %grid-excel-menu__footer {\n            padding: rem(8px) rem(4px);\n        }\n    }\n\n    %grid-excel-menu__secondary-header {\n        @if $bootstrap-theme {\n            border-bottom: rem(1px) solid color($color: 'gray', $variant: 100);\n        } @else {\n            border-bottom: rem(1px) solid color($color: 'gray', $variant: 300);\n        }\n    }\n\n    %grid-excel-menu__secondary-main {\n        height: rem(232px);\n        overflow: auto;\n    }\n\n    %grid-excel-menu__secondary-footer {\n        @if $bootstrap-theme {\n            border-top: rem(1px) dashed color($color: 'gray', $variant: 100);\n        } @else {\n            border-top: rem(1px) dashed color($color: 'gray', $variant: 300);\n        }\n\n        %grid-excel-filter__apply,\n        %grid-excel-filter__cancel {\n            flex-grow: 0;\n        }\n    }\n\n    %grid-excel-menu__condition {\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        padding: 0 rem(16px);\n\n        igx-select {\n            flex-grow: 1;\n            flex-basis: 40%;\n            margin: rem(16px) 0;\n\n            ~ igx-input-group,\n            ~ igx-date-picker {\n                margin-inline-start: rem(16px);\n            }\n        }\n\n        igx-buttongroup {\n            min-width: 30%;\n        }\n\n        [igxButton='icon'] {\n            margin-inline-start: rem(16px);\n        }\n    }\n\n    %grid-excel-menu__add-filter {\n        margin: 0 rem(16px) rem(16px);\n\n        igx-icon {\n            width: var(--igx-icon-size, #{rem(18px)});\n            height: var(--igx-icon-size, #{rem(18px)});\n            font-size: var(--igx-icon-size, #{rem(18px)});\n        }\n    }\n\n    igx-excel-style-filter-operations,\n    [igxExcelStyleFilterOperations] {\n        display: flex;\n        flex-direction: column;\n        flex-grow: 1;\n        overflow: hidden;\n    }\n}\n\n/// Adds typography styles for the excel-style-filtering component.\n/// Uses the 'body-1', 'caption'\n/// category from the typographic scale.\n/// @group typography\n/// @access private\n/// @param {Map} $categories [(haeder-comfortable: 'overline', header-compact: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n@mixin excel-filtering-typography($categories: (\n    header-comfortable: 'overline',\n    header-compact: 'subtitle-1')\n) {\n    $header-comfortable: map.get($categories, 'header-comfortable');\n    $header-compact: map.get($categories, 'header-compact');\n\n\n    %grid-excel-menu {\n        %grid-excel-menu__header > h4 {\n            @include type-style('h6')\n        }\n    }\n\n    %grid-excel-menu__secondary {\n        %grid-excel-menu__header > h4 {\n            @include type-style('h6');\n        }\n    }\n\n    %grid-excel-sort,\n    %grid-excel-move {\n        header {\n            @include type-style('overline');\n        }\n    }\n\n    %grid-excel-menu--cosy {\n        %grid-excel-menu__header > h4 {\n            @include type-style('h6')\n        }\n    }\n\n    %grid-excel-menu--compact {\n        %grid-excel-menu__header > h4 {\n            @include type-style('subtitle-1')\n        }\n\n        %grid-excel-sort,\n        %grid-excel-move {\n            header {\n                @include type-style('body-2');\n                text-transform: capitalize;\n            }\n        }\n\n        %grid-excel-actions__action {\n            span {\n                @include type-style('body-2');\n            }\n        }\n\n        %cbx-label {\n            @include type-style('body-2');\n        }\n    }\n\n    %grid-excel-menu__secondary--cosy {\n        %grid-excel-menu__header > h4 {\n            @include type-style('h6');\n        }\n    }\n\n    %grid-excel-menu__secondary--compact {\n        %grid-excel-menu__header > h4 {\n            @include type-style('subtitle-1');\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'igniteui-theming/sass/animations/easings' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a> //\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.  /\n/// @param {Color} $idle-text-color [null] - The input text color in the idle state.\n/// @param {Color} $filled-text-color [null] - The input text color in the filled state.\n/// @param {Color} $focused-text-color [null] - The input text color in the focused state.\n/// @param {Color} $disabled-text-color [null] - The input text color in the disabled state.\n/// @param {Color} $input-prefix-color [null] - The input prefix color in the idle state.\n/// @param {Color} $input-prefix-background [null] - The background color of an input prefix in the idle state.\n/// @param {Color} $input-suffix-color [null] - The input suffix color in the idle state.\n/// @param {Color} $input-suffix-background [null] - The background color of an input sufix in the idle state.\n/// @param {Color} $idle-secondary-color [null] - The label color in the idle state.\n/// @param {Color} $filled-secondary-color [null] - The label color in the filled state.\n/// @param {Color} $focused-secondary-color [null] - The label color in the focused state.\n/// @param {Color} $idle-bottom-line-color [null] - The bottom line and border colors in the idle state.\n/// @param {Color} $hover-bottom-line-color [null] - The bottom line and border colors in the hover state.\n/// @param {Color} $focused-bottom-line-color [null] - The bottom line and border colors in the focused state.\n/// @param {Color} $interim-bottom-line-color [null] - The bottom line and border colors during the to-focused transition.\n/// @param {Color} $disabled-bottom-line-color [null] - The bottom line and border colors in the disabled state.\n/// @param {Color} $border-color [null] - The border color for input groups of type border and fluent.\n/// @param {Color} $hover-border-color [null] - The hover input border for input groups of type border and fluent.\n/// @param {Color} $focused-border-color [null] - The focused input border color for input groups of type border and fluent.\n/// @param {Color} $disabled-border-color [null] - The disabled border color for input groups of type border and fluent.\n/// @param {Color} $box-background [null] - The background color of an input group of type box.\n/// @param {Color} $box-disabled-background [null] - The background color of an input group of type box in the disabled state.\n/// @param {Color} $border-background [null] - The background color of an input group of type border.\n/// @param {Color} $border-disabled-background [null] - The background color of an input group of type border in the disabled state.\n/// @param {Color} $search-background [null] - The background color of an input group of type search.\n/// @param {Color} $search-disabled-background [null] - The background color of an input group of type search in the disabled state.\n/// @param {box-shadow} $search-resting-shadow [null] - The shadow color of an input group of type search in its resting state.\n/// @param {box-shadow} $search-hover-shadow [null] - The shadow color of an input group of type search in its hover state.\n/// @param {box-shadow} $search-disabled-shadow [null] - The shadow color of an input group of type search in its disabled state.\n/// @param {Color} $success-secondary-color [null] - The success color used in the valid state.\n/// @param {Color} $warning-secondary-color [null] - The warning color used in the warning state.\n/// @param {Color} $error-secondary-color [null] - The error color used in the error state.\n/// @param {Color} $success-border-color [null] - The border color for success state for bootstrap input group.\n/// @param {Color} $error-border-color [null] - The border color for error state for bootstrap input group.\n/// @param {border-radius} $box-border-radius [null] - The border radius used for box input.\n/// @param {border-radius} $border-border-radius [null] - The border radius used for border input.\n/// @param {border-radius} $search-border-radius [null] - The border radius used for search input.\n/// @param {Color} placeholder-color [null] - The placeholder color of an input group.\n/// @param {Color} disabled-placeholder-color [null] - The disabled placeholder color of an input group.\n/// @requires $light-schema\n/// @example scss Change the focused border and label colors\n///   $my-input-group-theme: input-group-theme($focused-secondary-color: pink, $focused-bottom-line-color: pink);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-input-group-theme);\n@function input-group-theme(\n    $schema: $light-schema,\n    $elevations: null,\n\n    $box-border-radius: null,\n    $border-border-radius: null,\n    $search-border-radius: null,\n\n    $idle-text-color: null,\n    $filled-text-color: null,\n    $focused-text-color: null,\n    $disabled-text-color: null,\n\n    $idle-secondary-color: null,\n    $filled-secondary-color: null,\n    $focused-secondary-color: null,\n\n    $idle-bottom-line-color: null,\n    $hover-bottom-line-color: null,\n    $focused-bottom-line-color: null,\n    $interim-bottom-line-color: null,\n    $disabled-bottom-line-color: null,\n\n    $border-color: null,\n    $hover-border-color: null,\n    $focused-border-color: null,\n    $disabled-border-color: null,\n\n    $box-background: null,\n    $box-disabled-background: null,\n    $border-background: null,\n    $border-disabled-background: null,\n\n    $search-background: null,\n    $search-disabled-background: null,\n\n    $search-resting-shadow: null,\n    $search-hover-shadow: null,\n    $search-disabled-shadow: null,\n\n    $success-secondary-color: null,\n    $warning-secondary-color: null,\n    $error-secondary-color: null,\n\n    $success-shadow-color: null,\n    $error-shadow-color: null,\n\n    $placeholder-color: null,\n    $disabled-placeholder-color: null,\n\n    $input-prefix-color: null,\n    $input-prefix-background: null,\n    $input-suffix-color: null,\n    $input-suffix-background: null,\n\n    $label-floated-background: null,\n    $label-floated-disabled-background: null\n) {\n    $name: 'igx-input-group';\n    $selector: 'igx-input-group, igx-date-range-start, igx-date-range-end';\n    $input-group-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $input-group-schema: map.get($schema, $name);\n    } @else {\n        $input-group-schema: $schema;\n    }\n\n    $theme: digest-schema($input-group-schema);\n\n    $search-resting-elevation: map.get($input-group-schema, 'search-resting-elevation');\n    $search-hover-elevation: map.get($input-group-schema, 'search-hover-elevation');\n    $search-disabled-elevation: map.get($input-group-schema, 'search-disabled-elevation');\n\n    @if not($placeholder-color) and $box-background {\n        $placeholder-color: text-contrast($box-background);\n    }\n\n    @if not($placeholder-color) and $search-background {\n        $placeholder-color: text-contrast($search-background);\n    }\n\n    @if not($search-resting-shadow) {\n        $search-resting-shadow: elevation($search-resting-elevation);\n    }\n\n    @if not($search-hover-shadow) {\n        $search-hover-shadow: elevation($search-hover-elevation);\n    }\n\n    @if not($search-disabled-shadow) {\n        $search-disabled-shadow: elevation($search-disabled-elevation);\n    }\n\n    @if not($box-border-radius) {\n        $box-border-radius: border-radius(map.get($theme, 'box-border-radius'));\n    }\n\n    @if not($border-border-radius) {\n        $border-border-radius: border-radius(map.get($theme, 'border-border-radius'));\n    }\n\n    @if not($search-border-radius) {\n        $search-border-radius: border-radius(map.get($theme, 'search-border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n\n        idle-text-color: $idle-text-color,\n        filled-text-color: $filled-text-color,\n        focused-text-color: $focused-text-color,\n        disabled-text-color: $disabled-text-color,\n\n        box-border-radius: $box-border-radius,\n        border-border-radius: $border-border-radius,\n        search-border-radius: $search-border-radius,\n\n        idle-secondary-color: $idle-secondary-color,\n        filled-secondary-color: $filled-secondary-color,\n        focused-secondary-color: $focused-secondary-color,\n\n        idle-bottom-line-color: $idle-bottom-line-color,\n        hover-bottom-line-color: $hover-bottom-line-color,\n        focused-bottom-line-color: $focused-bottom-line-color,\n        interim-bottom-line-color: $interim-bottom-line-color,\n        disabled-bottom-line-color: $disabled-bottom-line-color,\n\n        border-color: $border-color,\n        hover-border-color: $hover-border-color,\n        focused-border-color: $focused-border-color,\n        disabled-border-color: $disabled-border-color,\n\n        box-background: $box-background,\n        box-disabled-background: $box-disabled-background,\n\n        border-background: $border-background,\n        border-disabled-background: $border-disabled-background,\n\n        search-background: $search-background,\n        search-disabled-background: $search-disabled-background,\n\n        search-resting-shadow: $search-resting-shadow,\n        search-hover-shadow: $search-hover-shadow,\n        search-disabled-shadow: $search-disabled-shadow,\n\n        success-secondary-color: $success-secondary-color,\n        warning-secondary-color: $warning-secondary-color,\n        error-secondary-color: $error-secondary-color,\n\n        success-shadow-color: $success-shadow-color,\n        error-shadow-color: $error-shadow-color,\n\n        placeholder-color: $placeholder-color,\n        disabled-placeholder-color: $disabled-placeholder-color,\n\n        input-prefix-color: $input-prefix-color,\n        input-prefix-background: $input-prefix-background,\n        input-suffix-color: $input-suffix-color,\n        input-suffix-background: $input-suffix-background,\n\n        label-floated-background: $label-floated-background,\n        label-floated-disabled-background: $label-floated-disabled-background,\n    ));\n}\n\n\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin input-group($theme) {\n    @include css-vars($theme);\n\n    $transition-timing: .25s $out-cubic;\n\n    $variant: map.get($theme, variant);\n    $indigo-theme: $variant == 'indigo-design';\n\n    $required-symbol: '*';\n    $required-symbol-margin: rem(2px);\n\n    // This creates an inverse relationship\n    // between the value of the base scale size and\n    // the sizing of all inner elements.\n    // i.e. the bigger the scale size,\n    // the smaller the padding of the inner items.\n    $base-scale-size: (\n        'comfortable': 16px,\n        'cosy': 19px,\n        'compact': 22px\n    );\n\n    $bootstrap-padding: (\n        'comfortable': rem(8px) rem(16px),\n        'cosy': rem(6px) rem(12px),\n        'compact': rem(4px) rem(8px)\n    );\n\n    $bootstrap-font-size: (\n        'comfortable': rem(20px),\n        'cosy': rem(16px),\n        'compact': rem(14px),\n    );\n\n    $hint-padding-top: rem(6px, map.get($base-scale-size, 'comfortable'));\n    $hint--box-margin: rem(12px, map.get($base-scale-size, 'comfortable'));\n\n    igx-input-group {\n        --theme: #{map.get($theme, 'variant')};\n    }\n\n    %form-group-display {\n        position: relative;\n        display: block;\n        color: var-get($theme, 'idle-text-color');\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix;\n            outline-style: none;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix;\n            outline-style: none;\n        }\n\n        input,\n        textarea,\n        span {\n            font: inherit;\n            margin: 0;\n        }\n\n        input[type='file'] {\n            @include hide-default();\n        }\n\n        textarea {\n            overflow: auto;\n        }\n\n        input[type='number'] {\n            -moz-appearance: textfield;\n        }\n\n        // Don't show the number spinner\n        input[type='number']::-webkit-inner-spin-button {\n            -webkit-appearance: none;\n            height: auto;\n        }\n\n        input[type='search']::-webkit-search-cancel-button,\n        input[type='search']::-webkit-search-decoration {\n            -webkit-appearance: none;\n        }\n    }\n\n    %form-group-display--cosy {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--cosy;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--cosy;\n        }\n    }\n\n    %form-group-display--compact {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--compact;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--compact;\n        }\n    }\n\n    %form-group-display--no-margin {\n        margin-top: 0;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--box;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--box;\n        }\n    }\n\n    %form-group-display--no-margin-cosy {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--box-cosy;\n        }\n    }\n\n    %form-group-display--no-margin-compact {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--box-compact;\n        }\n    }\n\n    %form-group-display--filled {\n        igx-prefix,\n        [igxPrefix],\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-prefix--filled;\n        }\n    }\n\n    %form-group-box-wrapper {\n        border-radius: var-get($theme, 'box-border-radius');\n        @if $variant == 'material' {\n            border-end-start-radius: border-radius(rem(0));\n            border-end-end-radius: border-radius(rem(0));\n        }\n        overflow: hidden;\n    }\n\n    %form-group-display--hover {\n        cursor: pointer;\n    }\n\n    %form-group-display--disabled {\n        user-select: none;\n        color: var-get($theme, 'disabled-text-color') !important;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--disabled;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--disabled;\n        }\n    }\n\n    %form-group-bundle {\n        position: relative;\n        display: flex;\n        align-items: center;\n        flex-flow: row nowrap;\n        max-width: 100%;\n        padding-top: rem(18px, map.get($base-scale-size, 'comfortable'));\n        box-shadow: inset 0 rem(-1px) 0 0 var-get($theme, 'idle-bottom-line-color');\n        transition: box-shadow $transition-timing, color $transition-timing;\n    }\n\n    %form-group-bundle--cosy {\n        padding-top: rem(18px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-bundle--compact {\n        padding-top: rem(18px, map.get($base-scale-size, 'compact'));\n    }\n\n    %form-group-bundle--box {\n        padding: 0;\n        padding-inline-start: rem(16px, map.get($base-scale-size, 'comfortable'));\n        background: var-get($theme, 'box-background');\n        box-shadow: inset 0 rem(-2px) 0 0 var-get($theme, 'idle-bottom-line-color');\n\n        igx-suffix,\n        [igxSuffix] {\n            padding-inline-end: rem(16px, map.get($base-scale-size, 'comfortable'));\n        }\n    }\n\n    %form-group-bundle--indigo {\n        padding: 0;\n        padding-inline-start: rem(16px, map.get($base-scale-size, 'comfortable'));\n        background: transparent;\n        transition: background $transition-timing, box-shadow $transition-timing;\n        box-shadow: inset 0 rem(-1px) 0 0 var-get($theme, 'idle-bottom-line-color');\n\n        &:hover,\n        &:focus {\n            background: var-get($theme, 'box-background');\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            padding-inline-end: rem(16px, map.get($base-scale-size, 'comfortable'));\n        }\n    }\n\n    %indigo--box-focused {\n        background: var-get($theme, 'box-background');\n    }\n\n    %form-group-bundle-success--indigo {\n        box-shadow: inset 0 rem(-2px) 0 0 var-get($theme, 'success-secondary-color');\n    }\n\n    %form-group-bundle-error--indigo {\n        box-shadow: inset 0 rem(-2px) 0 0 var-get($theme, 'error-secondary-color');\n    }\n\n    %form-group-bundle-error--indigo--hover {\n        border-color: var-get($theme, 'error-secondary-color');\n        box-shadow: 0 0 0 rem(1px) var-get($theme, 'error-secondary-color');\n    }\n\n    %form-group-helper--indigo--disabled {\n        color: var-get($theme, 'disabled-text-color');\n    }\n\n    %form-group-bundle--box-cosy {\n        padding: 0;\n        padding-inline-start: rem(16px, map.get($base-scale-size, 'cosy'));\n\n        igx-suffix,\n        [igxSuffix] {\n            padding-inline-end: rem(16px, map.get($base-scale-size, 'cosy'));\n        }\n    }\n\n    %form-group-bundle--box-compact {\n        padding: 0;\n        padding-inline-start: rem(16px, map.get($base-scale-size, 'compact'));\n\n        igx-suffix,\n        [igxSuffix] {\n            padding-inline-end: rem(16px, map.get($base-scale-size, 'compact'));\n        }\n    }\n\n    %form-group-bundle--hover {\n        cursor: pointer;\n        @if not $indigo-theme {\n            box-shadow: inset 0 rem(-2px) 0 0 var-get($theme, 'hover-bottom-line-color');\n        } @else {\n            box-shadow: inset 0 rem(-1px) 0 0 var-get($theme, 'hover-bottom-line-color');\n        }\n    }\n\n    %form-group-bundle--focus {\n        caret-color: var-get($theme, 'focused-secondary-color');\n        @if not $indigo-theme {\n            box-shadow: inset 0 rem(-2px) 0 0 var-get($theme, 'interim-bottom-line-color');\n        } @else {\n            box-shadow: inset 0 rem(-2px) 0 0 var-get($theme, 'focused-bottom-line-color');\n        }\n    }\n\n    %form-group-bundle--success {\n        caret-color: var-get($theme, 'success-secondary-color');\n        box-shadow: inset 0 rem(-1px) 0 0 var-get($theme, 'success-secondary-color');\n    }\n\n    %form-group-bundle--error {\n        caret-color: var-get($theme, 'error-secondary-color');\n        box-shadow: inset 0 rem(-1px) 0 0 var-get($theme, 'error-secondary-color');\n    }\n\n    %form-group-bundle--disabled {\n        @if not $indigo-theme {\n            box-shadow: none;\n        } @else {\n            box-shadow: inset 0 rem(-1px) 0 0 var-get($theme, 'disabled-bottom-line-color');\n        }\n        background-image: linear-gradient(to left, var-get($theme, 'disabled-bottom-line-color') 40%, transparent 10%);\n        background-position: bottom;\n        background-size: rem(4px) rem(1px);\n        background-repeat: repeat-x;\n\n        [dir='rtl'] & {\n            background-image: linear-gradient(to right, var-get($theme, 'disabled-bottom-line-color') 40%, transparent 10%);\n        }\n    }\n\n    %form-group-bundle--box-disabled {\n        @if not $indigo-theme {\n            background: var-get($theme, 'box-disabled-background');\n        } @else {\n            background: transparent;\n        }\n    }\n\n    %form-group-bundle--border {\n        padding: 0;\n        padding-inline-start: rem(16px, map.get($base-scale-size, 'comfortable'));\n        box-shadow: inset 0 0 0 rem(1px) var-get($theme, 'border-color');\n        border-radius: var-get($theme, 'border-border-radius');\n        background: var-get($theme, 'border-background');\n\n        igx-suffix,\n        [igxSuffix] {\n            padding-inline-end: rem(16px, map.get($base-scale-size, 'comfortable'));\n        }\n    }\n\n    %form-group-bundle--border-cosy {\n        padding: 0;\n        padding-inline-start: rem(16px, map.get($base-scale-size, 'cosy'));\n\n        igx-suffix,\n        [igxSuffix] {\n            padding-inline-end: rem(16px, map.get($base-scale-size, 'cosy'));\n        }\n    }\n\n    %form-group-bundle--border-compact {\n        padding: 0;\n        padding-inline-start: rem(16px, map.get($base-scale-size, 'compact'));\n\n        igx-suffix,\n        [igxSuffix] {\n            padding-inline-end: rem(16px, map.get($base-scale-size, 'compact'));\n        }\n    }\n\n    %form-group-bundle-border--hover {\n        @if not $indigo-theme {\n            box-shadow: inset 0 0 0 rem(2px) var-get($theme, 'hover-border-color');\n        } @else {\n            box-shadow: inset 0 0 0 rem(1px) var-get($theme, 'hover-border-color');\n        }\n    }\n\n    %form-group-bundle-border--focus {\n        @if not $indigo-theme {\n            box-shadow: inset 0 0 0 rem(2px) var-get($theme, 'focused-border-color');\n        } @else {\n            box-shadow: inset 0 0 0 rem(1px) var-get($theme, 'focused-border-color');\n        }\n    }\n\n    %form-group-bundle-border--error {\n        @if not $indigo-theme {\n            box-shadow: inset 0 0 0 rem(2px) var-get($theme, 'error-secondary-color');\n        } @else {\n            box-shadow: inset 0 0 0 rem(1px) var-get($theme, 'error-secondary-color');\n        }\n    }\n\n    %form-group-bundle-border--success {\n        @if not $indigo-theme {\n            box-shadow: inset 0 0 0 rem(2px) var-get($theme, 'success-secondary-color');\n        } @else {\n            box-shadow: inset 0 0 0 rem(1px) var-get($theme, 'success-secondary-color');\n        }\n    }\n\n    %form-group-bundle-border--disabled {\n        background: var-get($theme, 'border-disabled-background');\n        box-shadow: inset 0 0 0 rem(1px) var-get($theme, 'disabled-border-color');\n    }\n\n    // FLUENT START\n    %igx-input-group-fluent {\n        display: flex;\n        flex-direction: column;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix-fluent;\n            outline-style: none;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix-fluent;\n            outline-style: none;\n        }\n\n        select {\n            width: calc(100% + #{rem(8px)});\n            margin-inline-start: rem(-8px) !important;\n            cursor: pointer !important;\n        }\n    }\n\n    %igx-input-group-fluent-search {\n        display: flex;\n        flex-direction: column;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix-fluent-search;\n            outline-style: none;\n            overflow: hidden;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix-fluent-search;\n            outline-style: none;\n        }\n    }\n\n    %igx-input-group-fluent-search--focused {\n        igx-prefix,\n        [igxPrefix] {\n            visibility: hidden;\n            width: 0;\n            padding-inline-start: 0 !important;\n        }\n    }\n\n    %igx-input-group-fluent--cosy {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix-fluent--cosy;\n            outline-style: none;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix-fluent--cosy;\n            outline-style: none;\n        }\n    }\n\n    %igx-input-group-fluent-search--cosy {\n        display: flex;\n        flex-direction: column;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix-fluent-search--cosy;\n            outline-style: none;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix-fluent-search--cosy;\n            outline-style: none;\n        }\n    }\n\n    %igx-input-group-fluent--compact {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix-fluent--compact;\n            outline-style: none;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix-fluent--compact;\n            outline-style: none;\n        }\n    }\n\n    %igx-input-group-fluent-search--compact {\n        display: flex;\n        flex-direction: column;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix-fluent-search--compact;\n            outline-style: none;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix-fluent-search--compact;\n            outline-style: none;\n        }\n    }\n\n    %form-group-bundle-required--fluent {\n        &::before {\n            content: '*';\n            position: absolute;\n            top: rem(-8px);\n            inset-inline-start: calc(100% + #{rem(4px)});\n            color: var-get($theme, 'error-secondary-color');\n        }\n    }\n\n    %fluent-label + %form-group-bundle-required--fluent {\n        &::before {\n            display: none;\n        }\n    }\n\n    // Bundle\n    %form-group-bundle--fluent {\n        padding: 0;\n        min-height: rem(32px);\n        border: rem(1px) solid var-get($theme, 'border-color');\n        border-radius: var-get($theme, 'border-border-radius');\n        background: var-get($theme, 'border-background');\n        position: relative;\n        align-items: stretch;\n        box-shadow: none !important;\n    }\n\n    %form-group-bundle--fluent--hover {\n        border-color: var-get($theme, 'hover-border-color');\n        box-shadow: none;\n    }\n\n    %form-group-bundle--fluent--focus {\n        caret-color: var-get($theme, 'focused-text-color');\n        border-color: var-get($theme, 'focused-border-color');\n\n        &::after {\n            pointer-events: none;\n            position: absolute;\n            content: '';\n            width: 100%;\n            height: 100%;\n            border: rem(1px) solid var-get($theme, 'focused-border-color');\n        }\n    }\n\n    %form-group-bundle--fluent--hover-disabled,\n    %form-group-bundle--fluent-disabled {\n        border-color: var-get($theme, 'disabled-border-color');\n        background: var-get($theme, 'border-disabled-background');\n    }\n\n    %form-group-bundle-error--fluent,\n    %form-group-bundle-error--fluent--hover,\n    %form-group-bundle-error--fluent--focus {\n        border-color: var-get($theme, 'error-secondary-color');\n    }\n\n    %form-group-bundle-success--fluent,\n    %form-group-bundle-success--fluent--hover,\n    %form-group-bundle-success--fluent--focus {\n        border-color: var-get($theme, 'success-secondary-color');\n    }\n\n    %form-group-bundle-success--fluent--focus {\n        &::after {\n            border: rem(1px) solid var-get($theme, 'success-secondary-color');\n        }\n    }\n\n    %form-group-bundle-error--fluent--focus {\n        &::after {\n            border: rem(1px) solid var-get($theme, 'error-secondary-color');\n        }\n    }\n\n    %fluent-input {\n        padding: 0;\n        margin: 0;\n        border: none;\n    }\n\n    %fluent-input-disabled {\n        color: var-get($theme, 'disabled-text-color');\n    }\n\n    %form-group-bundle-main--fluent {\n        padding-inline-start: rem(8px);\n        align-self: center;\n        cursor: default;\n    }\n\n    igx-prefix + %form-group-bundle-main--fluent,\n    [igx-prefix] + %form-group-bundle-main--fluent {\n        @if $variant != 'fluent' {\n            padding-inline-start: 0;\n        }\n    }\n\n    %fluent-placeholder-label {\n        transform: translateY(0) scale(1);\n    }\n\n    %fluent-label {\n        padding: rem(5px) 0;\n        font-size: rem(14px, 16px);\n        font-weight: 600;\n        line-height: normal !important;\n        position: static;\n        transform: translateY(0);\n        transform-origin: top left;\n        margin-top: 0 !important;\n        height: auto;\n        color: color(null, 'gray', 800);\n\n        [dir='rtl'] & {\n            transform-origin: top right;\n        }\n    }\n\n    %fluent-label-success {\n        color: var-get($theme, 'idle-text-color');\n    }\n\n    %fluent-label-error {\n        color: var-get($theme, 'idle-text-color');\n    }\n\n    %fluent-label-disabled {\n        color: color(null, 'gray', 500);\n    }\n\n    %fluent-label-filled {\n        transform: translateY(0);\n    }\n\n    %fluent-label-focused {\n        color: color(null, 'gray', 800);\n        transform: translateY(0) scale(1);\n    }\n\n    %fluent-textarea {\n        padding: 0;\n    }\n\n    %form-group-bundle--search {\n        padding: 0 rem(16px, map.get($base-scale-size, 'comfortable'));\n        border-radius: var-get($theme, 'search-border-radius');\n        background: var-get($theme, 'search-background');\n        box-shadow: var-get($theme, 'search-resting-shadow');\n    }\n\n    %form-group-bundle--search-cosy {\n        padding: 0 rem(16px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-bundle--search-compact {\n        padding: 0 rem(16px, map.get($base-scale-size, 'compact'));\n    }\n\n    %form-group-bundle-search--hover {\n        box-shadow: var-get($theme, 'search-hover-shadow');\n        border-color: var-get($theme, 'hover-border-color');\n    }\n\n    %form-group-bundle-search--focus {\n        box-shadow: var-get($theme, 'search-hover-shadow');\n        border-color: var-get($theme, 'hover-border-color');\n    }\n\n    %form-group-bundle-search--error {\n        box-shadow: var-get($theme, 'search-hover-shadow');\n        border-color: var-get($theme, 'search-hover-shadow');\n    }\n\n    %form-group-bundle-search--success {\n        box-shadow: var-get($theme, 'search-hover-shadow');\n        border-color: var-get($theme, 'search-hover-shadow');\n    }\n\n    %form-group-bundle-search--disabled {\n        background: var-get($theme, 'search-disabled-background');\n        box-shadow: var-get($theme, 'search-disabled-shadow');\n        border-color: var-get($theme, 'disabled-border-color');\n    }\n\n    %form-group-bundle-main {\n        position: relative;\n        flex-grow: 1;\n        max-width: inherit;\n    }\n\n    %form-group-bundle-main--box {\n        padding-top: rem(18px, map.get($base-scale-size, 'comfortable'));\n    }\n\n    %form-group-bundle-main--box-cosy {\n        padding-top: rem(18px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-bundle-main--box-compact {\n        padding-top: rem(18px, map.get($base-scale-size, 'compact'));\n    }\n\n    %form-group-label {\n        @include ellipsis();\n        position: absolute;\n        // width: 100%;\n        transform: translateY(50%); /* 8px, base is 16px */\n        line-height: 1 !important;\n        height: rem(18px);\n        backface-visibility: hidden;\n        will-change: transform;\n        transform-origin: top left;\n        transition: transform $transition-timing, color $transition-timing, margin $transition-timing;\n\n        [dir='rtl'] & {\n            transform-origin: top right;\n        }\n    }\n\n    %form-group-label--cosy {\n        margin-top: rem(-2px);\n    }\n\n    %form-group-label--compact {\n        margin-top: rem(-4px);\n    }\n\n    %form-group-label--box {\n        transform: translateY(0);\n\n        + %form-group-input--box,\n        ~ %form-group-file-input--box {\n            transform: translateY(0);\n        }\n    }\n\n    %form-group-label--border {\n        padding: 0 rem(4px);\n        transition: all $transition-timing;\n    }\n\n    %form-group-label--border,\n    %form-group-label--search {\n        transform: translateY(0);\n    }\n\n    %form-group-label--search {\n        + %form-group-input--search {\n            transform: translateY(0);\n        }\n    }\n\n    %form-group-label--float {\n        overflow: visible;\n        transform: translateY(-50%) scale(.75);\n        margin-top: auto;\n    }\n\n    %form-group-label--float-border {\n        // width: auto;\n        transform: translateY(-130%) scale(.75);\n        background: var-get($theme, 'label-floated-background', inherit);\n    }\n\n    %form-group-label--float-border-disabled {\n        background: var-get($theme, 'label-floated-disabled-background', inherit);\n    }\n\n    %form-group-label--float-border-cosy {\n        transform: translateY(-115%) scale(.75);\n    }\n\n    %form-group-label--float-border-compact {\n        transform: translateY(-105%) scale(.75);\n    }\n\n    %form-group-label--fixed {\n        transition: color $transition-timing;\n    }\n\n    %form-group-label--focus {\n        color: var-get($theme, 'focused-secondary-color');\n    }\n\n    %form-group-label--success {\n        color: var-get($theme, 'success-secondary-color');\n    }\n\n    %form-group-label--error {\n        color: var-get($theme, 'error-secondary-color');\n    }\n\n    %form-group-label--required {\n        &::after {\n            content: '#{$required-symbol}';\n            font-size: inherit;\n            vertical-align: top;\n            margin-inline-start: $required-symbol-margin; /* rem(2px) base is 16px */\n            display: inline-block;\n        }\n    }\n\n    %form-group-input {\n        position: relative;\n        display: block;\n        border: none;\n        height: rem(32px, map.get($base-scale-size, 'comfortable'));\n        width: 100%;\n        min-width: 0;\n        overflow: visible;\n        background: transparent;\n        color: var-get($theme, 'filled-text-color');\n        outline-style: none;\n        box-shadow: none;\n        border-top: rem(3px) solid transparent;\n        padding-bottom: rem(3px);\n\n        &:not([type='date']) {\n            line-height: 0 !important; /* Reset typography */\n        }\n\n        &::-webkit-input-placeholder {\n            line-height: normal;\n        }\n\n        &::placeholder {\n            color: var-get($theme, 'placeholder-color');\n            opacity: 1;\n            line-height: normal; /* Fix placeholder position in Safari */\n        }\n    }\n\n    %form-group-file-input {\n        position: relative;\n        width: 100%;\n        max-width: 100%;\n        overflow: hidden;\n        height: rem(32px, map.get($base-scale-size, 'comfortable'));\n        color: var-get($theme, 'filled-text-color');\n        line-height: 1;\n\n        span {\n            @include ellipsis();\n            position: absolute;\n            display: inline-block;\n            width: inherit;\n            max-width: inherit;\n            top: 50%;\n            transform: translateY(-50%);\n        }\n    }\n\n    %form-group-input--cosy {\n        height: rem(32px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-file-input--cosy {\n        height: rem(32px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-input--compact {\n        font-size: rem(map.get($base-scale-size, 'compact') - 1px, map.get($base-scale-size, 'compact'));\n        height: rem(32px, map.get($base-scale-size, 'compact'));\n    }\n\n    %form-group-file-input--compact {\n        height: rem(32px, map.get($base-scale-size, 'compact'));\n    }\n\n    %form-group-upload-button[igxButton] {\n        margin-bottom: rem(10px);\n    }\n\n    %form-group-clear-icon {\n        &:focus {\n            border-radius: border-radius(rem(4px));\n            background-color: color($color: 'primary', $variant: 500);\n            color: contrast-color($color: 'primary', $variant: 500);\n\n            @if $variant == 'material' {\n                background-color: transparent;\n                color: color($color: 'secondary', $variant: 500);\n            }\n\n            @if $variant == 'fluent' {\n                border-radius: 0;\n            }\n\n            @if $variant == 'bootstrap' {\n                border-radius: 0;\n                color: contrast-color($color: 'primary', $variant: 600);\n            }\n        }\n    }\n\n    %chrome-autofill-fix {\n        &:-webkit-autofill,\n        &:-webkit-autofill:hover,\n        &:-webkit-autofill:focus,\n        &:-webkit-autofill:active {\n            -webkit-transition-delay: 99999s;\n            transition-delay: 99999s;\n        }\n    }\n\n    %edge-clear-icon-fix {\n        &::-ms-clear {\n            display: none;\n        }\n    }\n\n    %form-group-input--box,\n    %form-group-file-input--box,\n    %form-group-input--search,\n    %form-group-input--border,\n    %form-group-input--indigo,\n    %form-group-file-input-indigo {\n        transform: translateY(-25%);\n    }\n\n    %form-group-input--hover {\n        cursor: pointer;\n    }\n\n    %form-group-input--focus {\n        cursor: text;\n        color: var-get($theme, 'focused-text-color');\n    }\n\n    %form-group-input--disabled {\n        color: var-get($theme, 'disabled-text-color') !important;\n\n        &::placeholder {\n            color: var-get($theme, 'disabled-placeholder-color');\n        }\n    }\n\n    %form-group-textarea {\n        // 3 lines * 22px + 8px bottom padding + 8px top padding\n        min-height: rem(82px, map.get($base-scale-size, 'comfortable'));\n\n        // this fixes resizing in chrome !?!?\n        margin-inline-end: -#{rem(16px, map.get($base-scale-size, 'comfortable'))};\n\n        height: auto;\n        resize: vertical;\n        overflow: hidden;\n\n        // resets typography styles\n        line-height: normal !important;\n\n        &:not([type='*']) {\n            line-height: normal !important; /* resets typography styles */\n        }\n    }\n\n    %form-group-textarea--disabled {\n        color: var-get($theme, 'disabled-text-color') !important;\n\n        &::placeholder {\n            color: var-get($theme, 'disabled-placeholder-color');\n        }\n    }\n\n    %form-group-textarea--cosy {\n        min-height: rem(82px, map.get($base-scale-size, 'cosy'));\n        margin-inline-end: -#{rem(16px, map.get($base-scale-size, 'cosy'))};\n    }\n\n    %form-group-textarea--compact {\n        min-height: rem(82px, map.get($base-scale-size, 'compact'));\n        margin-inline-end: -#{rem(16px, map.get($base-scale-size, 'compact'))};\n    }\n\n    %form-group-textarea--indigo {\n        margin-top: -#{rem(18px, map.get($base-scale-size, 'comfortable'))} !important;\n    }\n\n    %form-group-textarea--indigo-cosy {\n        margin-top: -#{rem(18px, map.get($base-scale-size, 'cosy'))} !important;\n    }\n\n    %form-group-textarea--indigo-compact {\n        margin-top: -#{rem(18px, map.get($base-scale-size, 'compact'))} !important;\n    }\n\n    %form-group-prefix,\n    %form-group-suffix {\n        position: relative;\n        display: inline-flex;\n        align-items: center;\n        height: rem(32px, map.get($base-scale-size, 'comfortable'));\n        transition: color $transition-timing;\n    }\n\n    %form-group-prefix {\n        padding: rem(8px, map.get($base-scale-size, 'comfortable'));\n        padding-inline-start: 0;\n    }\n\n    %form-group-suffix {\n        padding: rem(8px, map.get($base-scale-size, 'comfortable')) 0;\n    }\n\n    %form-group-prefix--cosy,\n    %form-group-suffix--cosy {\n        height: rem(32px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-prefix--compact,\n    %form-group-suffix--compact {\n        font-size: rem(map.get($base-scale-size, 'compact') - 1px, map.get($base-scale-size, 'compact'));\n        height: rem(32px, map.get($base-scale-size, 'compact'));\n    }\n\n    %form-group-prefix--cosy {\n        padding: rem(8px, map.get($base-scale-size, 'cosy'));\n        padding-inline-start: 0;\n    }\n\n    %form-group-prefix--compact {\n        padding: rem(8px, map.get($base-scale-size, 'compact'));\n        padding-inline-start: 0;\n    }\n\n    %form-group-suffix--cosy {\n        padding: rem(8px, map.get($base-scale-size, 'cosy')) 0;\n    }\n\n    %form-group-suffix--compact {\n        padding: rem(8px, map.get($base-scale-size, 'compact')) 0;\n    }\n\n    igx-prefix.igx-prefix--upload,\n    [igxPrefix].igx-prefix--upload {\n        padding: 0 !important;\n    }\n\n    %form-group-prefix-fluent {\n        color: var-get($theme, 'input-prefix-color');\n        background: var-get($theme, 'input-prefix-background');\n        padding: 0 rem(8px, map.get($base-scale-size, 'comfortable'));\n        width: auto;\n        height: auto;\n        line-height: normal;\n        font-weight: 400;\n        border-radius: var-get($theme, 'border-border-radius') 0 0 var-get($theme, 'border-border-radius');\n\n        &:last-of-type {\n            margin-inline-end: rem(8px);\n        }\n    }\n\n    %form-group-prefix-fluent-search {\n        padding: 0 rem(8px, map.get($base-scale-size, 'comfortable'));\n\n        &:last-of-type {\n            margin-inline-end: 0;\n        }\n    }\n\n    %form-group-suffix-fluent {\n        color: var-get($theme, 'input-suffix-color');\n        padding: 0 rem(8px, map.get($base-scale-size, 'comfortable'));\n        background: var-get($theme, 'input-suffix-background');\n        width: auto;\n        height: auto;\n        line-height: normal;\n        border-radius: 0 var-get($theme, 'border-border-radius') var-get($theme, 'border-border-radius') 0;\n\n        &:first-of-type {\n            margin-inline-start: rem(8px);\n        }\n    }\n\n    %form-group-suffix-fluent-search {\n        width: auto;\n        height: auto;\n        padding: 0 rem(8px, map.get($base-scale-size, 'comfortable'));\n        line-height: normal;\n\n        &:first-of-type {\n            margin-inline-start: 0;\n        }\n    }\n\n    %form-group-prefix-fluent,\n    %form-group-suffix-fluent,\n    %form-group-suffix-fluent-search,\n    %form-group-prefix-fluent-search {\n        igx-icon {\n            width: var(--igx-icon-size, #{rem(18px)});\n            height: var(--igx-icon-size, #{rem(18px)});\n            font-size: var(--igx-icon-size, #{rem(18px)});\n        }\n    }\n\n    %form-group-prefix-fluent,\n    %form-group-suffix-fluent {\n        .ig-typography [igx-button],\n        .ig-typography igx-button,\n        .ig-typography button,\n        button {\n            border-radius: rem(1px) 0 0 rem(1px);\n        }\n    }\n\n    %form-group-prefix-fluent-search--cosy,\n    %form-group-suffix-fluent-search--cosy,\n    %form-group-prefix-fluent--cosy,\n    %form-group-suffix-fluent--cosy {\n        height: auto;\n        line-height: normal;\n    }\n\n    %form-group-prefix-fluent-search--compact,\n    %form-group-suffix-fluent-search--compact,\n    %form-group-prefix-fluent--compact,\n    %form-group-suffix-fluent--compact {\n        font-size: rem(map.get($base-scale-size, 'compact') - 1px, map.get($base-scale-size, 'compact'));\n        height: auto;\n        line-height: normal;\n    }\n\n    %form-group-prefix-fluent-search--cosy,\n    %form-group-prefix-fluent--cosy {\n        padding: 0 rem(8px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-prefix-fluent-search--compact,\n    %form-group-prefix-fluent--compact {\n        padding: 0 rem(8px, map.get($base-scale-size, 'compact'));\n    }\n\n    %form-group-suffix-fluent-search--cosy,\n    %form-group-suffix-fluent--cosy {\n        padding: 0 rem(8px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-suffix-fluent-search--compact,\n    %form-group-suffix-fluent--compact {\n        padding: 0 rem(8px, map.get($base-scale-size, 'compact'));\n    }\n    // FLUENT END\n\n    %form-group-prefix--box {\n        padding: 0;\n        padding-inline-end: rem(8px, map.get($base-scale-size, 'comfortable'));\n    }\n\n    %form-group-prefix--box-cosy {\n        padding: 0;\n        padding-inline-end: rem(8px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-prefix--box-compact {\n        padding: 0;\n        padding-inline-end: rem(8px, map.get($base-scale-size, 'compact'));\n    }\n\n    %form-group-suffix--box {\n        padding: 0;\n    }\n\n    %form-group-prefix--filled {\n        color: var-get($theme, 'filled-text-color');\n    }\n\n    %form-group-border {\n        height: 2px; /* 2px, when base is 16px */\n        margin-top: -2px; /* 2px, when base is 16px */\n        transform: scaleX(0);\n        transform-origin: center;\n        background: var-get($theme, 'focused-secondary-color');\n    }\n\n    %form-group-border--focus {\n        transform: scaleX(1);\n        transition: transform $transition-timing;\n    }\n\n    %form-group-border--success {\n        background: var-get($theme, 'success-secondary-color');\n    }\n\n    %form-group-border--warning {\n        background: var-get($theme, 'warning-secondary-color');\n    }\n\n    %form-group-border--error {\n        background: var-get($theme, 'error-secondary-color');\n    }\n\n    %form-group-border--hidden {\n        display: none;\n    }\n\n    %form-group-helper {\n        position: relative;\n        display: flex;\n        padding-top: rem(6px, map.get($base-scale-size, 'comfortable'));\n        justify-content: space-between;\n\n        > * {\n            margin-inline-end: rem(8px);\n\n            &:last-child {\n                margin-inline-end: 0;\n            }\n        }\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %form-group-help--cosy {\n        padding-top: rem(6px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-help--compact {\n        padding-top: rem(6px, map.get($base-scale-size, 'compact'));\n    }\n\n    %form-group-helper--box {\n        margin-inline-start: $hint--box-margin; /* 16px, base is 12px */\n        margin-inline-end: $hint--box-margin; /* 16px, base is 12px */\n    }\n\n    %form-group-helper--success {\n        color: var-get($theme, 'success-secondary-color');\n    }\n\n    %form-group-helper--error {\n        color: var-get($theme, 'error-secondary-color');\n    }\n\n    %form-group-helper-item {\n        display: flex;\n        align-items: center;\n        position: relative;\n    }\n\n    %form-group-helper-item--start {\n        justify-content: flex-start;\n    }\n\n    %form-group-helper-item--end {\n        justify-content: flex-end;\n    }\n\n    %form-group-helper-item--start,\n    %form-group-helper-item--end {\n        width: 100%;\n    }\n\n    %form-group-prefix--disabled,\n    %form-group-suffix--disabled {\n        color: var-get($theme, 'disabled-text-color');\n    }\n\n    // Bootstrap\n    %form-group-display--bootstrap {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--bootstrap;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--bootstrap;\n        }\n\n        %form-group-prefix--bootstrap:first-child {\n            border-start-start-radius: var-get($theme, 'box-border-radius');\n            border-end-start-radius: var-get($theme, 'box-border-radius');\n        }\n\n        %form-group-suffix--bootstrap:last-child {\n            border-start-end-radius: var-get($theme, 'box-border-radius');\n            border-end-end-radius: var-get($theme, 'box-border-radius');\n        }\n\n        %bootstrap-input:not(:first-child),\n        %bootstrap-file-input:not(:first-child) {\n            border-start-start-radius: 0;\n            border-end-start-radius: 0;\n        }\n\n        %bootstrap-input:not(:last-child),\n        %bootstrap-file-input:not(:last-child) {\n            border-start-end-radius: 0;\n            border-end-end-radius: 0;\n        }\n    }\n\n    %form-group-display--cosy-bootstrap {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--cosy-bootstrap;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--cosy-bootstrap;\n        }\n    }\n\n    %form-group-display--compact-bootstrap {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--compact-bootstrap;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--compact-bootstrap;\n        }\n    }\n\n    %form-group-display--disabled-bootstrap {\n        background-image: none;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--disabled-bootstrap;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--disabled-bootstrap;\n        }\n    }\n\n    %form-group-bundle--bootstrap {\n        align-items: stretch;\n        padding: 0;\n        box-shadow: none;\n        z-index: 0;\n    }\n\n    %form-group-bundle--bootstrap-hover {\n        border: none;\n        box-shadow: none;\n    }\n\n    %form-group-prefix--bootstrap,\n    %form-group-suffix--bootstrap {\n        border: rem(1px) solid var-get($theme, 'border-color');\n        padding: map.get($bootstrap-padding, 'comfortable');\n        z-index: -1;\n        width: auto;\n        height: auto;\n        font-size: map.get($bootstrap-font-size, 'comfortable');\n        line-height: 1.5;\n        white-space: nowrap;\n\n        igx-icon {\n            width: var(--igx-icon-size, #{map.get($bootstrap-font-size, 'comfortable')});\n            height: var(--igx-icon-size, #{map.get($bootstrap-font-size, 'comfortable')});\n            font-size: var(--igx-icon-size, #{map.get($bootstrap-font-size, 'comfortable')});\n            font-weight: 400;\n        }\n    }\n\n    %form-group-prefix--bootstrap {\n        color: var-get($theme, 'input-prefix-color');\n        background: var-get($theme, 'input-prefix-background');\n        border-inline-end: 0;\n    }\n\n    %form-group-suffix--bootstrap {\n        color: var-get($theme, 'input-suffix-color');\n        background: var-get($theme, 'input-suffix-background');\n        border-inline-start: 0;\n    }\n\n    %form-group-prefix--disabled-bootstrap,\n    %form-group-suffix--disabled-bootstrap {\n        border: rem(1px) solid var-get($theme, 'disabled-border-color');\n        color: var-get($theme, 'disabled-text-color');\n    }\n\n    %form-group-prefix--cosy-bootstrap,\n    %form-group-suffix--cosy-bootstrap {\n        padding: map.get($bootstrap-padding, 'cosy');\n        width: auto;\n        height: auto;\n\n        igx-icon {\n            width: var(--igx-icon-size, #{map.get($bootstrap-font-size, 'cosy')});\n            height: var(--igx-icon-size, #{map.get($bootstrap-font-size, 'cosy')});\n            font-size: var(--igx-icon-size, #{map.get($bootstrap-font-size, 'cosy')});\n        }\n    }\n\n    %form-group-prefix--compact-bootstrap,\n    %form-group-suffix--compact-bootstrap {\n        padding: map.get($bootstrap-padding, 'compact');\n        width: auto;\n        height: auto;\n\n        igx-icon {\n            width: var(--igx-icon-size, #{map.get($bootstrap-font-size, 'compact')});\n            height: var(--igx-icon-size, #{map.get($bootstrap-font-size, 'compact')});\n            font-size: var(--igx-icon-size, #{map.get($bootstrap-font-size, 'compact')});\n        }\n    }\n\n    %bootstrap-label {\n        position: static;\n        display: block;\n        color: var-get($theme, 'idle-secondary-color');\n        padding: 0;\n        line-height: normal !important;\n        transform: translateY(0);\n        transform-origin: top left;\n        margin-top: 0 !important;\n        margin-bottom: rem(8px);\n        height: auto;\n        font-size: rem(16px);\n\n        [dir='rtl'] & {\n            transform-origin: top right;\n        }\n    }\n\n    %bootstrap-label--cosy {\n        font-size: rem(14px);\n        margin-bottom: rem(6px);\n    }\n\n    %bootstrap-label--compact {\n        font-size: rem(14px);\n        margin-bottom: rem(4px);\n    }\n\n    %bootstrap-input {\n        height: auto;\n        line-height: 1.5 !important;\n        margin: 0;\n        border-radius: var-get($theme, 'box-border-radius');\n        border: rem(1px) solid var-get($theme, 'border-color');\n        font-size: map.get($bootstrap-font-size, 'comfortable');\n        padding: map.get($bootstrap-padding, 'comfortable');\n        transition: box-shadow .15s ease-out, border .15s ease-out;\n    }\n\n    %bootstrap-file-input {\n        width: calc(100% - #{2 * nth(map.get($bootstrap-padding, 'comfortable'), 2)});\n        height: inherit;\n        border-radius: var-get($theme, 'box-border-radius');\n        border: rem(1px) solid var-get($theme, 'border-color');\n        padding: map.get($bootstrap-padding, 'comfortable');\n    }\n\n    %bootstrap-input--focus {\n        border: rem(1px) solid var-get($theme, 'focused-border-color');\n        box-shadow: 0 0 0 rem(4px) var-get($theme, 'focused-secondary-color');\n    }\n\n    %bootstrap-input--success {\n        border: rem(1px) solid var-get($theme, 'success-secondary-color');\n        box-shadow: 0 0 0 rem(4px) var-get($theme, 'success-shadow-color');\n    }\n\n    %bootstrap-input--error {\n        border: rem(1px) solid var-get($theme, 'error-secondary-color');\n        box-shadow: 0 0 0 rem(4px) var-get($theme, 'error-shadow-color');\n    }\n\n    %bootstrap-input--disabled {\n        background: var-get($theme, 'border-disabled-background');\n        border: rem(1px) solid var-get($theme, 'disabled-border-color');\n        box-shadow: none;\n    }\n\n    %bootstrap-input--search {\n        transform: translateY(0);\n    }\n\n    %bootstrap-input--cosy {\n        font-size: map.get($bootstrap-font-size, 'cosy');\n        padding: map.get($bootstrap-padding, 'cosy');\n    }\n\n    %bootstrap-input--compact {\n        font-size: map.get($bootstrap-font-size, 'compact');\n        padding: map.get($bootstrap-padding, 'compact');\n    }\n}\n\n/// Adds typography styles for the igx-input-group component.\n/// Uses the 'body-1', 'caption'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(helper-text: 'caption', input-text: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n@mixin input-group-typography(\n    $categories: (\n        helper-text: 'caption',\n        input-text: 'subtitle-1'\n    )\n) {\n    $helper-text: map.get($categories, 'helper-text');\n    $input-text: map.get($categories, 'input-text');\n\n    %form-group-input {\n        @include type-style($input-text) {\n            margin: 0;\n        }\n    }\n\n    %form-group-helper {\n        @include type-style($helper-text) {\n            margin: 0;\n        }\n    }\n\n    %form-group-prefix,\n    %form-group-suffix {\n        @include type-style($input-text) {\n            margin: 0;\n        }\n    }\n}\n\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:color';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'igniteui-theming/sass/animations/easings' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $background [null] - The list background color.\n/// @param {Color} $header-background [null] - The list header background color.\n/// @param {Color} $header-text-color [null] - The list header text color.\n/// @param {Color} $item-background [null] - The list item background color.\n/// @param {Color} $item-background-hover [null] - The list item hover background color.\n/// @param {Color} $item-background-active [null] - The active list item background color.\n/// @param {Color} $item-text-color [null] - The list item text color.\n/// @param {Color} $item-text-color-hover [null] - The list item hover text color.\n/// @param {Color} $item-text-color-active [null] - The active list item text color.\n/// @param {Color} $item-title-color [null] - The list item title color.\n/// @param {Color} $item-title-color-hover [null] - The list item hover title color.\n/// @param {Color} $item-title-color-active [null] - The active list item title color.\n/// @param {Color} $item-subtitle-color [null] - The list item subtitle color.\n/// @param {Color} $item-subtitle-color-hover [null] - The list item hover subtitle color.\n/// @param {Color} $item-subtitle-color-active [null] - The active list item subtitle color.\n/// @param {Color} $item-action-color [null] - The list item action color.\n/// @param {Color} $item-action-color-hover [null] - The list item hover action color.\n/// @param {Color} $item-action-color-active [null] - The active list item action color.\n/// @param {Color} $item-thumbnail-color [null] - The list item thumbnail color.\n/// @param {Color} $item-thumbnail-color-hover [null] - The list item hover thumbnail color.\n/// @param {Color} $item-thumbnail-color-active [null] - The active list item thumbnail color.\n/// @param {border-radius} $border-radius [null] - The border radius used for list component.\n/// @param {border-radius} $item-border-radius [null] - The border radius used for list item.\n/// @param {Color} $border-width [null] - The list border width.\n/// @param {Number} $border-color [null] - The list border color.\n/// @requires $light-schema\n/// @example scss Change the list background color\n///   $my-list-theme: list-theme($background: black);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-list-theme);\n@function list-theme(\n    $schema: $light-schema,\n\n    $border-radius: null,\n    $item-border-radius: null,\n    $background: null,\n    $header-background: null,\n    $header-text-color: null,\n    $item-background: null,\n    $item-background-hover: null,\n    $item-background-active: null,\n    $item-text-color: null,\n    $item-text-color-hover: null,\n    $item-text-color-active: null,\n    $item-title-color: null,\n    $item-title-color-hover: null,\n    $item-title-color-active: null,\n    $item-subtitle-color: null,\n    $item-subtitle-color-hover: null,\n    $item-subtitle-color-active: null,\n    $item-action-color: null,\n    $item-action-color-hover: null,\n    $item-action-color-active: null,\n    $item-thumbnail-color: null,\n    $item-thumbnail-color-hover: null,\n    $item-thumbnail-color-active: null,\n    $border-color: null,\n    $border-width: null,\n) {\n    $name: 'igx-list';\n    $list-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $list-schema: map.get($schema, $name);\n    } @else {\n        $list-schema: $schema;\n    }\n\n    $theme: digest-schema($list-schema);\n\n    @if not($header-background) and $background {\n        $header-background: $background;\n    }\n\n    @if not($header-background) and $item-background {\n        $header-background: $item-background;\n    }\n\n    @if not($item-background) and $background {\n        $item-background: $background;\n    }\n\n    @if not($background) and $item-background {\n        $background: $item-background;\n    }\n\n    @if not($item-background-hover) and $item-background {\n        @if meta.type-of($item-background) == 'color' {\n            @if luminance($item-background) < .5 {\n                $item-background-hover: color.scale($item-background, $lightness: 8%);\n            } @else {\n                $item-background-hover: color.scale($item-background, $lightness: -8%);\n            }\n        }\n    }\n\n    @if not($item-background-active) and $item-background {\n        @if meta.type-of($item-background) == 'color' {\n            @if luminance($item-background) < .5 {\n                $item-background-active: color.scale($item-background, $lightness: 8%);\n            } @else {\n                $item-background-active: color.scale($item-background, $lightness: -8%);\n            }\n        }\n    }\n\n    @if not($header-text-color) and $header-background {\n        $header-text-color: text-contrast($header-background);\n    }\n\n    @if not($item-text-color) and $item-background {\n        $item-text-color: text-contrast($item-background);\n    }\n\n    @if not($item-title-color) and $item-background {\n        $item-title-color: text-contrast($item-background);\n    }\n\n    @if not($item-action-color) and $item-background {\n        $item-action-color: text-contrast($item-background);\n    }\n\n    @if not($item-thumbnail-color) and $item-background {\n        $item-thumbnail-color: text-contrast($item-background);\n    }\n\n    @if not($item-subtitle-color) and $item-background {\n        @if meta.type-of($item-background) == 'color' {\n            $item-subtitle-color: rgba(text-contrast($item-background), .74);\n        }\n    }\n\n    @if not($item-subtitle-color) and $item-text-color {\n        $item-subtitle-color: $item-text-color;\n    }\n\n    @if not($item-text-color-hover) and $item-background-hover {\n        $item-text-color-hover: text-contrast($item-background-hover);\n    }\n\n    @if not($item-title-color-hover) and $item-background-hover {\n        $item-title-color-hover: text-contrast($item-background-hover);\n    }\n\n    @if not($item-action-color-hover) and $item-background-hover {\n        $item-action-color-hover: text-contrast($item-background-hover);\n    }\n\n    @if not($item-thumbnail-color-hover) and $item-background-hover {\n        $item-thumbnail-color-hover: text-contrast($item-background-hover);\n    }\n\n    @if not($item-subtitle-color-hover) and $item-background-hover {\n        @if meta.type-of($item-background-hover) == 'color' {\n            $item-subtitle-color-hover: rgba(text-contrast($item-background-hover), .74);\n        }\n    }\n\n    @if not($item-subtitle-color-hover) and $item-text-color-hover {\n        $item-subtitle-color-hover: $item-text-color-hover;\n    }\n\n    @if not($item-text-color-active) and $item-background-active {\n        $item-text-color-active: text-contrast($item-background-active);\n    }\n\n    @if not($item-title-color-active) and $item-background-active {\n        $item-title-color-active: text-contrast($item-background-active);\n    }\n\n    @if not($item-action-color-active) and $item-background-active {\n        $item-action-color-active: text-contrast($item-background-active);\n    }\n\n    @if not($item-thumbnail-color-active) and $item-background-active {\n        $item-thumbnail-color-active: text-contrast($item-background-active);\n    }\n\n    @if not($item-subtitle-color-active) and $item-background-active {\n        @if meta.type-of($item-background-active) == 'color' {\n            $item-subtitle-color-active: rgba(text-contrast($item-background-active), .74);\n        }\n    }\n\n    @if not($item-subtitle-color-active) and $item-text-color-active {\n        $item-subtitle-color-active: $item-text-color-active;\n    }\n\n    @if not($border-radius) {\n        $border-radius: border-radius(map.get($theme, 'border-radius'));\n    }\n\n    @if not($item-border-radius) {\n        $item-border-radius: border-radius(map.get($theme, 'item-border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        border-radius: $border-radius,\n        item-border-radius: $item-border-radius,\n        background: $background,\n        header-background: $header-background,\n        header-text-color: $header-text-color,\n        item-background: $item-background,\n        item-background-hover: $item-background-hover,\n        item-background-active: $item-background-active,\n        item-text-color: $item-text-color,\n        item-text-color-hover: $item-text-color-hover,\n        item-text-color-active: $item-text-color-active,\n        item-title-color:$item-title-color,\n        item-title-color-hover:$item-title-color-hover,\n        item-title-color-active:$item-title-color-active,\n        item-subtitle-color: $item-subtitle-color,\n        item-subtitle-color-hover: $item-subtitle-color-hover,\n        item-subtitle-color-active: $item-subtitle-color-active,\n        item-action-color: $item-action-color,\n        item-action-color-hover: $item-action-color-hover,\n        item-action-color-active: $item-action-color-active,\n        item-thumbnail-color: $item-thumbnail-color,\n        item-thumbnail-color-hover: $item-thumbnail-color-hover,\n        item-thumbnail-color-active: $item-thumbnail-color-active,\n        border-color: $border-color,\n        border-width: $border-width,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin list($theme) {\n    @include css-vars($theme);\n\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: $variant == 'bootstrap';\n\n    $list-empty-padding: (\n        comfortable: rem(16px),\n        cosy: rem(8px),\n        compact: rem(4px)\n    );\n\n    $list-item-padding: (\n        comfortable: rem(8px) rem(16px),\n        cosy: rem(4px) rem(8px),\n        compact: rem(2px) rem(4px)\n    );\n\n    $list-icon-margin: (\n        comfortable: rem(8px) rem(16px),\n        cosy: rem(6px) rem(8px),\n        compact: rem(4px)\n    );\n\n    $list-line-margin: (\n        comfortable: rem(16px),\n        cosy: rem(12px),\n        compact: rem(8px)\n    );\n\n    %igx-list {\n        position: relative;\n        display: flex;\n        flex-flow: column nowrap;\n        background: var-get($theme, 'background');\n        height: auto;\n        overflow-y: auto;\n        overflow-x: hidden;\n        z-index: 0;\n        border-radius: var-get($theme, 'border-radius');\n    }\n\n    %igx-list--empty {\n        justify-content: center;\n        align-items: center;\n    }\n\n    %igx-list__message--empty {\n        text-align: center;\n        color: var-get($theme, 'item-text-color');\n        padding: map.get($list-empty-padding, 'comfortable');\n        z-index: 1;\n    }\n\n    %igx-list-header {\n        display: flex;\n        align-items: center;\n        color: var-get($theme, 'header-text-color');\n        background: var-get($theme, 'header-background');\n        padding: map.get($list-item-padding, 'comfortable');\n        user-select: none;\n    }\n\n    %igx-list-header--cosy {\n        padding: map.get($list-item-padding, 'cosy');\n    }\n\n    %igx-list-header--compact {\n        padding: map.get($list-item-padding, 'compact');\n    }\n\n    %igx-list-item-base {\n        display: flex;\n        flex-flow: column wrap;\n        justify-content: center;\n        border-radius: var-get($theme, 'item-border-radius');\n        color: var-get($theme, 'item-text-color');\n        background: var-get($theme, 'item-background');\n\n        @if $bootstrap-theme {\n            border-bottom: var-get($theme, 'border-width') solid var-get($theme, 'border-color');\n\n            &:last-of-type {\n                border-bottom: none;\n            }\n        }\n\n        &:hover {\n            color: var-get($theme, 'item-text-color-hover');\n            background: var-get($theme, 'item-background-hover');\n\n            %igx-list__item-lines {\n                color: currentColor;\n            }\n\n            %igx-list__item-line-title {\n                color: var-get($theme, 'item-title-color-hover');\n            }\n\n            %igx-list__item-line-subtitle {\n                color: var-get($theme, 'item-subtitle-color-hover');\n            }\n\n            %igx-list__item-actions {\n                color: var-get($theme, 'item-action-color-hover');\n\n                igx-icon {\n                    color: var-get($theme, 'item-action-color-hover')\n                }\n            }\n\n            %igx-list__item-thumbnail {\n                color: var-get($theme, 'item-thumbnail-color-hover');\n\n                igx-icon {\n                    color: var-get($theme, 'item-thumbnail-color-hover')\n                }\n            }\n        }\n    }\n\n    %igx-list-item-pan {\n        position: absolute;\n        visibility: hidden;\n        display: flex;\n        z-index: 1;\n    }\n\n    %igx-list__item-lines {\n        color: currentColor;\n        display: flex;\n        flex-direction: column;\n        flex: 1 0 0%;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-list__item-line-subtitle {\n        color: var-get($theme, 'item-subtitle-color');\n        opacity: .74\n    }\n\n    %igx-list__item-line-title {\n        color: var-get($theme, 'item-title-color');\n    }\n\n    %igx-list__item-actions {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: var-get($theme, 'item-action-color');\n\n        > * {\n            margin-inline-start: rem(8px);\n        }\n\n        &:empty {\n            display: none;\n        }\n\n        igx-icon {\n            color: var-get($theme, 'item-action-color')\n        }\n\n        [dir='rtl'] & {\n            igx-icon {\n                transform: scaleX(-1);\n            }\n        }\n    }\n\n    %igx-list-item-content {\n        display: flex;\n        align-items: center;\n        position: relative;\n        padding: map.get($list-item-padding, 'comfortable');\n        border-radius: var-get($theme, 'item-border-radius');\n        background: inherit;\n        z-index: 2;\n    }\n\n    %igx-list-item-content--compact {\n        padding: map.get($list-item-padding, 'compact');\n    }\n\n    %igx-list-item-content--cosy {\n        padding: map.get($list-item-padding, 'cosy');\n    }\n\n    %igx-list__item-thumbnail {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        align-self: flex-start;\n        padding: 0;\n        color: var-get($theme, 'item-thumbnail-color');\n\n        > igx-icon {\n            margin: map.get($list-icon-margin, 'comfortable');\n            margin-inline-start: 0;\n        }\n\n        > igx-avatar {\n            > igx-icon {\n                margin: 0;\n            }\n        }\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-list__item-thumbnail:not(:empty) + %igx-list__item-lines {\n        margin: 0;\n        margin-inline-start: map.get($list-line-margin, 'comfortable');\n    }\n\n    %igx-list__item-thumbnail--cosy:not(:empty) + %igx-list__item-lines {\n        margin: 0;\n        margin-inline-start: map.get($list-line-margin, 'cosy');\n    }\n\n    %igx-list__item-thumbnail--compact:not(:empty) + %igx-list__item-lines {\n        margin: 0;\n        margin-inline-start: map.get($list-line-margin, 'compact');\n    }\n\n    %igx-list__item-thumbnail--cosy {\n        > igx-icon {\n            margin: map.get($list-icon-margin, 'cosy');\n            margin-inline-start: 0;\n        }\n    }\n\n    %igx-list__item-thumbnail--compact {\n        > igx-icon {\n            margin: map.get($list-icon-margin, 'compact');\n            margin-inline-start: 0;\n        }\n    }\n\n    %igx-list__item-actions--cosy {\n        > * {\n            margin-inline-start: rem(6px);\n        }\n    }\n\n    %igx-list__item-actions--compact {\n        > * {\n            margin-inline-start: rem(4px);\n        }\n    }\n\n    %igx-list__item-lines + %igx-list__item-actions {\n        margin-inline-start: rem(8px);\n    }\n\n    %igx-list-item-content--active {\n        %igx-list__item-line-title {\n            color: var-get($theme, 'item-title-color-active')\n        }\n\n        %igx-list__item-line-subtitle {\n            color: var-get($theme, 'item-subtitle-color-active')\n        }\n\n        %igx-list__item-actions {\n            color: var-get($theme, 'item-action-color-active');\n\n            igx-icon {\n                color: var-get($theme, 'item-action-color-active')\n            }\n        }\n\n        %igx-list__item-thumbnail {\n            color: var-get($theme, 'item-thumbnail-color-active');\n\n            igx-icon {\n                color: var-get($theme, 'item-thumbnail-color-active')\n            }\n        }\n\n        color: var-get($theme, 'item-text-color-active');\n        background: var-get($theme, 'item-background-active');\n        z-index: 3;\n    }\n\n    %igx-list-item-content--inactive {\n        transition: transform .3s $out-quad;\n    }\n}\n\n/// Adds typography styles for the igx-list component.\n/// Uses the 'caption' and 'subtitle-1'\n/// categories from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(header: 'overline', item: 'subtitle-1', title: 'subtitle-1', subtitle: 'caption')] - The categories from the typographic scale used for type styles.\n@mixin list-typography(\n    $categories: (\n        header: 'overline',\n        item: 'subtitle-1',\n        title: 'subtitle-1',\n        subtitle: 'caption'\n    )\n) {\n    $header: map.get($categories, 'header');\n    $item: map.get($categories, 'item');\n    $title: map.get($categories, 'title');\n    $subtitle: map.get($categories, 'subtitle');\n\n    %igx-list-header {\n        @include type-style($header) {\n            margin: 0;\n        }\n    }\n\n    %igx-list-item {\n        @include type-style($item) {\n            margin: 0;\n        }\n    }\n\n    %igx-list__item-lines,\n    %igx-list__item-line-title {\n        @include type-style($title) {\n            margin: 0;\n        }\n    }\n\n    %igx-list__item-line-subtitle {\n        @include type-style($subtitle) {\n            margin: 0;\n        }\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'igniteui-theming/sass/animations/easings' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n///\n/// @param {Color} $background [null] - The navbar background color.\n/// @param {Color} $text-color [null] - The navbar text color.\n/// @param {box-shadow} $shadow [null] - The shadow of the navbar.\n/// @param {Color} $idle-icon-color [null] - The navbar idle icon color.\n/// @param {Color} $hover-icon-color [null] - The navbar hover icon color.\n/// @param {Bool} $disable-shadow [true] - Sets the navbar shadow visibility.\n/// @requires $light-schema\n/// @example scss Change the background color\n///   $my-navbar-theme: navbar-theme($background: green);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-navbar-theme);\n@function navbar-theme(\n    $schema: $light-schema,\n    $elevations: null,\n\n    $background: null,\n    $text-color: null,\n    $shadow: null,\n    $idle-icon-color: null,\n    $hover-icon-color: null,\n    $disable-shadow: false\n) {\n    $name: 'igx-navbar';\n    $navbar-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $navbar-schema: map.get($schema, $name);\n    } @else {\n        $navbar-schema: $schema;\n    }\n\n    $theme: digest-schema($navbar-schema);\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @if not($idle-icon-color) and $background {\n        $idle-icon-color: text-contrast($background);\n    }\n\n    @if not($hover-icon-color) and $background {\n        $hover-icon-color: text-contrast($background);\n    }\n\n    @if not($shadow) {\n        $elevation: map.get($navbar-schema, 'elevation');\n        $shadow: elevation($elevation);\n    }\n\n    @if $disable-shadow {\n        $shadow: none;\n    }\n\n    @return extend($theme, (\n        name: $name,\n        background: $background,\n        text-color: $text-color,\n        idle-icon-color: $idle-icon-color,\n        hover-icon-color: $hover-icon-color,\n        shadow: $shadow\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin navbar($theme) {\n    $variant: map.get($theme, 'variant');\n    @include css-vars($theme);\n\n    $navbar-padding: rem(16px);\n    $navbar-title-fz: rem(18px, 16px);\n    $navbar-title-lh: rem(18px, 16px);\n    $navbar-title-margin: 0;\n\n    %igx-navbar-display {\n        display: flex;\n        position: relative;\n        flex-flow: row nowrap;\n        align-items: center;\n        justify-content: space-between;\n        width: 100%;\n        min-height: rem(56px);\n        max-height: rem(128px);\n        padding-inline: $navbar-padding;\n        background: var-get($theme, 'background');\n        color: var-get($theme, 'text-color');\n        box-shadow: var-get($theme, 'shadow');\n        z-index: 4;\n        overflow: hidden;\n    }\n\n    %igx-navbar-part {\n        display: flex;\n        align-items: center;\n    }\n\n    %igx-navbar-title {\n        @include line-clamp(4, true, true);\n        margin: $navbar-title-margin;\n        flex-grow: 1;\n        user-select: text;\n        display: flex;\n        flex-direction: row\n    }\n\n    %igx-navbar-bundle {\n        @extend %igx-navbar-part;\n        user-select: none;\n\n        > * + * {\n            margin-inline-start: rem(16px);\n        }\n    }\n\n    %igx-navbar-icon-display {\n        >igx-icon,\n        [igxButton='icon'] {\n            cursor: pointer;\n            color: var-get($theme, 'idle-icon-color');\n            transition: color .15s $out-quad;\n\n            &:hover {\n                color: var-get($theme, 'hover-icon-color');\n            }\n        }\n    }\n\n    %igx-navbar-left {\n        @extend %igx-navbar-bundle;\n        @extend %igx-navbar-icon-display;\n        flex-grow: 1;\n    }\n\n    %igx-navbar-right {\n        @extend %igx-navbar-bundle;\n        @extend %igx-navbar-icon-display;\n    }\n\n    igx-navbar-action,\n    [igxNavbarAction] {\n        @extend %igx-navbar-part;\n    }\n\n    igx-navbar-title,\n    [igxNavbarTitle] {\n        @extend %igx-navbar-part;\n        @extend %igx-navbar-title !optional;\n    }\n}\n\n/// Adds typography styles for the igx-navbar component.\n/// Uses the 'body-1', 'caption'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(title: 'h6')] - The categories from the typographic scale used for type styles.\n@mixin navbar-typography($categories: (title: 'h6')) {\n    $title: map.get($categories, 'title');\n\n    %igx-navbar-title {\n        @include type-style($title);\n        margin-bottom: 0;\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'igniteui-theming/sass/animations/easings' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n///\n/// @param {Color} $background [null] - The navigation drawer background color.\n/// @param {Color} $border-color [null] - The navigation drawer right border color.\n/// @param {Color} $item-header-text-color [null] - The header's idle text color.\n/// @param {Color} $item-text-color [null] - The item's idle text color.\n/// @param {Color} $item-icon-color [null] - The item's icon color.\n/// @param {Color} $item-active-text-color [null] - The item's active text color.\n/// @param {Color} $item-active-background [null] - The item's active background color.\n/// @param {Color} $item-active-icon-color [null] - The item's icon active color.\n/// @param {Color} $item-hover-background [null] - The item's hover background color.\n/// @param {Color} $item-hover-text-color [null] - The item's hover text color.\n/// @param {Color} $item-hover-icon-color [null] - The item's hover icon color.\n/// @param {Color} $shadow [null] - Sets a custom shadow to be used by the drawer.\n/// @param {border-radius} $border-radius [null] - The border radius used for the navdrawer.\n/// @param {border-radius} $item-border-radius [null] - The border radius used for the navdrawer item.\n/// @requires $light-schema\n/// @example scss Change the background and item colors\n///   $navdrawer-theme: navdrawer-theme(\n///     $background: #2d313a,\n///     $item-active-background: #ecc256,\n///     $item-icon-color: #ecc256\n///   );\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($navdrawer-theme);\n@function navdrawer-theme(\n    $schema: $light-schema,\n    $elevations: null,\n\n    $border-radius: null,\n    $item-border-radius: null,\n\n    $background: null,\n    $border-color: null,\n\n    $item-header-text-color: null,\n    $item-text-color: null,\n    $item-icon-color: null,\n\n    $item-active-text-color: null,\n    $item-active-background: null,\n    $item-active-icon-color:null,\n\n    $item-hover-background: null,\n    $item-hover-text-color: null,\n    $item-hover-icon-color: null,\n    $shadow: null\n) {\n    $name: 'igx-nav-drawer';\n    $navdrawer-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $navdrawer-schema: map.get($schema, $name);\n    } @else {\n        $navdrawer-schema: $schema;\n    }\n\n    $theme: digest-schema($navdrawer-schema);\n\n    @if not($item-header-text-color) and $background {\n        $item-header-text-color: text-contrast($background);\n    }\n\n    @if not($item-text-color) and $background {\n        $item-text-color: text-contrast($background);\n    }\n\n    @if not($item-icon-color) and $background {\n        $item-icon-color: text-contrast($background);\n    }\n\n    @if not($item-active-background) and $background {\n        @if meta.type-of($background) == 'color' {\n            $item-active-background: rgba(text-contrast($background), .24);\n        }\n    }\n\n    @if not($item-active-text-color) and $item-active-background {\n        $item-active-text-color: text-contrast($item-active-background);\n    }\n\n    @if not($item-active-icon-color) and $item-active-background {\n        $item-active-icon-color: text-contrast($item-active-background);\n    }\n\n    @if not($item-hover-background) and $background {\n        @if meta.type-of($background) == 'color' {\n            $item-hover-background: rgba(text-contrast($background), .08);\n        }\n    }\n\n    @if not($item-hover-text-color) and $background {\n        $item-hover-text-color: text-contrast($background);\n    }\n\n    @if not($shadow) {\n        $elevation: map.get($navdrawer-schema, 'elevation');\n        $shadow: elevation($elevation);\n    }\n\n    @if not($border-radius) {\n        $border-radius: border-radius(map.get($theme, 'border-radius'));\n    }\n\n    @if not($item-border-radius) {\n        $item-border-radius: border-radius(map.get($theme, 'item-border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        border-radius: $border-radius,\n        item-border-radius: $item-border-radius,\n        background: $background,\n        border-color: $border-color,\n        item-text-color:$item-text-color,\n        item-active-text-color: $item-active-text-color,\n        item-active-background: $item-active-background,\n        item-hover-background: $item-hover-background,\n        item-hover-text-color:$item-hover-text-color,\n        item-header-text-color:$item-header-text-color,\n        item-icon-color:$item-icon-color,\n        item-active-icon-color:$item-active-icon-color,\n        item-hover-icon-color: $item-hover-icon-color,\n        shadow: $shadow,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin navdrawer($theme) {\n    @include css-vars($theme);\n\n    $drawer-icon-size: rem(24px);\n    $drawer-item-margin: rem(8px);\n    $text-side-padding: rem(8px);\n    $drawer-item-min-h: auto;\n    $drawer-item-max-h: rem(48px);\n    $drawer-item-min-w: rem(32px);\n\n    $variant: map.get($theme, variant);\n\n    %navdrawer-display {\n        transition: flex-basis;\n        transition-duration: .3s;\n        transition-timing-function: $out-quad;\n        flex-shrink: 0;\n    }\n\n    %aside {\n        position: fixed;\n        height: 100%;\n        max-width: 90%;\n        min-height: 100%;\n        overflow-x: hidden;\n        background: var-get($theme, 'background');\n        top: 0;\n        bottom: 0;\n        inset-inline-start: 0;\n        z-index: 999;\n        transition: width, transform;\n        transition-timing-function: $out-quad, $out-quad;\n        box-shadow: var-get($theme, 'shadow');\n        @if $variant != 'indigo-design' {\n            border-inline-end: rem(1px) solid var-get($theme, 'border-color');\n        }\n        border-radius: var-get($theme, 'border-radius');\n    }\n\n    %aside-panning {\n        overflow-x: hidden;\n        transition: none;\n    }\n\n    %aside--pinned {\n        position: relative;\n        max-width: 100%;\n        box-shadow: none;\n        z-index: 0;\n    }\n\n    %aside--collapsed--right {\n        transform: translate3d(300px, 0, 0);\n        box-shadow: none;\n\n        [dir='rtl'] & {\n            transform: translate3d(-300px, 0, 0);\n        }\n    }\n\n    %igx-nav-drawer__aside--collapsed {\n        transform: none;\n        width: 0;\n        overflow: hidden;\n        border: none;\n    }\n\n    %aside--collapsed {\n        transform: translate3d(-300px, 0, 0);\n\n        [dir='rtl'] & {\n            transform: translate3d(300px, 0, 0);\n        }\n\n        box-shadow: none;\n    }\n\n    %aside--right {\n        inset-inline-start: auto;\n        inset-inline-end: 0;\n        border-inline-end: none;\n        border-inline-start: rem(1px) solid var-get($theme, 'border-color');\n    }\n\n    %aside--mini {\n        width: rem(60px);\n        transition-duration: .2s, .2s;\n\n        %item {\n            justify-content: center;\n            @if $variant == 'indigo-design' {\n                max-width: rem(32px);\n                // important is needed to override the typography margins\n                margin: rem(14px) auto !important;\n            }\n\n            igx-icon {\n                margin-inline-start: 0;\n            }\n        }\n    }\n\n    %aside--normal {\n        width: rem(242px);\n        transition-duration: .3s, .3s;\n    }\n\n    %overlay {\n        opacity: 1;\n        background: color(null, 'gray', 500, .54);\n        transition: opacity, visibility;\n        transition-duration: .25s, .25s;\n        transition-timing-function: ease-in, step-start;\n        transition-delay: 0s, 0s;\n        position: absolute;\n        inset-inline-start: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        visibility: visible;\n        z-index: 999;\n    }\n\n    %overlay-panning {\n        transform: translate3d(0, 0, 0);\n        transition: none;\n    }\n\n    %overlay--hidden {\n        transition-timing-function: ease-in-out, step-end;\n        visibility: hidden;\n        opacity: 0;\n    }\n\n    %overlay-panning--hidden {\n        /* must be visible during pan.. */\n        visibility: visible;\n    }\n\n    %item {\n        position: relative;\n        display: flex;\n        align-items: center;\n        flex-flow: row nowrap;\n        color: var-get($theme, 'item-text-color');\n        max-height: $drawer-item-max-h;\n        min-width: $drawer-item-min-w;\n\n        @if $variant != 'indigo-design' {\n            // important is needed to override the typography margins\n            margin: $drawer-item-margin !important;\n            padding: rem(12px) rem(8px);\n            gap: rem(32px);\n        } @else {\n            // important is needed to override the typography margins\n            margin: rem(15px) $drawer-item-margin !important;\n            padding: rem(4px);\n            gap: calc(rem(32px) - #{$text-side-padding});\n        }\n\n        cursor: pointer;\n        user-select: none;\n        outline: transparent;\n        white-space: nowrap;\n        border-radius: var-get($theme, 'item-border-radius');\n        text-decoration: none;\n        width: calc(100% - #{$drawer-item-margin * 2});\n        border: none;\n        justify-content: flex-start;\n\n        igx-icon {\n            color: var-get($theme, 'item-icon-color');\n            @if $variant == 'indigo-design' {\n                margin-inline-start: rem(4px);\n            }\n        }\n\n        span {\n            @if $variant == 'indigo-design' {\n                padding-inline-start: $text-side-padding;\n            }\n        }\n\n        // Need this to override the igx-buttons\n        &[igxButton] {\n            background: transparent;\n            border: none;\n        }\n\n        &%igx-button--fab {\n            min-height: $drawer-item-min-h;\n        }\n\n        &%igx-button--icon {\n            height: auto;\n            transition: none;\n        }\n\n        &:hover,\n        &:focus {\n            background: var-get($theme, 'item-hover-background');\n            color: var-get($theme, 'item-hover-text-color');\n            box-shadow: none;\n\n            igx-icon {\n                color: var-get($theme, 'item-hover-icon-color');\n            }\n        }\n    }\n\n    %item--active {\n        // should be app primary color\n        color: var-get($theme, 'item-active-text-color');\n        background: var-get($theme, 'item-active-background');\n\n        igx-icon {\n            color: var-get($theme, 'item-active-icon-color');\n        }\n\n        &:focus,\n        &:hover {\n            color: var-get($theme, 'item-active-text-color');\n            background: var-get($theme, 'item-active-background');\n\n            igx-icon {\n                color: var-get($theme, 'item-active-icon-color');\n            }\n        }\n    }\n\n    %item,\n    %item--active {\n        // Need this to override the igx-buttons\n        &[igxButton] {\n            box-shadow: none;\n\n            igx-icon {\n                width: var(--igx-icon-size, #{$drawer-icon-size});\n                height: var(--igx-icon-size, #{$drawer-icon-size});\n                font-size: var(--igx-icon-size, #{$drawer-icon-size});\n                margin: 0;\n            }\n\n            &:hover,\n            &:focus {\n                box-shadow: none;\n                border: none;\n            }\n        }\n    }\n\n    %item--header {\n        display: block;\n        padding: rem(12px) rem(16px);\n        white-space: nowrap;\n        color: var-get($theme, 'item-header-text-color');\n    }\n\n    %style-dummy {\n        height: 0;\n        background: none;\n        box-shadow: none;\n        transition: none;\n        visibility: hidden;\n    }\n\n    %disable-animation {\n        transition-duration: 0s;\n    }\n}\n\n/// Adds typography styles for the igx-navdrawer component.\n/// Uses the 'subtitle-1', 'subtitle-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(item: 'subtitle-2', header: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n@mixin navdrawer-typography(\n    $categories: (\n        item: 'subtitle-2',\n        header: 'subtitle-1'\n    )\n) {\n    $item: map.get($categories, 'item');\n    $header: map.get($categories, 'header');\n\n    %item {\n        @include type-style($item);\n    }\n\n    %item--header {\n        @include type-style($header) {\n            margin: 0;\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../ripple/ripple-theme' as *;\n@use '../ripple/ripple-component' as *;\n@use 'igniteui-theming/sass/animations' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $label-color [null]- The text color used for the label text.\n/// @param {Color} $empty-color [null] - The unchecked border color.\n/// @param {Color} $fill-color [null] - The checked border and dot colors.\n/// @param {Color} $disabled-color [null] - The disabled border and dot colors.\n/// @param {Color} $disabled-label-color [null] - The disabled label color.\n/// @param {Color} $hover-color [null] - The border and dot colors on hover.\n/// @param {Color} $fill-color-hover [null] - The checked border and dot colors on hover.\n/// @param {Color} $fill-hover-border-color [null] - The checked dot border color on hover.\n/// @param {Color} $focus-outline-color [null] - The focus outlined color.\n///\n/// @requires $light-schema\n///\n///\n/// Set light to true when the surrounding area is dark.\n/// @example scss Change the checked dot and border colors\n///   $my-radio-theme: radio-theme($fill-color: magenta);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-radio-theme);\n@function radio-theme(\n    $schema: $light-schema,\n\n    $label-color: null,\n    $empty-color: null,\n    $fill-color: null,\n    $fill-hover-border-color:null,\n    $focus-outline-color: null,\n    $disabled-color: null,\n    $disabled-label-color: null,\n    $hover-color: null,\n    $fill-color-hover: null,\n) {\n    $name: 'igx-radio';\n    $radio-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $radio-schema: map.get($schema, $name);\n    } @else {\n        $radio-schema: $schema;\n    }\n\n    $theme: digest-schema($radio-schema);\n\n    @return extend($theme, (\n        name: $name,\n        label-color: $label-color,\n        empty-color: $empty-color,\n        fill-color: $fill-color,\n        fill-hover-border-color: $fill-hover-border-color,\n        disabled-color: $disabled-color,\n        disabled-label-color: $disabled-label-color,\n        hover-color: $hover-color,\n        fill-color-hover: $fill-color-hover,\n        focus-outline-color: $focus-outline-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires ripple-theme\n@mixin radio($theme) {\n    @include css-vars($theme);\n    @include scale-in-out($start-scale: .9);\n\n    $label-margin: rem(6px);\n\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: $variant == 'bootstrap';\n    $not-bootstrap-theme: $variant != 'bootstrap';\n\n    $size: map.get((\n        material: rem(20px),\n        fluent: rem(20px),\n        bootstrap: rem(16px),\n        indigo-design: rem(20px),\n    ), $variant);\n\n    $scale: map.get((\n        material: scale(.5),\n        fluent: scale(.5),\n        bootstrap: scale(.375),\n        indigo-design: scale(.5),\n    ), $variant);\n\n    $border-width: map.get((\n        material: rem(2px),\n        fluent: rem(1px),\n        bootstrap: rem(1px),\n        indigo-design: rem(2px),\n    ), $variant);\n\n    $radio-hover-scale: map.get((\n        material: null,\n        fluent: scale(.5),\n    ), $variant);\n\n    $ripple-display: map.get((\n        material: block,\n        fluent: none,\n        indigo-design: none,\n    ), $variant);\n\n    $border-style: solid;\n    $border-radius: border-radius(50%);\n\n    $transition: all .2s ease-in;\n\n    $ripple-size: rem(48px);\n    $ripple-radius: math.div($ripple-size, 2);\n\n    $ripple-theme: ripple-theme(\n        $schema: $light-schema,\n        $color: var-get($theme, 'fill-color')\n    );\n\n    %radio-display {\n        position: relative;\n        display: inline-flex;\n        flex-flow: row nowrap;\n        align-items: center;\n        color: var-get($theme, 'label-color');\n    }\n\n    %radio-input {\n        @include hide-default();\n    }\n\n    %radio-display--disabled {\n        pointer-events: none;\n        color: var-get($theme, 'disabled-label-color');\n        user-select: none;\n    }\n\n    %radio-composite {\n        position: relative;\n        display: inline-block;\n        width: $size;\n        height: $size;\n        min-width: $size;\n        line-height: $size;\n        cursor: pointer;\n        color: var-get($theme, 'label-color');\n\n        user-select: none;\n\n        &::before,\n        &::after {\n            position: absolute;\n            content: '';\n            width: $size;\n            height: $size;\n            inset-inline-start: 0;\n            top: 0;\n            border-radius: $border-radius;\n        }\n\n        &::before {\n            backface-visibility: hidden;\n            transform: scale(0);\n\n            @if $not-bootstrap-theme {\n                transition: $transition;\n            }\n\n            z-index: 1;\n        }\n\n        &::after {\n            border: $border-width $border-style var-get($theme, 'empty-color');\n        }\n    }\n\n    %radio-composite--x {\n        &::before {\n            border: $border-width $border-style var-get($theme, 'fill-color');\n            background: var-get($theme, 'fill-color');\n            transform: $scale;\n\n            @if $bootstrap-theme {\n                border-color: var-get($theme, 'fill-hover-border-color');\n                background: var-get($theme, 'fill-hover-border-color');\n            }\n        }\n\n        &::after {\n            border: $border-width $border-style var-get($theme, 'fill-color');\n\n            @if $bootstrap-theme{\n                background: var-get($theme, 'fill-color');\n            }\n        }\n    }\n\n    %igx-radio-hover__composite {\n        &::before {\n            background: var-get($theme, 'hover-color');\n            transform: $radio-hover-scale;\n        }\n    }\n\n    %igx-radio--checked-active__composite {\n        &::before {\n            background: var-get($theme, 'fill-color-hover');\n            border-color: var-get($theme, 'fill-hover-border-color');\n        }\n\n        &::after {\n            @if $bootstrap-theme {\n                border-color: var-get($theme, 'fill-color');\n            } @else {\n                border-color: var-get($theme, 'fill-hover-border-color');\n            }\n        }\n    }\n\n    %radio-composite--disabled {\n        &::after {\n            border: $border-width $border-style var-get($theme, 'disabled-color');\n\n            @if $bootstrap-theme {\n                background: transparent;\n                border: $border-width $border-style var-get($theme, 'disabled-label-color');\n            }\n        }\n    }\n\n    %radio-composite--x--disabled {\n        &::after {\n            border: $border-width $border-style var-get($theme, 'disabled-color');\n        }\n\n        &::before {\n            background: var-get($theme, 'disabled-color');\n            border: $border-width $border-style transparent;\n        }\n\n        @if $bootstrap-theme {\n            &::after {\n                background: var-get($theme, 'disabled-color');\n                border-color: var-get($theme, 'disabled-color');\n            }\n\n            &::before {\n                background: white;\n            }\n        }\n    }\n\n    %radio-label {\n        color: currentColor;\n        cursor: pointer;\n        user-select: none;\n        word-wrap: break-all;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %radio-label--after {\n        margin-inline-start: $label-margin;\n    }\n\n    %radio-label--before {\n        order: -1;\n        margin-inline-end: $label-margin;\n    }\n\n    %radio-label--before,\n    %radio-label--after {\n        &:empty {\n            margin: 0;\n        }\n    }\n\n    %radio-ripple {\n        @include ripple($ripple-theme);\n        @include css-vars($ripple-theme);\n        display: $ripple-display;\n        position: absolute;\n        top: calc(50% - #{$ripple-radius});\n        inset-inline-start: calc(50% - #{$ripple-radius});\n        width: $ripple-size;\n        height: $ripple-size;\n        border-radius: border-radius(math.div($ripple-size, 2));\n        overflow: hidden;\n        pointer-events: none;\n        filter: opacity(1);\n\n        @if $bootstrap-theme {\n            display: none;\n        }\n    }\n\n    %igx-radio--focused {\n        @if $variant == 'fluent' {\n            position: relative;\n            $focus-outline-offset-top: rem(2px);\n            $focus-outline-offset-left: rem(2px);\n\n            &::after {\n                content: '';\n                position: absolute;\n                top: -$focus-outline-offset-top;\n                inset-inline-start: -$focus-outline-offset-left;\n                box-shadow: 0 0 0 rem(1px) var-get($theme, 'focus-outline-color');\n                width: calc(100% + (#{$focus-outline-offset-left} * 2));\n                height: calc(100% + (#{$focus-outline-offset-top} * 2));\n            }\n        }\n\n        @if $variant == 'bootstrap' {\n            %radio-composite {\n                border-radius: $border-radius;\n                box-shadow: 0 0 0 rem(2px) var-get($theme, 'focus-outline-color');\n            }\n        }\n\n        @if $variant == 'indigo-design' {\n            %radio-composite {\n                border-radius: $border-radius;\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color');\n            }\n        }\n    }\n\n    %igx-radio--focused-checked {\n        @if $variant == 'indigo-design' {\n            %radio-composite {\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color-focused');\n            }\n        }\n    }\n\n    %radio-ripple--focused {\n        background: var-get($theme, 'empty-color');\n        transition: background .2s $ease-out-quad;\n        opacity: .12;\n    }\n\n    %radio-ripple--focused-checked {\n        background: var-get($theme, 'fill-color');\n    }\n\n    %radio-ripple--hover {\n        &::after {\n            position: absolute;\n            content: '';\n            opacity: .06;\n            inset: 0;\n        }\n    }\n\n    %radio-ripple--hover-unchecked {\n        &::after {\n            background: var-get($theme, 'empty-color');\n        }\n    }\n\n    %radio-ripple--hover-checked {\n        &::after {\n            background: var-get($theme, 'fill-color');\n        }\n    }\n\n    %radio-ripple--pressed {\n        &::after {\n            opacity: .12;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-radio component.\n/// Uses the 'subtitle-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n@mixin radio-typography(\n    $categories: (label: 'subtitle-1')\n) {\n    $label: map.get($categories, 'label');\n\n    %radio-label {\n        @include type-style($label) {\n            margin-top: 0;\n            margin-bottom: 0;\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'igniteui-theming/sass/animations/easings' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $track-color [null] - The color of the track.\n/// @param {Color} $track-step-color [null] - The color of the track steps.\n/// @param {Number} $track-step-size [null] - The size of the track steps.\n/// @param {Color} $track-hover-color [null] - The color of the track on hover.\n/// @param {Color} $thumb-color [null] - The color of the thumb.\n/// @param {Color} $thumb-focus-color [null] - The focus color of the thumb.\n/// @param {Color} $thumb-border-color [null] - The thumb border color.\n/// @param {Color} $thumb-border-focus-color [null] - The thumb border color when focused.\n/// @param {Color} $thumb-disabled-border-color [null] - The thumb border color when it's disabled.\n/// @param {Color} $disabled-thumb-color [null] - The thumb color when its disabled.\n/// @param {Color} $label-background-color [null] - The background color of the bubble label.\n/// @param {Color} $label-text-color [null] - The text color of the bubble label.\n/// @param {Color} $base-track-color [null] - The base background color of the track.\n/// @param {Color} $base-track-hover-color [null] - The base background color of the track on hover.\n/// @param {Color} $disabled-base-track-color [null] - The base background color of the track when is disabled.\n/// @param {Color} $disabled-fill-track-color [null] - The base background color of the fill track when is disabled.\n/// @param {Color} $tick-label-color [null] - The color of the tick label.\n/// @param {Color} $tick-color [null] - The background-color of the tick.\n/// @requires $light-schema\n/// @example scss Set custom track and thumb on colors\n///   $my-slider-theme: slider-theme($thumb-color: black, $track-color: yellow);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-slider-theme);\n@function slider-theme(\n    $schema: $light-schema,\n\n    $track-color: null,\n    $track-step-color: null,\n    $track-step-size: null,\n    $track-hover-color: null,\n    $thumb-color: null,\n    $thumb-focus-color: null,\n    $thumb-border-color: null,\n    $thumb-border-focus-color: null,\n    $thumb-disabled-border-color: null,\n    $disabled-thumb-color: null,\n    $label-background-color: null,\n    $label-text-color: null,\n\n    $base-track-color: null,\n    $base-track-hover-color: null,\n    $disabled-base-track-color: null,\n    $disabled-fill-track-color: null,\n\n    $tick-label-color: null,\n    $tick-color: null,\n) {\n    $name: 'igx-slider';\n    $slider-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $slider-schema: map.get($schema, $name);\n    } @else {\n        $slider-schema: $schema;\n    }\n\n    $theme: digest-schema($slider-schema);\n\n    @if not($label-text-color) and $label-background-color {\n        $label-text-color: text-contrast($label-background-color);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        track-color: $track-color,\n        track-step-color: $track-step-color,\n        track-step-size: $track-step-size,\n        track-hover-color: $track-hover-color,\n        thumb-color: $thumb-color,\n        thumb-focus-color: $thumb-focus-color,\n        thumb-border-color: $thumb-border-color,\n        thumb-border-focus-color: $thumb-border-focus-color,\n        thumb-disabled-border-color: $thumb-disabled-border-color,\n        disabled-thumb-color: $disabled-thumb-color,\n        label-background-color: $label-background-color,\n        label-text-color: $label-text-color,\n        base-track-color: $base-track-color,\n        base-track-hover-color: $base-track-hover-color,\n        disabled-base-track-color: $disabled-base-track-color,\n        disabled-fill-track-color: $disabled-fill-track-color,\n        tick-label-color: $tick-label-color,\n        tick-color: $tick-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin slider($theme) {\n    @include css-vars($theme);\n\n    $variant: map.get($theme, variant);\n\n    $slider-height: rem(48px);\n    $ripple-size: rem(40px);\n    $ripple-radius: math.div($ripple-size, 2);\n    $thumb-label-width: rem(40px);\n    $thumb-label-height: rem(30px);\n\n    $slider-track-height: map.get((\n        material: 6px,\n        fluent: 4px,\n        bootstrap: 8px,\n        indigo-design: 2px\n    ), $variant);\n\n    $slider-outline-width: map.get((\n        material: 0,\n        fluent: 0,\n        bootstrap: 3px,\n        indigo-design: 3px\n    ), $variant);\n\n    // Slider ticks\n    $base-tick-height: rem(8px);\n    $tick-height: $base-tick-height;\n    $tick-height--tall: $base-tick-height * 2;\n    $tick-width: rem(2px);\n\n    // Slider Thumb\n    $thumb-size: map.get((\n        material: 20px,\n        fluent: 16px,\n        bootstrap: 16px,\n        indigo-design: 14px\n    ), $variant);\n    $thumb-radius: math.div($thumb-size, 2);\n\n    $thumb-border-width: map.get((\n        material: 0,\n        fluent: 2px,\n        bootstrap: 1px,\n        indigo-design: 0\n    ), $variant);\n\n    // Slider Steps\n    $steps-top-position: map.get((\n        material: 2px,\n        fluent: 1px,\n        bootstrap: 3px,\n        indigo-design: 0\n    ), $variant);\n\n    // Slider Label\n    $slider-label-width: rem(36px);\n    $slider-label-height: $slider-label-width;\n    $slider-label-radius: math.div($slider-label-width, 2);\n    $slider-label-padding: 0 rem(2px);\n\n    %igx-slider-display {\n        display: flex;\n        position: relative;\n        // Z-index 0 is needed to set the stacking context for the inner elements with z-index.\n        // https://github.com/IgniteUI/igniteui-angular/issues/11597\n        z-index: 0;\n        height: $slider-height;\n        flex-grow: 1;\n        align-items: center;\n        transition: all .2s $out-quad;\n\n        &:hover {\n            %igx-slider-track-fill {\n                background: var-get($theme, 'track-hover-color');\n            }\n\n            %igx-slider-track-inactive {\n                background: var-get($theme, 'base-track-hover-color');\n            }\n\n            @if $variant == 'fluent'{\n                %igx-slider-thumb__dot::before {\n                    border: rem($thumb-border-width) solid var-get($theme, 'thumb-focus-color');\n                }\n            }\n        }\n    }\n\n    %igx-slider-disabled {\n        pointer-events: none;\n\n        %igx-slider-track-inactive {\n            background: var-get($theme, 'disabled-base-track-color');\n        }\n    }\n\n    %igx-slider-thumbs-container {\n        position: absolute;\n        width: 100%;\n        height: 0;\n        cursor: default;\n        z-index: 1;\n        inset-inline-start: 0;\n    }\n\n    %igx-slider-track {\n        position: relative;\n        width: 100%;\n        height: rem($slider-track-height);\n        overflow: hidden;\n        border-radius: border-radius(rem(32px));\n\n        @if $variant == 'indigo-design' {\n            border-radius: initial;\n        }\n    }\n\n    %igx-slider-track-inactive {\n        position: absolute;\n        width: 100%;\n        height: inherit;\n        background: var-get($theme, 'base-track-color');\n        transition: background .2s $out-quad;\n        border-radius: inherit;\n\n        @if $variant == 'material' {\n            height: rem(4px);\n            top: 50%;\n            transform: translateY(-50%);\n        }\n    }\n\n    %igx-slider-track-fill {\n        position: absolute;\n        width: 100%;\n        background: var-get($theme, 'track-color');\n        transform-origin: left center;\n        transform: scaleX(0);\n        border-radius: inherit;\n        height: inherit;\n\n        [dir='rtl'] & {\n            transform-origin: right center;\n        }\n\n        @if $variant == 'bootstrap' {\n            display: none;\n        }\n    }\n\n    %igx-slider-track-fill--disabled {\n        background: var-get($theme, 'disabled-fill-track-color');\n    }\n\n    %igx-slider__ticks {\n        width: 100%;\n        display: flex;\n        position: absolute;\n        bottom: 0;\n        justify-content: space-between;\n\n        &%igx-slider__ticks--top {\n            bottom: auto;\n            top: 0;\n            align-items: flex-end;\n        }\n    }\n\n    %igx-slider__ticks-group {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        position: relative;\n\n        &:first-of-type {\n            margin-inline-start: rem(-1px);\n        }\n\n        &:last-of-type {\n            margin-inline-start: rem(-1px);\n        }\n    }\n\n    %igx-slider__ticks-label {\n        color: var-get($theme, 'tick-label-color');\n        position: absolute;\n        top: $tick-height--tall;\n        transform: translate(-50%);\n        line-height: .7;\n        opacity: 1;\n        transition: opacity .2s $in-out-quad;\n\n        [dir='rtl'] & {\n            left: 100%;\n        }\n    }\n\n    %igx-slider__ticks-tick {\n        background: var-get($theme, 'tick-color');\n        height: $tick-height;\n        width: $tick-width;\n    }\n\n    %igx-slider__ticks--tall {\n        %igx-slider__ticks-label {\n            top: calc(#{$tick-height--tall} + #{$tick-height});\n        }\n    }\n\n    %igx-slider__tick--disabled {\n        background: var-get($theme, 'disabled-base-track-color') !important;\n    }\n\n    %igx-slider__ticks-labels--disabled {\n        color: var-get($theme, 'disabled-base-track-color') !important;\n    }\n\n    %igx-slider__ticks-group--tall {\n        %igx-slider__ticks-tick {\n            height: $tick-height--tall;\n        }\n\n        %igx-slider__ticks-label {\n            top: calc(#{$tick-height--tall} + #{$tick-height});\n        }\n    }\n\n    %igx-slider__ticks--top {\n        %igx-slider__ticks-label {\n            bottom: calc(#{$tick-height} + #{$tick-height});\n            top: auto;\n        }\n\n        &%igx-slider__ticks--tall {\n            %igx-slider__ticks-label {\n                bottom: calc(#{$tick-height--tall} + #{$tick-height});\n                top: auto;\n            }\n        }\n    }\n\n    %igx-slider__tick-label--hidden {\n        opacity: 0;\n    }\n\n    %igx-slider-track-steps {\n        position: absolute;\n        display: flex;\n        width: 100%;\n        height: rem(4px);\n        opacity: .85;\n        transition: opacity .2s ease-out;\n        top: 50%;\n        transform: translateY(-50%);\n        color: var-get($theme, 'track-step-color');\n\n        svg {\n            clip-path: inset(0 rem(3px) 0 rem(3px));\n        }\n\n        line {\n            stroke: currentColor;\n            stroke-width: var-get($theme, 'track-step-size');\n            stroke-linecap: round;\n        }\n    }\n\n    %igx-slider__tick-labels--top-bottom {\n        %igx-slider__ticks-group {\n            display: block;\n        }\n\n        %igx-slider__ticks-label {\n            writing-mode: vertical-rl;\n            transform: translate(-50%) rotate(0deg);\n        }\n\n        %igx-slider__ticks--tall {\n            %igx-slider__ticks-label {\n                top: calc(#{$tick-height--tall} + #{rem(2px)});\n            }\n        }\n\n        &%igx-slider__ticks--top {\n            %igx-slider__ticks-label {\n                writing-mode: vertical-rl;\n                transform: translate(-50%) rotate(0deg);\n            }\n\n            %igx-slider__ticks--tall {\n                %igx-slider__ticks-label {\n                    bottom: calc(#{$tick-height--tall} + #{rem(2px)});\n                }\n            }\n        }\n    }\n\n    %igx-slider__tick-labels--bottom-top {\n        %igx-slider__ticks-group {\n            display: block;\n        }\n\n        %igx-slider__ticks-label {\n            writing-mode: vertical-rl;\n            transform: translate(-50%) rotate(180deg);\n        }\n\n        &%igx-slider__ticks--top {\n            %igx-slider__ticks-label {\n                writing-mode: vertical-rl;\n                transform: translate(-50%) rotate(180deg);\n            }\n\n            %igx-slider__ticks--tall {\n                %igx-slider__ticks-label {\n                    bottom: calc(#{$tick-height--tall} + #{rem(2px)});\n                }\n            }\n        }\n    }\n\n    %igx-thumb-display {\n        position: absolute;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n        width: rem($thumb-size);\n        height: rem($thumb-size);\n        outline-style: none;\n        top: -#{rem($thumb-radius)};\n        margin-inline-start: -#{rem($thumb-radius)};\n\n        @if $variant == 'material' {\n            &:hover div::after {\n                opacity: .12;\n                transform: scale(1);\n            }\n\n            &:focus div::after {\n                opacity: .18;\n                transform: scale(1);\n            }\n        }\n\n        &:focus div::before {\n            box-shadow: 0 0 0 rem($slider-outline-width) var-get($theme, 'thumb-focus-color');\n\n            @if $variant == 'bootstrap' {\n                border-color: var-get($theme, 'thumb-border-focus-color');\n            }\n        }\n    }\n\n    @if $variant == 'fluent' {\n        %igx-slider-thumb--focused {\n            div::after {\n                $focus-outline-offset: rem(2px);\n\n                position: absolute;\n                content: '';\n                pointer-events: none;\n                left: 50%;\n                top: 50%;\n                transform: translate(-50%, -50%);\n                box-shadow: 0 0 0 rem(1px) var-get($theme, 'thumb-border-focus-color');\n                width: calc(rem($thumb-size) + (#{$focus-outline-offset} * 2));\n                height: calc(rem($thumb-size) + (#{$focus-outline-offset} * 2));\n            }\n        }\n    }\n\n    %igx-thumb--disabled {\n        &:focus div::before {\n            box-shadow: none;\n\n            @if $variant == 'fluent' {\n                border-color: var-get($theme, 'thumb-disabled-border-color') !important;\n            }\n        }\n\n        &:focus div::after {\n            transform: scale(0);\n        }\n    }\n\n    %igx-label-display {\n        position: absolute;\n        pointer-events: none;\n        display: flex;\n        top: calc(((#{$thumb-label-height}) + rem(20px)) * -1);\n        height: $thumb-label-height;\n    }\n\n    %igx-slider-thumb-label__container {\n        border-radius: rem(2px);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        white-space: nowrap;\n        margin-inline-start: -50%;\n        padding: 0 rem(2px);\n        background: var-get($theme, 'label-background-color');\n        color: var-get($theme, 'label-text-color');\n        min-width: $thumb-label-width;\n        opacity: 0;\n\n        &::after {\n            content: '';\n            position: absolute;\n            top: 85%;\n            border-inline-start: rem(10px) solid transparent;\n            border-inline-end: rem(10px) solid transparent;\n            border-top: rem(10px) solid var-get($theme, 'label-background-color');\n        }\n    }\n\n    %igx-slider-thumb__dot {\n        position: relative;\n        inset-inline-start: 0;\n        pointer-events: none;\n\n        &::before {\n            position: absolute;\n            content: '';\n            width: rem($thumb-size);\n            height: rem($thumb-size);\n            inset-inline-start: #{rem($thumb-radius) - math.div(rem($thumb-size), 2)};\n            top: calc((#{$thumb-size} - #{$thumb-radius}) * -1);\n            margin-inline-start: calc((#{$thumb-size} - #{$thumb-radius}) * -1);\n            background: var-get($theme, 'thumb-color');\n            border: rem($thumb-border-width) solid var-get($theme, 'thumb-border-color');\n            transition: transform .1s $out-quad, border-radius .1s $out-quad;\n            border-radius: border-radius(rem($thumb-radius));\n        }\n\n        @if $variant == 'material' {\n            &::after {\n                position: absolute;\n                content: '';\n                width: $ripple-size;\n                height: $ripple-size;\n                background: var-get($theme, 'thumb-color');\n                top: calc(50% - #{$ripple-radius});\n                inset-inline-start: calc(50% - #{$ripple-radius});\n                opacity: 0;\n                transform: scale(0);\n                transform-origin: center center;\n                transition: transform .1s $out-quad, opacity .1s $out-quad;\n                border-radius: border-radius(50%);\n                overflow: hidden;\n            }\n        }\n    }\n\n    %igx-slider-thumb__dot--disabled {\n        pointer-events: none;\n\n        &::before {\n            background: var-get($theme, 'disabled-thumb-color');\n            border-color: var-get($theme, 'thumb-disabled-border-color');\n            border-radius: border-radius(rem($thumb-radius));\n        }\n    }\n\n    %igx-slider-thumb__dot--pressed {\n        @if $variant == 'material' {\n            &::after {\n                opacity: .24 !important;\n                transform: scale(1) !important;\n            }\n        }\n    }\n\n    %igx-slider-thumb-label__container--active {\n        opacity: 1;\n    }\n\n    %igx-slider-thumb-label__container--pressed {\n        z-index: 1;\n    }\n}\n\n/// Adds typography styles for the igx-slider component.\n/// Uses the 'caption'\n/// categories from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(ticks-label: 'caption', thumb-label: 'caption')] - The categories from the typographic scale used for type styles.\n@mixin slider-typography(\n    $categories: (\n        ticks-label: 'caption',\n        thumb-label: 'caption',\n    )\n) {\n    $ticks-label: map.get($categories, 'ticks-label');\n    $thumb-label: map.get($categories, 'thumb-label');\n\n    %igx-slider-thumb-label__container {\n        @include type-style($thumb-label)\n    }\n\n    %igx-slider__tick-label {\n        @include type-style($ticks-label)\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'igniteui-theming/sass/animations' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If you specify a background color, but do not specify colors for either the\n/// button or the text, their colors will be set automatically to a contrasting color.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $background [null] - The background color used in the snackbar.\n/// @param {Color} $text-color [null] - The text color used in the snackbar.\n/// @param {Color} $button-color [null] - The button color used in the snackbar.\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the snackbar.\n/// @param {border-radius} $border-radius [null] - The border radius used for the snackbar component.\n/// @requires $light-schema\n/// @example scss Set a custom background color\n///   $my-snackbar-theme: snackbar-theme($background: white);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-snackbar-theme);\n@function snackbar-theme(\n    $schema: $light-schema,\n    $elevations: null,\n\n    $border-radius: null,\n    $background: null,\n    $text-color: null,\n    $button-color: null,\n    $shadow: null\n) {\n    $name: 'igx-snackbar';\n    $snackbar-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $snackbar-schema: map.get($schema, $name);\n    } @else {\n        $snackbar-schema: $schema;\n    }\n\n    $theme: digest-schema($snackbar-schema);\n\n    @if not($button-color) and $background {\n        $button-color: text-contrast($background);\n    }\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @if not($shadow) {\n        $elevation: map.get($snackbar-schema, 'elevation');\n        $shadow: elevation($elevation);\n    }\n\n    @if not($border-radius) {\n        $border-radius: border-radius(map.get($theme, 'border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        border-radius: $border-radius,\n        background: $background,\n        text-color: $text-color,\n        button-color: $button-color,\n        shadow: $shadow\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin snackbar($theme) {\n    @include css-vars($theme);\n    @include fade-in();\n\n    $variant: map.get($theme, 'variant');\n\n    $snackbar-min-height: rem(48px);\n    $snackbar-padding: rem(7px) rem(24px);\n    $snackbar-button-left-margin: rem(24px);\n    $snackbar-button-line-height: rem(16px);\n    $snackbar-button-font-weight: 600;\n\n    %igx-snackbar-display {\n        position: relative;\n        display: flex;\n        flex-flow: row nowrap;\n        align-items: center;\n        justify-content: space-between;\n        min-height: $snackbar-min-height;\n        padding: $snackbar-padding;\n        margin: rem(8px);\n        color: var-get($theme, 'text-color');\n        background: var-get($theme, 'background');\n        backface-visibility: hidden;\n        box-shadow: var-get($theme, 'shadow');\n        border-radius: var-get($theme, 'border-radius');\n        backdrop-filter: blur(8px);\n    }\n\n    %igx-snackbar-message {\n        @include animation('fade-in' .35s ease-out);\n    }\n\n    %igx-snackbar-button {\n        background: transparent;\n        color: var-get($theme, 'button-color');\n        border: 0;\n        line-height: $snackbar-button-line-height;\n        margin-inline-start: $snackbar-button-left-margin;\n        text-transform: uppercase;\n        user-select: none;\n        font-weight: $snackbar-button-font-weight;\n        -webkit-tap-highlight-color: transparent;\n        outline: none;\n        transition: color .2s ease;\n        font-size: inherit;\n        font-family: inherit;\n        cursor: pointer;\n        @include animation('fade-in' .35s ease-out);\n\n        &:hover {\n            color: var-get($theme, 'button-color');\n        }\n    }\n}\n\n/// Adds typography styles for the igx-snackbar component.\n/// Uses the 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.\n@mixin snackbar-typography($categories: (text: 'body-2')) {\n    $text: map.get($categories, 'text');\n\n    %igx-snackbar-message {\n        @include type-style($text);\n    }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../ripple/ripple-theme' as *;\n@use '../ripple/ripple-component' as *;\n@use 'igniteui-theming/sass/animations' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $thumb-on-color [null] - The color of the thumb when the switch is on.\n/// @param {Color} $track-on-color [null] - The color of the track when the switch is on.\n/// @param {Color} $track-on-hover-color [null] - The color of the track when the switch is on and hovered.\n/// @param {Color} $thumb-off-color [null] - The color of the thumb when the switch is off.\n/// @param {Color} $track-off-color [null] - The color of the track when the switch is off.\n/// @param {Color} $thumb-disabled-color [null] - The color of the thumb when the switch is disabled.\n/// @param {Color} $thumb-on-disabled-color [null] - The color of the thumb when the switch is on and disabled.\n/// @param {Color} $track-disabled-color [null] - The color of the track when the switch is disabled.\n/// @param {Color} $track-on-disabled-color [null] - The color of the track when the switch is on and disabled.\n/// @param {Color} $label-color [null] - The color of the switch label\n/// @param {Color} $label-disabled-color [null] - The color of the switch label when the switch is disabled\n/// @param {box-shadow} $resting-shadow [null] - The shadow used for the thumb in resting state of the switch.\n/// @param {box-shadow} $hover-shadow [null] - The shadow used for the thumb in hover state of the switch.\n/// @param {box-shadow} $disabled-shadow [null] - The shadow used for the thumb in disable state of the switch.\n///\n/// @param {border-radius} $border-radius-track [null] - The border radius used for switch track.\n/// @param {border-radius} $border-radius-thumb [null] - The border radius used for switch thumb.\n/// @param {border-radius} $border-radius-ripple [null] - The border radius used for switch ripple.\n/// @param {Color} $border-color [null] - The border color of the switch.\n/// @param {Color} $border-hover-color [null] - The border color of the switch on hover.\n/// @param {Color} $border-disabled-color [null] - The border color of the switch when it is disabled.\n/// @param {Color} $border-on-color [null] - The border color when the switch is on.\n/// @param {Color} $border-on-hover-color [null] - The border color when the switch is on and hovered.\n/// @param {Color} $focus-outline-color [null] - The focus outlined color.\n/// @param {Color} $focus-outline-color-focused [null] - The focus outlined color for focused state.\n/// @param {Color} $focus-fill-color [null] - The focus fill color.\n///\n/// @requires $light-schema\n///\n///\n///\n/// @example scss Set custom track and thumb on colors\n///   $my-switch-theme: switch-theme($thumb-on-color: black, $track-on-color: yellow);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-switch-theme);\n@function switch-theme(\n    $schema: $light-schema,\n\n    $thumb-on-color: null,\n    $track-on-color: null,\n    $track-on-hover-color: null,\n\n    $thumb-off-color: null,\n    $track-off-color: null,\n\n    $track-disabled-color: null,\n    $track-on-disabled-color: null,\n    $thumb-disabled-color: null,\n    $thumb-on-disabled-color: null,\n\n    $label-color: null,\n    $label-disabled-color: null,\n\n    $resting-shadow: null,\n    $hover-shadow: null,\n    $disabled-shadow: null,\n\n    $border-radius-track: null,\n    $border-radius-thumb: null,\n    $border-radius-ripple: null,\n    $border-color: null,\n    $border-hover-color: null,\n    $border-disabled-color: null,\n    $border-on-color: null,\n    $border-on-hover-color: null,\n    $focus-outline-color: null,\n    $focus-outline-color-focused: null,\n    $focus-fill-color: null\n) {\n    $name: 'igx-switch';\n    $switch-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $switch-schema: map.get($schema, $name);\n    } @else {\n        $switch-schema: $schema;\n    }\n\n    $theme: digest-schema($switch-schema);\n\n    @if not($resting-shadow) {\n        $resting-elevation: map.get($switch-schema, 'resting-elevation');\n        $resting-shadow: elevation($resting-elevation);\n    }\n\n    @if not($hover-shadow) {\n        $hover-elevation: map.get($switch-schema, 'hover-elevation');\n        $hover-shadow: elevation($hover-elevation);\n    }\n\n    @if not($disabled-shadow) {\n        $disabled-elevation: map.get($switch-schema, 'disabled-elevation');\n        $disabled-shadow: elevation($disabled-elevation);\n    }\n\n    @if not($border-radius-track) {\n        $border-radius-track: border-radius(map.get($theme, 'border-radius-track'));\n    }\n\n    @if not($border-radius-thumb) {\n        $border-radius-thumb: border-radius(map.get($theme, 'border-radius-thumb'));\n    }\n\n    @if not($border-radius-ripple) {\n        $border-radius-ripple: border-radius(map.get($theme, 'border-radius-ripple'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n\n        thumb-on-color: $thumb-on-color,\n        track-on-color: $track-on-color,\n        track-on-hover-color: $track-on-hover-color,\n\n        thumb-off-color: $thumb-off-color,\n        track-off-color: $track-off-color,\n\n        track-disabled-color: $track-disabled-color,\n        track-on-disabled-color: $track-on-disabled-color,\n        thumb-disabled-color: $thumb-disabled-color,\n        thumb-on-disabled-color: $thumb-on-disabled-color,\n\n        label-color: $label-color,\n        label-disabled-color: $label-disabled-color,\n\n        resting-shadow: $resting-shadow,\n        hover-shadow: $hover-shadow,\n        disabled-shadow: $disabled-shadow,\n\n        border-radius-track: $border-radius-track,\n        border-radius-thumb: $border-radius-thumb,\n        border-radius-ripple: $border-radius-ripple,\n        border-color: $border-color,\n        border-hover-color: $border-hover-color,\n        border-disabled-color: $border-disabled-color,\n        border-on-color: $border-on-color,\n        border-on-hover-color: $border-on-hover-color,\n        focus-outline-color: $focus-outline-color,\n        focus-outline-color-focused: $focus-outline-color-focused,\n        focus-fill-color: $focus-fill-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} ripple\n/// @requires ripple-theme\n@mixin switch($theme) {\n    @include css-vars($theme);\n    @include scale-in-out($start-scale: .9);\n\n    $variant: map.get($theme, variant);\n\n    $switch-width: map.get((\n        material: 36px,\n        fluent: 40px,\n        bootstrap: 32px,\n        indigo-design: 34px\n    ), $variant);\n\n    $switch-height: map.get((\n        material: 14px,\n        fluent: 20px,\n        bootstrap: 16px,\n        indigo-design: 16px\n    ), $variant);\n\n    $switch-thumb-width: map.get((\n        material: 20px,\n        fluent: 12px,\n        bootstrap: 10px,\n        indigo-design: 8px\n    ), $variant);\n\n    $switch-on-offset: map.get((\n        material: 1px,\n        fluent: math.div($switch-thumb-width, 2),\n        bootstrap: 4px,\n        indigo-design: 7px\n    ), $variant);\n\n    $switch-off-offset: map.get((\n        material: -1px,\n        fluent: math.div($switch-thumb-width, 3),\n        bootstrap: math.div($switch-thumb-width, 4),\n        indigo-design: math.div($switch-thumb-width, 3),\n    ), $variant);\n\n    $ripple-display: map.get((\n        material: block,\n        fluent: none,\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $thumb-resting-shadow: map.get((\n        material: var-get($theme, 'resting-shadow'),\n        fluent: none,\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $thumb-hover-shadow: map.get((\n        material: var-get($theme, 'hover-shadow'),\n        fluent: none,\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $thumb-disabled-shadow: map.get((\n        material: var-get($theme, 'disabled-shadow'),\n        fluent: none,\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $switch-thumb-height: $switch-thumb-width;\n\n    $ripple-size: rem(48px);\n    $ripple-radius: math.div($ripple-size, 2);\n\n    $label-margin: rem(8px);\n\n    $input-transition: all .2s $ease-in-out-quad;\n\n    $ripple-theme: ripple-theme(\n        $schema: $light-schema,\n        $color: var-get($theme, 'thumb-on-color')\n    );\n\n    %switch-display {\n        position: relative;\n        display: inline-flex;\n        flex-flow: row nowrap;\n        align-items: center;\n    }\n\n    %switch-input {\n        @include hide-default();\n    }\n\n    %switch-display--disabled {\n        user-select: none;\n        pointer-events: none;\n        cursor: initial;\n    }\n\n    %switch-composite {\n        display: flex;\n        align-items: center;\n        width: rem($switch-width);\n        height: rem($switch-height);\n        border: rem(1px) solid var-get($theme, 'border-color');\n        border-radius: var-get($theme, 'border-radius-track');\n        background: var-get($theme, 'track-off-color');\n        cursor: pointer;\n        user-select: none;\n        transition: $input-transition;\n\n        @if $variant == 'indigo-design' {\n            border: rem(2px) solid var-get($theme, 'border-color');\n        }\n\n        @if $variant != 'bootstrap' {\n            &:hover,\n            &:focus {\n                border-color: var-get($theme, 'border-hover-color');\n            }\n        }\n\n        @if $variant == 'fluent' {\n            &:hover {\n                %switch-composite-thumb {\n                    background: var-get($theme, 'border-hover-color');\n                }\n\n                %switch-composite-thumb--x {\n                    background: var-get($theme, 'thumb-on-color');\n                }\n            }\n        }\n    }\n\n    %switch-composite--x {\n        background: var-get($theme, 'track-on-color');\n        border-color: var-get($theme, 'border-on-color');\n\n        &:hover,\n        &:focus {\n            border-color: var-get($theme, 'border-on-hover-color');\n        }\n\n        @if $variant == 'fluent' {\n            &:hover {\n                background: var-get($theme, 'track-on-hover-color');\n            }\n        }\n    }\n\n    %switch-composite--disabled {\n        background: var-get($theme, 'track-disabled-color');\n        border-color: var-get($theme, 'border-disabled-color');\n    }\n\n    %switch-composite-thumb {\n        position: relative;\n        display: block;\n        width: rem($switch-thumb-width);\n        height: $switch-thumb-height;\n        min-width: rem($switch-thumb-width);\n        border-radius: var-get($theme, 'border-radius-thumb');\n        background: var-get($theme, 'thumb-off-color');\n        box-shadow: $thumb-resting-shadow;\n        transition: $input-transition;\n        transform: translateX(#{rem($switch-off-offset)});\n\n        [dir='rtl'] & {\n            transform: translateX(#{rem(-1 * $switch-off-offset)});\n        }\n\n        @if $variant != 'bootstrap' {\n            &:hover {\n                box-shadow: $thumb-hover-shadow;\n            }\n        }\n    }\n\n    %switch-composite-thumb--x {\n        background: var-get($theme, 'thumb-on-color');\n        transform: translateX(#{rem($switch-width) - rem($switch-thumb-width) - rem($switch-on-offset)});\n\n        [dir='rtl'] & {\n            transform: translateX(-#{rem($switch-width) - rem($switch-thumb-width) - rem($switch-on-offset)});\n        }\n    }\n\n    %switch-composite-thumb--disabled {\n        background: var-get($theme, 'thumb-disabled-color');\n        box-shadow: $thumb-disabled-shadow;\n    }\n\n    %switch-ripple {\n        @include ripple($ripple-theme);\n        @include css-vars($ripple-theme);\n        display: $ripple-display;\n        position: absolute;\n        top: calc(50% - #{$ripple-radius});\n        inset-inline-start: calc(50% - #{$ripple-radius});\n        width: $ripple-size;\n        height: $ripple-size;\n        overflow: hidden;\n        pointer-events: none;\n        filter: opacity(1);\n        border-radius: var-get($theme, 'border-radius-ripple');\n    }\n\n    %igx-switch--focused {\n        @if $variant == 'fluent' {\n            %switch-composite {\n                position: relative;\n                $focus-outline-offset-top: rem(2px);\n                $focus-outline-offset-left: rem(2px);\n\n                &::after {\n                    content: '';\n                    position: absolute;\n                    top: -$focus-outline-offset-top;\n                    inset-inline-start: -$focus-outline-offset-left;\n                    box-shadow: 0 0 0 rem(1px) var-get($theme, 'focus-outline-color');\n                    width: calc(100% + (#{$focus-outline-offset-left} * 2));\n                    height: calc(100% + (#{$focus-outline-offset-top} * 2));\n                }\n            }\n        }\n\n        @if $variant == 'bootstrap' {\n            %switch-composite {\n                border-color: var-get($theme, 'focus-fill-color');\n                box-shadow: 0 0 0 rem(4px) var-get($theme, 'focus-outline-color');\n            }\n\n            %switch-composite-thumb {\n                background: var-get($theme, 'focus-fill-color');\n            }\n        }\n\n        @if $variant == 'indigo-design' {\n            %switch-composite {\n                border-radius: var-get($theme, 'border-radius-thumb');\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color');\n            }\n        }\n    }\n\n    %igx-switch--focused-checked {\n        @if $variant == 'bootstrap' {\n            %switch-composite {\n                border-color: var-get($theme, 'border-on-color');\n            }\n\n            %switch-composite-thumb--x {\n                background: var-get($theme, 'thumb-on-color');\n            }\n        }\n\n        @if $variant == 'indigo-design' {\n            %switch-composite {\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color-focused');\n            }\n        }\n    }\n\n    %igx-switch--disabled-checked {\n        @if $variant != 'indigo-design' {\n            %switch-composite--x {\n                background: var-get($theme, 'track-on-disabled-color');\n            }\n\n            %switch-composite-thumb--x {\n                background: var-get($theme, 'thumb-on-disabled-color');\n            }\n        }\n\n        @if $variant == 'bootstrap' or $variant == 'fluent'{\n            %switch-composite--x {\n                border-color: var-get($theme, 'track-on-disabled-color');\n            }\n        }\n    }\n\n    %switch-ripple--focused {\n        background: var-get($theme, 'track-off-color');\n        transition: background .2s $ease-out-quad;\n        opacity: .12;\n    }\n\n    %switch-ripple--focused-checked {\n        background: var-get($theme, 'thumb-on-color');\n    }\n\n    %switch-label {\n        display: inline-block;\n        color: var-get($theme, 'label-color');\n        cursor: pointer;\n        user-select: none;\n        word-wrap: break-all;\n\n        &:empty {\n            margin: 0;\n        }\n    }\n\n    %switch-label--before,\n    %switch-label--after {\n        &:empty {\n            margin: 0;\n        }\n    }\n\n    %switch-label--after {\n        margin-inline-start: $label-margin;\n    }\n\n    %switch-label--before {\n        order: -1;\n        margin-inline-end: $label-margin;\n    }\n\n    %switch-label--disabled {\n        color: var-get($theme, 'label-disabled-color');\n    }\n\n    %switch-ripple--hover {\n        &::after {\n            position: absolute;\n            content: '';\n            opacity: .06;\n            inset: 0;\n        }\n    }\n\n    %switch-ripple--hover-unchecked {\n        &::after {\n            background: var-get($theme, 'track-off-color');\n        }\n    }\n\n    %switch-ripple--hover-checked {\n        &::after {\n            background: var-get($theme, 'thumb-on-color');\n        }\n    }\n\n    %switch-ripple--pressed {\n        &::after {\n            opacity: .12;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-checkbox component.\n/// Uses the 'subtitle-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n@mixin switch-typography(\n    $categories: (label: 'subtitle-1')\n) {\n    $label: map.get($categories, 'label');\n\n    %switch-label {\n        @include type-style($label) {\n            margin-top: 0;\n            margin-bottom: 0;\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../ripple/ripple-theme' as *;\n@use '../ripple/ripple-component' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified,\n/// the idle item color will be assigned automatically to a contrasting color.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $item-text-color [null] - The color used for the tab text color.\n/// @param {Color} $item-background [null] - The background color used for the tabs header.\n/// @param {Color} $item-hover-background [null] - The background used for the tabs on hover.\n/// @param {Color} $item-hover-color [null] - The text color used for the tabs on hover.\n/// @param {Color} $item-icon-color [null] - The color used for the tab icon.\n/// @param {Color} $item-active-icon-color [null] - The color used for the active tab icon.\n/// @param {Color} $item-hover-icon-color [null] - The color used for the tab icon on hover.\n/// @param {Color} $item-disabled-icon-color [null] - The color used for the disabled tab icon.\n/// @param {Color} $item-active-color [null] - The color used for the active tabs text.\n/// @param {Color} $item-active-background [null] - The color used for the active/focused tab background.\n/// @param {Color} $item-disabled-color [null] - The color used for the disabled tabs text.\n/// @param {Color} $indicator-color [null] - The color used for the active tab indicator.\n/// @param {Color} $button-color [null] - The color used for the button icon/text color.\n/// @param {Color} $button-hover-color [null] - The color used for the button icon/text color on hover.\n/// @param {Color} $button-disabled-color [null] - The color used for the disabled button icon/text.\n/// @param {Color} $button-background [null] - The color used for the button background.\n/// @param {Color} $button-hover-background [null] - The color used for the button background on hover.\n/// @param {border-radius} $border-radius [null] - The border radius for the tabs.\n/// @param {Color} $border-color [null] - The border color of the tabs.\n/// @param {Color} $border-color--hover [null] - The border color of the tabs on hover.\n/// @param {Color} $tab-ripple-color [null] - The color used for the button background.\n/// @param {Color} $button-ripple-color [null] - The color used for the button background on hover.\n/// @requires $light-schema\n/// @example scss Set a custom background color\n///   $my-tabs-theme: tabs-theme(\n///      $item-background: orange\n///    );\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-tabs-theme);\n@function tabs-theme(\n    $schema: $light-schema,\n    $item-text-color: null,\n    $item-background: null,\n    $item-hover-background: null,\n    $item-hover-color: null,\n    $item-icon-color: null,\n    $item-active-icon-color: null,\n    $item-hover-icon-color: null,\n    $item-disabled-icon-color: null,\n    $item-active-color: null,\n    $item-active-background: null,\n    $item-disabled-color: null,\n    $indicator-color: null,\n    $button-color: null,\n    $button-background: null,\n    $button-hover-background: null,\n    $button-hover-color: null,\n    $button-disabled-color: null,\n    $tab-ripple-color: null,\n    $button-ripple-color: null,\n    $border-radius: null,\n    $border-color: null,\n    $border-color--hover: null,\n) {\n    $name: 'igx-tabs';\n    $tabs-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $tabs-schema: map.get($schema, $name);\n    } @else {\n        $tabs-schema: $schema;\n    }\n\n    $theme: digest-schema($tabs-schema);\n\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: $variant == 'boostrap';\n\n    @if not($item-text-color) and $item-background {\n        @if meta.type-of($item-background) == 'color' {\n            $item-text-color: rgba(text-contrast($item-background), .54);\n        }\n    }\n\n    @if not($item-hover-color) and $item-background {\n        $item-hover-color: text-contrast($item-background);\n    }\n\n    @if not($item-hover-color) and $item-hover-background {\n        $item-hover-color: text-contrast($item-hover-background);\n    }\n\n    @if not($item-active-icon-color) and $item-active-background {\n        $item-active-icon-color: text-contrast($item-active-background);\n    }\n\n    @if not($item-active-icon-color) and $item-background {\n        $item-active-icon-color: text-contrast($item-background);\n    }\n\n    @if not($indicator-color) and $item-background {\n        $indicator-color: text-contrast($item-background);\n    }\n\n    @if not($item-active-color) and $item-active-icon-color {\n        $item-active-color: $item-active-icon-color;\n    }\n\n    // Button\n    @if not($button-color) and $item-background {\n        $button-color: text-contrast($item-background);\n    }\n\n    @if not($button-color) and $button-background {\n        $button-color: text-contrast($button-background);\n    }\n\n    @if not($button-color) and $item-background {\n        $button-background: transparent;\n    }\n\n    @if not($button-hover-color) and $button-hover-background {\n        $button-hover-color: text-contrast($button-hover-background);\n    }\n\n    @if not($button-hover-background) and $item-background {\n        $button-hover-color: text-contrast($item-background);\n    }\n\n    @if not($button-background) and $item-background {\n        @if meta.type-of($item-background) == 'color' and lightness($item-background) > 50 {\n            $button-background: transparent;\n        } @else {\n            $button-background: rgba(255, 255, 255 , .1);\n        }\n    }\n\n    @if not($button-hover-background) and $item-background {\n        @if meta.type-of($item-background) == 'color' and lightness($item-background) > 50 {\n            $button-hover-background: rgba(0, 0, 0, .05);\n        } @else {\n            $button-hover-background: rgba(255, 255, 255 , .14);\n        }\n    }\n\n    @if not($button-ripple-color) and $button-background {\n        @if meta.type-of($item-background) == 'color' and lightness($item-background) > 50 {\n            $button-ripple-color: rgba(0, 0, 0, .4);\n        } @else {\n            $button-ripple-color: rgba(255, 255, 255, .4);\n        }\n    }\n    // Button end\n\n    @if not($tab-ripple-color) and $item-active-background {\n        $tab-ripple-color: text-contrast($item-active-background);\n    }\n\n    @if not($tab-ripple-color) and $item-background {\n        $tab-ripple-color: text-contrast($item-background);\n    }\n\n    @if not($border-radius) {\n        $border-radius: border-radius(map.get($theme, 'border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        item-text-color: $item-text-color,\n        item-background: $item-background,\n        item-hover-color: $item-hover-color,\n        item-hover-background: $item-hover-background,\n        item-icon-color: $item-icon-color,\n        item-active-icon-color: $item-active-icon-color,\n        item-hover-icon-color: $item-hover-icon-color,\n        item-disabled-icon-color: $item-disabled-icon-color,\n        item-active-color: $item-active-color,\n        item-active-background: $item-active-background,\n        item-disabled-color: $item-disabled-color,\n        indicator-color: $indicator-color,\n        button-color: $button-color,\n        button-background: $button-background,\n        button-hover-background:$button-hover-background,\n        button-hover-color:$button-hover-color,\n        button-disabled-color:$button-disabled-color,\n        tab-ripple-color: $tab-ripple-color,\n        button-ripple-color: $button-ripple-color,\n        border-color: $border-color,\n        border-radius: $border-radius,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires ripple-theme\n/// @requires {mixin} ripple\n@mixin tabs($theme) {\n    @include css-vars($theme);\n\n    $variant: map.get($theme, 'variant');\n    $not-bootstrap-theme: $variant != 'bootstrap';\n    $bootstrap-theme: $variant == 'bootstrap';\n    $indigo-theme: $variant == 'indigo-design';\n\n    $item-min-width: rem(90px);\n    $item-max-width: rem(360px);\n\n    $tabs-animation-function: cubic-bezier(.35, 0, .25, 1);\n\n    $item-padding: rem(11px) rem(16px);\n\n    $tabs-ripple-theme: ripple-theme(\n        $schema: $light-schema,\n        $color: var-get($theme, 'tab-ripple-color')\n    );\n    $button-ripple-theme: ripple-theme(\n        $schema: $light-schema,\n        $color: var-get($theme, 'button-ripple-color')\n    );\n\n    $icon-space: (\n        comfortable: rem(12px),\n        cosy: rem(8px),\n        compact: rem(4px)\n    );\n\n    %tabs-header,\n    %tabs-header-button,\n    %tabs-header-item-inner,\n    %tabs-header-content {\n        display: flex;\n    }\n\n    %tabs-display {\n        display: flex;\n        flex-direction: column;\n        overflow: hidden;\n    }\n\n    %tabs-header {\n        overflow: hidden;\n        flex: 0 0 auto;\n        background: var-get($theme, 'item-background');\n        min-height: rem(42px);\n        z-index: 1;\n    }\n\n    %tabs-header-content {\n        flex: 1 1 auto;\n        overflow: hidden;\n        scroll-behavior: smooth;\n    }\n\n    %tabs-header-wrapper {\n        position: relative;\n        flex-grow: 1;\n\n        @if $bootstrap-theme {\n            &::after {\n                content: '';\n                position: absolute;\n                bottom: 0;\n                inset-inline-start: 0;\n                width: 100%;\n                height: rem(1px);\n                background: var-get($theme, 'border-color');\n                z-index: 0;\n            }\n        }\n    }\n\n    %tabs-header-scroll {\n        display: flex;\n        height: 100%;\n    }\n\n    %tabs-header-button {\n        align-items: center;\n        justify-content: center;\n        z-index: 1;\n        border: none;\n        padding: 0;\n        min-width: rem(48px);\n        width: rem(48px);\n        cursor: pointer;\n        position: relative;\n        background: var-get($theme, 'button-background');\n        color: var-get($theme, 'button-color');\n        outline: 0;\n\n        &:hover {\n            background: var-get($theme, 'button-hover-background');\n            color: var-get($theme, 'button-hover-color');\n        }\n\n        &:focus {\n            outline: 0;\n            background: var-get($theme, 'button-hover-background');\n        }\n\n        &::-moz-focus-inner {\n            // remove focus dotted border in firefox\n            border: 0;\n        }\n\n        &:disabled {\n            color: var-get($theme, 'button-disabled-color');\n        }\n\n        &--none {\n            display: none;\n        }\n\n\n        @include ripple($button-ripple-theme);\n        @include css-vars($button-ripple-theme);\n\n        [dir='rtl'] & {\n            transform: scaleX(-1);\n        }\n    }\n\n    %tabs-header-item {\n        > * {\n            margin-inline-start: map.get($icon-space, 'comfortable');\n\n            &:first-child {\n                margin-inline-start: 0;\n            }\n        }\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        min-width: $item-min-width;\n        max-width: $item-max-width;\n        word-wrap: break-word;\n        // Flex basis & shrink are Needed for IE11\n        flex-basis: auto;\n        flex-shrink: 0;\n        padding: $item-padding;\n        overflow: hidden;\n        cursor: pointer;\n        position: relative;\n        user-select: none;\n        background: var-get($theme, 'item-background');\n        color: var-get($theme, 'item-text-color');\n        outline: 0;\n\n        igx-icon {\n            color: var-get($theme, 'item-icon-color');\n        }\n\n        @if $bootstrap-theme {\n            border: rem(1px) solid transparent;\n            border-start-start-radius: var-get($theme, 'border-radius');\n            border-start-end-radius: var-get($theme, 'border-radius');\n        }\n\n        @if $indigo-theme {\n            border-bottom: rem(1px) solid var-get($theme, 'border-color');\n        }\n\n        &::-moz-focus-inner {\n            border: 0;\n        }\n\n        &:focus {\n            background: var-get($theme, 'item-active-background');\n            color: var-get($theme, 'item-hover-color');\n            border-bottom-color: transparent;\n        }\n\n        &:hover {\n            background: var-get($theme, 'item-hover-background');\n            color: var-get($theme, 'item-hover-color');\n\n            @if $bootstrap-theme {\n                box-shadow: inset 0 0 0 rem(1px) var-get($theme, 'border-color--hover');\n            }\n        }\n\n        &:hover,\n        &:focus {\n            igx-icon {\n                color: var-get($theme, 'item-hover-icon-color');\n            }\n        }\n\n        @if $bootstrap-theme {\n            border-start-start-radius: border-radius(var-get($theme, 'border-radius'));\n            border-start-end-radius: border-radius(var-get($theme, 'border-radius'));\n        }\n\n        @if $not-bootstrap-theme {\n            transition: all .3s $tabs-animation-function;\n            border: rem(1px) solid var-get($theme, 'border-color');\n\n            &:hover,\n            &:focus {\n                border: rem(1px) solid var-get($theme, 'border-color--hover');\n            }\n        }\n\n        @if $indigo-theme {\n            border-top: transparent;\n            border-inline: transparent;\n\n            &:hover,\n            &:focus {\n                border-top: transparent;\n                border-inline: transparent;\n            }\n        }\n\n        @include ripple($tabs-ripple-theme);\n        @include css-vars($tabs-ripple-theme);\n    }\n\n    %tabs-header-item--selected {\n        outline: 0;\n        color: var-get($theme, 'item-active-color');\n\n        &:hover,\n        &:focus {\n            background: var-get($theme, 'item-active-background');\n            color: var-get($theme, 'item-active-color');\n\n            igx-icon {\n                color: var-get($theme, 'item-active-icon-color');\n            }\n        }\n\n        igx-icon {\n            color: var-get($theme, 'item-active-icon-color');\n        }\n\n        @if $bootstrap-theme {\n            background: var-get($theme, 'item-active-background');\n            position: relative;\n            box-shadow: inset 0 0 0 rem(1px) var-get($theme, 'border-color');\n\n            &::after {\n                content: '';\n                position: absolute;\n                bottom: 0;\n                inset-inline-start: 0;\n                width: 100%;\n                height: rem(1px);\n                background: var-get($theme, 'item-active-background');\n                z-index: 1;\n            }\n\n            &:hover {\n                box-shadow: inset 0 0 0 rem(1px) var-get($theme, 'border-color');\n            }\n        }\n    }\n\n    %tabs-header-item:focus,\n    %tabs-header-item--selected:focus {\n        @if $bootstrap-theme {\n            border: none;\n            box-shadow: inset 0 0 0 rem(2px) var-get($theme, 'item-hover-color');\n            border-radius: rem(4px);\n            z-index: 1;\n\n            &::after {\n                display: none;\n            }\n        }\n    }\n\n    %tabs-header-item--disabled {\n        outline: 0;\n        color: var-get($theme, 'item-disabled-color');\n        cursor: default;\n        pointer-events: none;\n\n        igx-icon {\n            color: var-get($theme, 'item-disabled-icon-color');\n        }\n    }\n\n    %tabs-header-item-inner {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n        text-align: center;\n\n        > [igxtabheaderlabel] {\n            @include line-clamp(2, true, true);\n        }\n\n        > [igxtabheadericon] {\n            margin-bottom: rem(8px);\n\n            &:last-child {\n                margin-bottom: 0;\n            }\n        }\n    }\n\n    %tabs-header-active-indicator {\n        position: absolute;\n        bottom: 0;\n        // We need to explicitly set the default for IE 11\n        left: 0;\n        transform: translateX(0);\n        height: rem(2px);\n        min-width: $item-min-width;\n        background: var-get($theme, 'indicator-color');\n        transition: transform .3s $tabs-animation-function, width .2s $tabs-animation-function;\n        @if $bootstrap-theme {\n            display: none;\n        }\n    }\n\n    %tabs-panels {\n        position: relative;\n        overflow: hidden;\n        display: flex;\n        flex-direction: column;\n        flex: 1 1 auto;\n    }\n\n    %tabs-panel {\n        position: absolute;\n        inset: 0;\n        overflow-x: hidden;\n        overflow-y: auto;\n        flex: 1 1 auto;\n\n        &::-moz-focus-inner {\n            // remove focus dotted border in firefox\n            border: 0;\n        }\n\n        &:focus {\n            outline-width: 0;\n        }\n\n        &[tabindex='0'] {\n            position: relative;\n        }\n    }\n\n    %tabs-header-scroll--start {\n        justify-content: flex-start;\n    }\n\n    %tabs-header-scroll--end {\n        justify-content: flex-end;\n        min-width: max-content;\n    }\n\n    %tabs-header-scroll--center {\n        justify-content: center;\n        min-width: max-content;\n    }\n\n    %tabs-header-scroll--justify {\n        %tabs-header-item {\n            flex-basis: 0;\n            flex-grow: 1;\n            max-width: 100%;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-tabs component.\n/// Uses the 'subtitle-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(label: 'button')] - The categories from the typographic scale used for type styles.\n@mixin tabs-typography($categories: (label: 'button')) {\n    $label: map.get($categories, 'label');\n\n    %tabs-header-item-inner > [igxtabheaderlabel]{\n        @include type-style($label) {\n            margin-top: 0;\n            margin-bottom: 0;\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n/// Does ___not___ apply for disabled state colors.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $text-color [null] - The text color of a open time picker.\n/// @param {Color} $hover-text-color [null] - The hover text color of a open time picker.\n/// @param {Color} $selected-text-color [null] -  The text color of a selected item in time picker.\n/// @param {Color} $active-item-background [null] - The background color for current item in focused column inside the time picker.\n/// @param {Color} $disabled-text-color [null] - The text color for disabled values.\n/// @param {Color} $disabled-item-background [null] - The background color for disabled values .\n/// @param {Color} $header-background [null] - The header background color of a time picker.\n/// @param {Color} $header-hour-text-color [null] - The header hour text color of a time picker.\n/// @param {Color} $header-time-period-color [null] - The header AM/PM text color of a time picker.\n/// @param {Color} $background-color [null] - The time-picker panel background color.\n/// @param {box-shadow} $modal-shadow [null] - The custom shadow to be used for the time picker in modal mode.\n/// @param {box-shadow} $dropdown-shadow [null] - The custom shadow to be used for the time picker in dropdown mode.\n/// @param {border-radius} $border-radius [null] - The border radius used for the outline of the picker.\n/// @param {border-radius} $active-item-border-radius [null] - The border radius used for the outline of the currently active item (hours, minutes, AM/PM).\n/// @requires $light-schema\n/// @example scss Change the background and text colors in  time picker\n///   $my-time-picker-theme: time-picker-theme(\n///     $text-color: white,\n///     $background-color: black\n///   );\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-time-picker-theme);\n@function time-picker-theme(\n    $schema: $light-schema,\n    $elevations: null,\n\n    $border-radius: null,\n    $active-item-border-radius: null,\n\n    $text-color: null,\n    $hover-text-color: null,\n    $selected-text-color: null,\n    $active-item-background: null,\n    $disabled-text-color: null,\n    $disabled-item-background: null,\n    $header-background: null,\n    $header-hour-text-color: null,\n    $header-time-period-color: null,\n    $background-color: null,\n    $modal-shadow: null,\n    $dropdown-shadow: null\n) {\n    $name: 'igx-time-picker';\n    $selector: '.igx-time-picker';\n\n    $time-picker-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $time-picker-schema: map.get($schema, $name);\n    } @else {\n        $time-picker-schema: $schema;\n    }\n\n    $theme: digest-schema($time-picker-schema);\n\n    @if not($text-color) and $background-color {\n        $text-color: text-contrast($background-color);\n    }\n\n    @if not($header-hour-text-color) and $header-background {\n        $header-hour-text-color: text-contrast($header-background);\n    }\n\n    @if not($header-time-period-color) and $header-background {\n        @if meta.type-of($header-background) == 'color' {\n            $header-time-period-color: rgba(text-contrast($header-background), .8);\n        }\n    }\n\n    @if not($selected-text-color) and $active-item-background {\n        $selected-text-color: text-contrast($active-item-background);\n    }\n\n    @if not($active-item-background) and $background-color {\n        @if meta.type-of($background-color) == 'color' {\n            $active-item-background: rgba(text-contrast($background-color), .12);\n        }\n    }\n\n    @if not($disabled-text-color) and $disabled-item-background {\n        @if meta.type-of($disabled-item-background) == 'color' {\n            $disabled-text-color: rgba(text-contrast($disabled-item-background), .6);\n        }\n    }\n\n    @if not($modal-shadow) {\n        $elevation: map.get($time-picker-schema, 'modal-elevation');\n        $modal-shadow: elevation($elevation);\n    }\n\n    @if not($dropdown-shadow) {\n        $elevation: map.get($time-picker-schema, 'dropdown-elevation');\n        $dropdown-shadow: elevation($elevation);\n    }\n\n    @if not($border-radius) {\n        $border-radius: border-radius(map.get($theme, 'border-radius'));\n    }\n\n    @if not($active-item-border-radius) {\n        $active-item-border-radius: border-radius(map.get($theme, 'active-item-border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        text-color: $text-color,\n        hover-text-color: $hover-text-color,\n        selected-text-color: $selected-text-color,\n        active-item-background: $active-item-background,\n        disabled-text-color: $disabled-text-color,\n        disabled-item-background: $disabled-item-background,\n        header-background: $header-background,\n        header-hour-text-color: $header-hour-text-color,\n        header-time-period-color: $header-time-period-color,\n        background-color: $background-color,\n        modal-shadow: $modal-shadow,\n        dropdown-shadow: $dropdown-shadow,\n        border-radius: $border-radius,\n        active-item-border-radius: $active-item-border-radius,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin time-picker($theme) {\n    @include css-vars($theme);\n\n    $variant: map.get($theme, 'variant');\n    $not-bootstrap-theme: $variant != 'bootstrap';\n\n    $vertical-header-width: rem(168px);\n\n    $picker-buttons-padding: map.get((\n        material: rem(8px),\n        fluent: rem(8px),\n        bootstrap: rem(16px)\n    ), $variant);\n\n    %time-picker-display {\n        display: flex;\n        flex-flow: column nowrap;\n        max-width: rem(340px);\n        min-width: rem(320px);\n        border-radius: var-get($theme, 'border-radius');\n        box-shadow: var-get($theme, 'modal-shadow');\n        overflow: hidden;\n    }\n\n    %time-picker-display--vertical {\n        flex-flow: row nowrap;\n        min-width: rem(540px);\n    }\n\n    %time-picker__main {\n        background: var-get($theme, 'background-color');\n        flex: 1 1 auto;\n    }\n\n    %time-picker--dropdown {\n        min-width: rem(200px);\n        box-shadow: var-get($theme, 'dropdown-shadow');\n    }\n\n    %time-picker__body {\n        display: flex;\n        padding: rem(10px) 0;\n        justify-content: center;\n    }\n\n    %time-picker-content {\n        width: 100%;\n        padding: 0;\n        color: inherit;\n        line-height: initial;\n    }\n\n    %time-picker-dialog-title {\n        display: none;\n    }\n\n    %time-picker-dialog-actions {\n        margin: 0;\n    }\n\n    %time-picker__hourList {\n        text-align: end;\n\n        [dir='rtl'] & {\n            order: 2;\n        }\n    }\n\n    %time-picker__minuteList {\n        text-align: center;\n\n        [dir='rtl'] & {\n            order: 1;\n        }\n    }\n\n    %time-picker__secondsList {\n        text-align: center;\n    }\n\n    %time-picker__ampmList {\n        display: flex;\n        flex-direction: column;\n        padding-top: rem(48px);\n\n        [dir='rtl'] & {\n            order: 3;\n        }\n    }\n\n    %time-picker__column {\n        max-width: rem(64px);\n        height: rem(325px);\n        padding: 0;\n        cursor: pointer;\n        display: flex;\n        flex-flow: column nowrap;\n        justify-content: space-between;\n        align-items: center;\n        color: var-get($theme, 'text-color');\n        overflow: hidden;\n\n        &:focus,\n        &:active {\n            outline: none;\n        }\n    }\n\n    %time-picker__item {\n        width: rem(54px);\n        padding: rem(5px) rem(10px);\n        border-radius: var-get($theme, 'active-item-border-radius');\n        height: rem(48px);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        &:focus,\n        &:active {\n            outline: none;\n        }\n\n        &:hover {\n            color: var-get($theme, 'hover-text-color');\n        }\n    }\n\n    %time-picker__item--selected {\n        font-size: rem(24px);\n        color: var-get($theme, 'selected-text-color');\n    }\n\n    %time-picker__item--active {\n        background: var-get($theme, 'active-item-background');\n    }\n\n    %time-picker__item--disabled {\n        color: var-get($theme, 'disabled-text-color');\n        background: var-get($theme, 'disabled-item-background');\n        pointer-events: none;\n    }\n\n    %time-picker__header {\n        background: var-get($theme, 'header-background');\n        padding: rem(24px) rem(16px);\n    }\n\n    %time-picker__header-ampm {\n        color: var-get($theme, 'header-time-period-color');\n    }\n\n    %time-picker__header--vertical {\n        width: $vertical-header-width;\n    }\n\n    %time-picker__header-hour {\n        display: flex;\n        color: var-get($theme, 'header-hour-text-color');\n\n        [dir='rtl'] & {\n            flex-direction: row-reverse;\n            justify-content: flex-end;\n        }\n    }\n\n    %time-picker__header-ampm,\n    %time-picker__header-hour {\n        margin: 0;\n    }\n\n    %time-picker__buttons {\n        display: flex;\n        justify-content: flex-end;\n        @if $not-bootstrap-theme {\n            height: rem(52px);\n        }\n\n        padding: $picker-buttons-padding;\n\n        [igxButton] + [igxButton] {\n            margin-inline-start: rem(8px);\n        }\n    }\n}\n\n/// Adds typography styles for the igx-calendar component.\n/// Uses the 'h4', 'subtitle-1' and 'body-1'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(header-time-period: 'subtitle-1', header-hour: 'h4', content: 'body-1')] - The categories from the typographic scale used for type styles.\n@mixin time-picker-typography($categories: (\n    header-time-period: 'subtitle-1',\n    header-hour: 'h4',\n    content: 'body-1')\n) {\n    $time-period: map.get($categories, 'header-time-period');\n    $header-hour: map.get($categories, 'header-hour');\n    $content: map.get($categories, 'content');\n\n    %time-picker__header-ampm {\n        @include type-style($time-period);\n    }\n\n    %time-picker__header-hour {\n        @include type-style($header-hour) {\n            margin-top: 0;\n        }\n    }\n\n    %time-picker__column {\n        @include type-style($content) {\n            margin-top: 0;\n            margin-bottom: 0;\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $step-background [null] - The background of the step header.\n/// @param {Color} $step-hover-background [null] - The background of the step header on hover.\n/// @param {Color} $step-focus-background [null] - The background of the step header on focus.\n/// @param {Color} $title-color [null] - The color of the step title.\n/// @param {Color} $title-hover-color [null] - The color of the step title on hover.\n/// @param {Color} $title-focus-color [null] - The color of the step title on focus.\n/// @param {Color} $subtitle-color [null] - The color of the step subtitle.\n/// @param {Color} $subtitle-hover-color [null] - The color of the step subtitle on hover.\n/// @param {Color} $subtitle-focus-color [null] - The color of the step subtitle on focus.\n/// @param {Color} $indicator-color [null] - The text color of the step indicator.\n/// @param {Color} $indicator-background [null] - The background color of the step indicator.\n/// @param {Color} $indicator-outline [null] - The outline color of the step indicator.\n///\n/// @param {Color} $invalid-step-background [null] - The background of the invalid step header.\n/// @param {Color} $invalid-step-hover-background [null] - The background of the invalid step header on hover.\n/// @param {Color} $invalid-step-focus-background [null] - The background of the invalid step header on focus.\n/// @param {Color} $invalid-title-color [null] - The color of the invalid step title.\n/// @param {Color} $invalid-title-hover-color [null] - The color of the invalid step title on hover.\n/// @param {Color} $invalid-title-focus-color [null] - The color of the invalid step title on focus.\n/// @param {Color} $invalid-subtitle-color [null] - The color of the invalid step subtitle.\n/// @param {Color} $invalid-subtitle-hover-color [null] - The color of the invalid step subtitle on hover.\n/// @param {Color} $invalid-subtitle-focus-color [null] - The color of the invalid step subtitle on focus.\n/// @param {Color} $invalid-indicator-color [null] - The color of the invalid step indicator.\n/// @param {Color} $invalid-indicator-background [null] - The background color of the invalid step indicator.\n/// @param {Color} $invalid-indicator-outline [null] - The outline color of the invalid step indicator.\n///\n/// @param {Color} $current-step-background [null] - The background of the current step header.\n/// @param {Color} $current-step-hover-background [null] - The background of the current step header on hover.\n/// @param {Color} $current-step-focus-background [null] - The background of the current step header on focus.\n/// @param {Color} $current-title-color [null] - The color of the current step title.\n/// @param {Color} $current-title-hover-color [null] - The color of the current step title on hover.\n/// @param {Color} $current-title-focus-color [null] - The color of the current step title on focus.\n/// @param {Color} $current-subtitle-color [null] - The color of the current step subtitle.\n/// @param {Color} $current-subtitle-hover-color [null] - The color of the current step subtitle on hover.\n/// @param {Color} $current-subtitle-focus-color [null] - The color of the current step subtitle on focus.\n/// @param {Color} $current-indicator-color [null] - The color of the current step indicator.\n/// @param {Color} $current-indicator-background [null] - The background color of the current step indicator.\n/// @param {Color} $current-indicator-outline [null] - The outline color of the current step indicator.\n///\n/// @param {Color} $complete-step-background [null] - The background of the complete step header.\n/// @param {Color} $complete-step-hover-background [null] - The background of the complete step header on hover.\n/// @param {Color} $complete-step-focus-background [null] - The background of the complete step header on focus.\n/// @param {Color} $complete-title-color [null] - The color of the complete step title.\n/// @param {Color} $complete-title-hover-color [null] - The color of the complete step title on hover.\n/// @param {Color} $complete-title-focus-color [null] - The color of the complete step title on focus.\n/// @param {Color} $complete-subtitle-color [null] - The color of the complete step subtitle.\n/// @param {Color} $complete-subtitle-hover-color [null] - The color of the complete step subtitle on hover.\n/// @param {Color} $complete-subtitle-focus-color [null] - The color of the complete step subtitle on focus.\n/// @param {Color} $complete-indicator-color [null] - The color of the completed step indicator.\n/// @param {Color} $complete-indicator-background [null] - The background color of the completed step indicator.\n/// @param {Color} $complete-indicator-outline [null] - The outline color of the completed step indicator.\n///\n/// @param {Color} $disabled-title-color [null] - The title color of the disabled step.\n/// @param {Color} $disabled-subtitle-color [null] - The subtitle color of the disabled step.\n/// @param {Color} $disabled-indicator-color [null] - The indicator color of the disabled step.\n/// @param {Color} $disabled-indicator-background [null] - The indicator background of the disabled step.\n/// @param {Color} $disabled-indicator-outline [null] - The indicator outline color of the disabled step.\n///\n/// @param {Color} $step-separator-color [null] - The separator border-color of between the steps.\n/// @param {Color} $complete-step-separator-color [null] - The separator border-color between the completed steps.\n///\n/// @param {Color} $step-separator-style [null] - The separator border-style of between the steps.\n/// @param {Color} $complete-step-separator-style [null] - The separator border-style between the completed steps.\n///\n/// @param {Color} $border-radius-indicator [null] - The border-radius of the step indicator.\n/// @param {Color} $border-radius-step-header [null] - The border-radius of the step header.\n///\n/// @requires $light-schema\n/// @example scss Set custom stepper colors\n///   $my-stepper-theme: stepper-theme($step-hover-background: red);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-stepper-theme);\n@function stepper-theme(\n    $schema: $light-schema,\n\n    $step-background: null,\n    $step-hover-background: null,\n    $step-focus-background: null,\n\n    $invalid-step-background: null,\n    $invalid-step-hover-background: null,\n    $invalid-step-focus-background: null,\n\n    $current-step-background: null,\n    $current-step-hover-background: null,\n    $current-step-focus-background: null,\n\n    $complete-step-background: null,\n    $complete-step-hover-background: null,\n    $complete-step-focus-background: null,\n\n    // Incomplete\n    $indicator-color: null,\n    $indicator-background: null,\n    $indicator-outline: null,\n\n    $title-color: null,\n    $title-hover-color: null,\n    $title-focus-color: null,\n\n    $subtitle-color: null,\n    $subtitle-hover-color: null,\n    $subtitle-focus-color: null,\n\n    // Invalid\n    $invalid-indicator-color: null,\n    $invalid-indicator-background: null,\n    $invalid-indicator-outline: null,\n\n    $invalid-title-color: null,\n    $invalid-title-hover-color: null,\n    $invalid-title-focus-color: null,\n\n    $invalid-subtitle-color: null,\n    $invalid-subtitle-hover-color: null,\n    $invalid-subtitle-focus-color: null,\n\n    // Current\n    $current-indicator-color: null,\n    $current-indicator-background: null,\n    $current-indicator-outline: null,\n\n    $current-title-color: null,\n    $current-title-hover-color: null,\n    $current-title-focus-color: null,\n\n    $current-subtitle-color: null,\n    $current-subtitle-hover-color: null,\n    $current-subtitle-focus-color: null,\n\n    // complete\n    $complete-indicator-color: null,\n    $complete-indicator-background: null,\n    $complete-indicator-outline: null,\n\n    $complete-title-color: null,\n    $complete-title-hover-color: null,\n    $complete-title-focus-color: null,\n\n    $complete-subtitle-color: null,\n    $complete-subtitle-hover-color: null,\n    $complete-subtitle-focus-color: null,\n\n    // Disabled\n    $disabled-indicator-color: null,\n    $disabled-indicator-background: null,\n    $disabled-indicator-outline: null,\n    $disabled-title-color: null,\n    $disabled-subtitle-color: null,\n\n    // Separator\n    $step-separator-color: null,\n    $complete-step-separator-color: null,\n\n    $step-separator-style: null,\n    $complete-step-separator-style: null,\n\n    // Border-radius\n    $border-radius-indicator: null,\n    $border-radius-step-header: null,\n) {\n    $name: 'igx-stepper';\n    $selector: 'igx-stepper';\n    $stepper-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $stepper-schema: map.get($schema, $name);\n    } @else {\n        $stepper-schema: $schema;\n    }\n\n    $theme: digest-schema($stepper-schema);\n\n    @if not($indicator-background) and $step-background {\n        $indicator-background: text-contrast($step-background);\n    }\n\n    @if not($indicator-color) and $indicator-background {\n        $indicator-color: text-contrast($indicator-background);\n    }\n\n    @if not($complete-indicator-color) and $complete-indicator-background {\n        $complete-indicator-color: text-contrast($complete-indicator-background);\n    }\n\n    @if not($invalid-indicator-color) and $invalid-indicator-background {\n        $invalid-indicator-color: text-contrast($invalid-indicator-background);\n    }\n\n    @if not($current-indicator-color) and $current-indicator-background {\n        $current-indicator-color: text-contrast($current-indicator-background);\n    }\n\n    @if not($title-color) and $step-background {\n        $title-color: text-contrast($step-background);\n    }\n\n    @if not($subtitle-color) and $step-background {\n        $subtitle-color: text-contrast($step-background);\n    }\n\n    @if not($title-hover-color) and $step-hover-background {\n        $title-hover-color: text-contrast($step-hover-background);\n    }\n\n    @if not($subtitle-hover-color) and $step-hover-background {\n        $subtitle-hover-color: text-contrast($step-hover-background);\n    }\n\n    @if not($title-focus-color) and $step-focus-background {\n        $title-focus-color: text-contrast($step-focus-background);\n    }\n\n    @if not($subtitle-focus-color) and $step-focus-background {\n        $subtitle-focus-color: text-contrast($step-focus-background);\n    }\n\n    @if not($border-radius-indicator) {\n        $border-radius-indicator: border-radius(map.get($theme, 'border-radius-indicator'));\n    }\n\n    @if not($border-radius-step-header) {\n        $border-radius-step-header: border-radius(map.get($theme, 'border-radius-step-header'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n\n        // Incomplete\n        step-background: $step-background,\n        step-hover-background: $step-hover-background,\n        step-focus-background: $step-focus-background,\n        indicator-color: $indicator-color,\n        indicator-background: $indicator-background,\n        indicator-outline: $indicator-outline,\n        title-color: $title-color,\n        title-hover-color: $title-hover-color,\n        title-focus-color: $title-focus-color,\n        subtitle-color: $subtitle-color,\n        subtitle-hover-color: $subtitle-hover-color,\n        subtitle-focus-color: $subtitle-focus-color,\n\n        // Invalid\n        invalid-step-background: $invalid-step-background,\n        invalid-step-hover-background: $invalid-step-hover-background,\n        invalid-step-focus-background: $invalid-step-focus-background,\n        invalid-indicator-color: $invalid-indicator-color,\n        invalid-indicator-background: $invalid-indicator-background,\n        invalid-indicator-outline: $invalid-indicator-outline,\n        invalid-title-color: $invalid-title-color,\n        invalid-title-hover-color: $invalid-title-hover-color,\n        invalid-title-focus-color: $invalid-title-focus-color,\n        invalid-subtitle-color: $invalid-subtitle-color,\n        invalid-subtitle-hover-color: $invalid-subtitle-hover-color,\n        invalid-subtitle-focus-color: $invalid-subtitle-focus-color,\n\n        // Current\n        current-step-background: $current-step-background,\n        current-step-hover-background: $current-step-hover-background,\n        current-step-focus-background: $current-step-focus-background,\n        current-indicator-color: $current-indicator-color,\n        current-indicator-background: $current-indicator-background,\n        current-indicator-outline: $current-indicator-outline,\n        current-title-color: $current-title-color,\n        current-title-hover-color: $current-title-hover-color,\n        current-title-focus-color: $current-title-focus-color,\n        current-subtitle-color: $current-subtitle-color,\n        current-subtitle-hover-color: $current-subtitle-hover-color,\n        current-subtitle-focus-color: $current-subtitle-focus-color,\n\n        // Complete\n        complete-step-background: $complete-step-background,\n        complete-step-hover-background: $complete-step-hover-background,\n        complete-step-focus-background: $complete-step-focus-background,\n        complete-indicator-color: $complete-indicator-color,\n        complete-indicator-background: $complete-indicator-background,\n        complete-indicator-outline: $complete-indicator-outline,\n        complete-title-color: $complete-title-color,\n        complete-title-hover-color: $complete-title-hover-color,\n        complete-title-focus-color: $complete-title-focus-color,\n        complete-subtitle-color: $complete-subtitle-color,\n        complete-subtitle-hover-color: $complete-subtitle-hover-color,\n        complete-subtitle-focus-color: $complete-subtitle-focus-color,\n\n        // Disabled\n        disabled-indicator-color: $disabled-indicator-color,\n        disabled-indicator-background: $disabled-indicator-background,\n        disabled-indicator-outline: $disabled-indicator-outline,\n        disabled-title-color: $disabled-title-color,\n        disabled-subtitle-color: $disabled-subtitle-color,\n\n        // Separator\n        step-separator-color: $step-separator-color,\n        complete-step-separator-color: $complete-step-separator-color,\n        step-separator-style: $step-separator-style,\n        complete-step-separator-style: $complete-step-separator-style,\n\n        // Border-radius\n        border-radius-indicator: $border-radius-indicator,\n        border-radius-step-header: $border-radius-step-header,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin stepper($theme) {\n    @include css-vars($theme);\n\n    $variant: map.get($theme, variant);\n\n    $indicator-size: map.get((\n        material: rem(24px),\n        fluent: rem(24px),\n        bootstrap: rem(40px),\n        indigo-design: rem(24px)\n    ), $variant);\n\n    $step-header-padding: map.get((\n        material: rem(24px),\n        fluent: rem(8px),\n        bootstrap: rem(24px),\n        indigo-design: rem(16px)\n    ), $variant);\n\n    $step-header-padding-simple: map.get((\n        material: rem(8px),\n        fluent: rem(8px),\n        bootstrap: rem(16px),\n        indigo-design: rem(8px)\n    ), $variant);\n\n    $step-body-padding: rem(16px);\n    $title-gap: rem(8px);\n    $indicator-gap: rem(4px);\n    $indicator-padding: rem(2px);\n    $v-line-indent: calc(#{$step-header-padding} + (#{$indicator-size} / 2));\n    $separator-position: 50%;\n\n    $outline-width: map.get((\n        material: rem(1px),\n        fluent: rem(1px),\n        bootstrap: rem(1px),\n        indigo-design: rem(2px)\n    ), $variant);\n\n    $separator-size: map.get((\n        material: rem(1px),\n        fluent: rem(1px),\n        bootstrap: rem(8px),\n        indigo-design: rem(2px)\n    ), $variant);\n\n    $separator-title-top: calc(100% - ((#{$indicator-size} / 2) + #{$step-header-padding} + (#{$separator-size} / 2)));\n    $separator-title-bottom: calc((#{$indicator-size} / 2) + #{$step-header-padding} - (#{$separator-size} / 2));\n\n    %stepper-display,\n    %igx-stepper__header,\n    %igx-stepper__body,\n    %igx-stepper__step {\n        display: flex;\n    }\n\n    %stepper-display {\n        flex-direction: column;\n        width: 100%;\n    }\n\n    %igx-stepper__header {\n        white-space: nowrap;\n        flex-direction: column;\n        width: 100%;\n    }\n\n    %igx-stepper__body {\n        position: relative\n    }\n\n    %stepper-display,\n    %igx-stepper__body,\n    %igx-stepper__step-header,\n    %igx-stepper__step-title-wrapper {\n        overflow: hidden;\n    }\n\n    %igx-stepper__step-title {\n        color: var-get($theme, 'title-color');\n    }\n\n    %igx-stepper__step-subtitle {\n        color: var-get($theme, 'subtitle-color');\n    }\n\n    %igx-stepper__step {\n        position: relative;\n        flex-direction: column;\n        align-content: center;\n        justify-content: center;\n        min-width: rem(100px);\n\n        &:focus {\n            outline: none;\n\n            %igx-stepper__step-title {\n                color: var-get($theme, 'title-focus-color');\n            }\n\n            %igx-stepper__step-subtitle {\n                color: var-get($theme, 'subtitle-focus-color');\n            }\n\n            %igx-stepper__step-header {\n                background: var-get($theme, 'step-focus-background');\n                color: var-get($theme, 'title-focus-color');\n\n                @if $variant == 'bootstrap' {\n                    box-shadow: inset 0 0 0 $outline-width var-get($theme, 'indicator-outline');\n                }\n            }\n\n            %igx-stepper__step-header--current {\n                background: var-get($theme, 'current-step-focus-background') !important;\n\n                %igx-stepper__step-title {\n                    color: var-get($theme, 'current-title-focus-color');\n                }\n\n                %igx-stepper__step-subtitle {\n                    color: var-get($theme, 'current-subtitle-focus-color');\n                }\n            }\n\n            %igx-stepper__step-header--invalid {\n                background: var-get($theme, 'invalid-step-focus-background');\n\n                %igx-stepper__step-title {\n                    color: var-get($theme, 'invalid-title-focus-color');\n                }\n\n                %igx-stepper__step-subtitle {\n                    color: var-get($theme, 'invalid-subtitle-focus-color');\n                }\n            }\n        }\n\n        &:first-of-type {\n            %igx-stepper__step-header {\n                &::before {\n                    visibility: hidden;\n                }\n            }\n        }\n\n        &:last-of-type {\n            %igx-stepper__step-content-wrapper {\n                &::before {\n                    display: none;\n                }\n            }\n\n            %igx-stepper__step-header {\n                &::after {\n                    visibility: hidden;\n                }\n            }\n        }\n    }\n\n    %igx-stepper__step-header {\n        display: flex;\n        padding: $step-header-padding;\n        position: relative;\n        line-height: normal;\n        flex-direction: column;\n        align-items: flex-start;\n        gap: $title-gap;\n        cursor: pointer;\n        background: var-get($theme, 'step-background');\n        border-radius: var-get($theme, 'border-radius-step-header');\n\n        &:hover {\n            background: var-get($theme, 'step-hover-background');\n            color: var-get($theme, 'title-hover-color');\n        }\n\n        @if $variant != material {\n            .igx-ripple__inner {\n                display: none;\n            }\n        }\n    }\n\n    %igx-stepper__step-indicator {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        position: relative;\n        font-size: rem(12px);\n        height: $indicator-size;\n        width: $indicator-size;\n        white-space: nowrap;\n        border-radius: var-get($theme, 'border-radius-indicator');\n        color: var-get($theme, 'indicator-color');\n        background: var-get($theme, 'indicator-background');\n        box-shadow: 0 0 0 $outline-width var-get($theme, 'indicator-outline');\n\n        @if $variant != 'bootstrap' {\n            > igx-icon {\n                width: var(--igx-icon-size, #{calc(#{$indicator-size} - #{rem(6px)})});\n                height: var(--igx-icon-size, #{calc(#{$indicator-size} - #{rem(6px)})});\n                font-size: var(--igx-icon-size, #{calc(#{$indicator-size} - #{rem(6px)})});\n                color: inherit;\n            }\n        } @else if $variant == 'bootstrap' {\n            > igx-icon {\n                width: var(--igx-icon-size, #{rem(18px)});\n                height: var(--igx-icon-size, #{rem(18px)});\n                font-size: var(--igx-icon-size, #{rem(18px)});\n            }\n        }\n\n        div > igx-icon,\n        div > igx-avatar,\n        div > igx-circular-bar {\n            max-height: $indicator-size;\n            max-width: $indicator-size;\n        }\n    }\n\n    %igx-stepper__step-header--current {\n        background: var-get($theme, 'current-step-background') !important;\n        color: var-get($theme, 'current-title-color');\n\n        %igx-stepper__step-indicator {\n            color: var-get($theme, 'current-indicator-color') !important;\n            background: var-get($theme, 'current-indicator-background') !important;\n            box-shadow: 0 0 0 $outline-width var-get($theme, 'current-indicator-outline') !important;\n        }\n\n        %igx-stepper__step-title {\n            color: var-get($theme, 'current-title-color');\n        }\n\n        %igx-stepper__step-subtitle {\n            color: var-get($theme, 'current-subtitle-color');\n        }\n\n        &:hover {\n            background: var-get($theme, 'current-step-hover-background') !important;\n\n            %igx-stepper__step-title {\n                color: var-get($theme, 'current-title-hover-color');\n            }\n\n            %igx-stepper__step-subtitle {\n                color: var-get($theme, 'current-subtitle-hover-color');\n            }\n        }\n    }\n\n    %igx-stepper__step--disabled {\n        color: var-get($theme, 'disabled-title-color');\n        pointer-events: none;\n        cursor: default;\n\n        %igx-stepper__step-indicator {\n            color: var-get($theme, 'disabled-indicator-color');\n            background: var-get($theme, 'disabled-indicator-background');\n            box-shadow: 0 0 0 $outline-width var-get($theme, 'disabled-indicator-outline');\n        }\n\n        %igx-stepper__step-title {\n            color: var-get($theme, 'disabled-title-color');\n        }\n\n        %igx-stepper__step-subtitle {\n            color: var-get($theme, 'disabled-subtitle-color');\n        }\n    }\n\n    %igx-stepper__step-header--invalid {\n        background: var-get($theme, 'invalid-step-background');\n        color: var-get($theme, 'invalid-title-color');\n\n        %igx-stepper__step-indicator {\n            color: var-get($theme, 'invalid-indicator-color');\n            background: var-get($theme, 'invalid-indicator-background');\n            box-shadow: 0 0 0 $outline-width var-get($theme, 'invalid-indicator-outline');\n        }\n\n        %igx-stepper__step-title {\n            color: var-get($theme, 'invalid-title-color');\n        }\n\n        %igx-stepper__step-subtitle {\n            color: var-get($theme, 'invalid-subtitle-color');\n        }\n\n        &:hover {\n            background: var-get($theme, 'invalid-step-hover-background');\n\n            %igx-stepper__step-title {\n                color: var-get($theme, 'invalid-title-hover-color');\n            }\n\n            %igx-stepper__step-subtitle {\n                color: var-get($theme, 'invalid-subtitle-hover-color');\n            }\n        }\n    }\n\n    %igx-stepper__body-content {\n        display: block;\n        position: absolute;\n        inset: 0;\n        width: 100%;\n        height: 100%;\n        overflow-y: auto;\n        overflow-x: hidden;\n        z-index: -1;\n    }\n\n    %igx-stepper__step-content-wrapper,\n    %igx-stepper__body-content {\n        padding: $step-body-padding;\n    }\n\n    %igx-stepper__body-content--active {\n        z-index: 1;\n        position: relative;\n    }\n\n    %igx-stepper__step-content-wrapper {\n        margin-inline-start: $v-line-indent;\n        position: relative;\n        min-height: rem(32px);\n\n        &::before {\n            content: '';\n            position: absolute;\n            inset-inline-start: calc(-#{$separator-size} / 2);\n            top: calc(-#{$step-header-padding} + #{$title-gap});\n            bottom: calc(-#{$step-header-padding} + #{$title-gap});\n            width: $separator-size;\n            border-inline-start: $separator-size unquote(var-get($theme, 'step-separator-style')) var-get($theme, 'step-separator-color');\n        }\n    }\n\n    %igx-stepper__step-title-wrapper {\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        min-width: rem(32px);\n\n        &:empty {\n            display: none;\n        }\n\n        > * {\n            display: block;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n            overflow: hidden;\n        }\n    }\n\n    %igx-stepper__step--start,\n    %igx-stepper__step--end {\n        %igx-stepper__step-header {\n            flex-direction: row;\n            align-items: center;\n            //gap: $title-gap--horizontal;\n        }\n    }\n\n    %igx-stepper__step--start,\n    %igx-stepper__step--top {\n        %igx-stepper__step-title-wrapper {\n            order: -1;\n        }\n    }\n\n    %igx-stepper__step--completed {\n\n        %igx-stepper__step-header {\n            background: var-get($theme, 'complete-step-background');\n\n            &:hover {\n                background: var-get($theme, 'complete-step-hover-background');\n                %igx-stepper__step-title {\n                    color: var-get($theme, 'complete-title-hover-color');\n                }\n\n                %igx-stepper__step-subtitle {\n                    color: var-get($theme, 'complete-subtitle-hover-color');\n                }\n            }\n\n            &::after {\n                border-top-color: var-get($theme, 'complete-step-separator-color') !important;\n                border-top-style: unquote(var-get($theme, 'complete-step-separator-style')) !important;\n            }\n        }\n\n        %igx-stepper__step-indicator {\n            color: var-get($theme, 'complete-indicator-color');\n            background: var-get($theme, 'complete-indicator-background');\n            box-shadow: 0 0 0 $outline-width var-get($theme, 'complete-indicator-outline');\n        }\n\n        %igx-stepper__step-title {\n            color: var-get($theme, 'complete-title-color');\n        }\n\n        %igx-stepper__step-subtitle {\n            color: var-get($theme, 'complete-subtitle-color');\n        }\n\n        &:focus {\n            %igx-stepper__step-header {\n                background: var-get($theme, 'complete-step-focus-background');\n\n                %igx-stepper__step-title {\n                    color: var-get($theme, 'complete-title-focus-color');\n                }\n\n                %igx-stepper__step-subtitle {\n                    color: var-get($theme, 'complete-subtitle-focus-color');\n                }\n            }\n        }\n\n        %igx-stepper__step-content-wrapper {\n            &::before {\n                border-inline-start-style: unquote(var-get($theme, 'complete-step-separator-style'));\n                border-inline-start-color: var-get($theme, 'complete-step-separator-color');\n            }\n        }\n    }\n\n    %igx-stepper__step--completed + %igx-stepper__step {\n        &::before {\n            border-top-color: var-get($theme, 'complete-step-separator-color') !important;\n            border-top-style: unquote(var-get($theme, 'complete-step-separator-style')) !important;\n        }\n\n        %igx-stepper__step-header {\n            &::before {\n                border-top-color: var-get($theme, 'complete-step-separator-color') !important;\n                border-top-style: unquote(var-get($theme, 'complete-step-separator-style')) !important;\n            }\n        }\n    }\n\n    %igx-stepper__step--simple {\n        %igx-stepper__step-indicator {\n            min-width: $indicator-size;\n            min-height: $indicator-size;\n            width: initial;\n            height: initial;\n\n            div > igx-icon,\n            div > igx-avatar,\n            div > igx-circular-bar {\n                max-width: initial;\n                max-height: initial;\n            }\n        }\n    }\n\n    // HORIZONTAL MODE START\n    %igx-stepper--horizontal {\n        %igx-stepper__header {\n            flex-direction: row;\n        }\n\n        %igx-stepper__step {\n            overflow: hidden;\n            flex-direction: row;\n            flex-grow: 1;\n\n            &::before {\n                content: '';\n                width: auto;\n                min-width: rem(10px);\n                height: $separator-size;\n                flex: 1;\n                position: relative;\n                z-index: -1;\n                top: $separator-title-bottom;\n                border-top: $separator-size unquote(var-get($theme, 'step-separator-style')) var-get($theme, 'step-separator-color');\n            }\n\n            &:first-of-type {\n                flex-grow: 0;\n                min-width: 0;\n\n                &::before {\n                    display: none;\n                }\n            }\n        }\n\n        %igx-stepper__step-header {\n            display: flex;\n            flex-direction: row;\n            align-items: center;\n            justify-content: center;\n\n            &::before,\n            &::after {\n                content: '';\n                position: absolute;\n                z-index: -1;\n                height: $separator-size;\n                width: calc(50% - (#{$indicator-size} - #{$indicator-gap}));\n                top: $separator-title-bottom;\n                flex: 1;\n                border-top: $separator-size unquote(var-get($theme, 'step-separator-style')) var-get($theme, 'step-separator-color');\n            }\n\n            &::before {\n                inset-inline-start: 0;\n            }\n\n            &::after {\n                inset-inline-end: 0;\n            }\n        }\n\n        %igx-stepper__step--simple {\n            text-align: center;\n\n            %igx-stepper__step-header {\n                align-self: center;\n                padding: $step-header-padding-simple;\n                height: auto;\n\n                &::before,\n                &::after {\n                    display: none;\n                }\n            }\n\n            &%igx-stepper__step {\n                &::before {\n                    top: calc(50% - (#{$separator-size} / 2));\n                }\n            }\n        }\n\n        %igx-stepper__step-title-wrapper {\n            width: 100%;\n        }\n\n        %igx-stepper__step--top {\n            %igx-stepper__step-header {\n                justify-content: flex-end;\n\n                &::before,\n                &::after {\n                    top: $separator-title-top;\n                }\n            }\n\n            &%igx-stepper__step {\n                &::before {\n                    border-top: $separator-size unquote(var-get($theme, 'step-separator-style')) var-get($theme, 'step-separator-color');\n                    top: $separator-title-top;\n                }\n            }\n        }\n\n        %igx-stepper__step--bottom {\n            %igx-stepper__step-header {\n                justify-content: flex-start;\n            }\n        }\n\n        %igx-stepper__step--top,\n        %igx-stepper__step--bottom {\n            %igx-stepper__step-title-wrapper {\n                text-align: center;\n            }\n\n            %igx-stepper__step-header {\n                flex-direction: column;\n            }\n        }\n\n        %igx-stepper__step--start {\n            %igx-stepper__step-title-wrapper {\n                text-align: end;\n            }\n        }\n\n        %igx-stepper__step--start,\n        %igx-stepper__step--end {\n            %igx-stepper__step-indicator {\n                flex: 1 0 auto;\n            }\n\n            %igx-stepper__step-header {\n                @if $variant != 'fluent' {\n                    padding: calc(#{$step-header-padding} / 2);\n                }\n\n                &::before,\n                &::after {\n                    display: none;\n                }\n            }\n\n            &%igx-stepper__step {\n                &::before {\n                    top: calc(50% - (#{$separator-size} / 2));\n                }\n            }\n        }\n\n        %igx-stepper__step-content {\n            &:focus {\n                outline: none;\n            }\n\n            &::before {\n                display: none;\n            }\n        }\n\n        %igx-stepper__step-content-wrapper {\n            text-align: center;\n        }\n    }\n    // HORIZONTAL MODE END\n}\n\n/// Adds typography styles for the igx-stepper component.\n/// Uses the 'body-2' category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(title: 'body-2')] - The categories from the typographic scale used for type styles.\n@mixin stepper-typography(\n    $categories: (\n        title: 'body-2',\n        subtitle: 'caption'\n    )\n) {\n    $title: map.get($categories, 'title');\n    $subtitle: map.get($categories, 'subtitle');\n\n    %igx-stepper__step-title {\n        @include type-style($title) {\n            margin-top: 0;\n            margin-bottom: 0;\n        }\n    }\n\n    %igx-stepper__step-subtitle {\n        @include type-style($subtitle) {\n            margin-top: 0;\n            margin-bottom: 0;\n        }\n    }\n\n    %igx-stepper__step-header--current {\n        %igx-stepper__step-title {\n            font-weight: 600;\n        }\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified,\n/// the text-color will be assigned automatically to a contrasting color.\n///\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $background [null] - The background color used for the toast.\n/// @param {Color} $text-color [null] - The text-color used for the toast.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for the toast component.\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the toast.\n///\n///\n/// @requires $light-schema\n///\n///\n///\n/// @example scss Set a custom background color\n///   $my-toast-theme: toast-theme($background: green);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-toast-theme);\n@function toast-theme(\n    $schema: $light-schema,\n\n    $border-radius: null,\n    $background: null,\n    $text-color: null,\n    $shadow: null,\n) {\n    $name: 'igx-toast';\n    $toast-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $toast-schema: map.get($schema, $name);\n    } @else {\n        $toast-schema: $schema;\n    }\n\n    $theme: digest-schema($toast-schema);\n\n    @if not($shadow) {\n        $elevation: map.get($toast-schema, 'elevation');\n        $shadow: elevation($elevation);\n    }\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @if not($border-radius) {\n        $border-radius: border-radius(map.get($theme, 'border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        background: $background,\n        border-radius: $border-radius,\n        text-color: $text-color,\n        shadow: $shadow\n    ));\n}\n\n/// Toast Component\n/// @param {Map} $theme - The theme used to style the component.\n@mixin toast($theme) {\n    $variant: map.get($theme, variant);\n\n    @include css-vars($theme);\n\n    $width: rem(52px);\n    $margin: rem(42px) auto;\n\n    $padding: map.get((\n        'material': rem(16px) rem(24px),\n        'fluent': rem(16px) rem(24px),\n        'bootstrap': rem(12px),\n        'indigo-design': rem(14px) rem(24px)\n    ), $variant);\n\n    $border: map.get((\n        'material': none,\n        'fluent': none,\n        'bootstrap': rem(1px) solid color(null, 'gray', 300),\n        'indigo-design': none\n    ), $variant);\n\n    %igx-toast-display {\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        margin: $margin;\n        padding: $padding;\n        min-width: $width;\n        color: var-get($theme, 'text-color');\n        background: var-get($theme, 'background');\n        border: $border;\n        border-radius: var-get($theme, 'border-radius');\n        box-shadow: map.get($theme, 'shadow');\n        backdrop-filter: blur(10px);\n    }\n}\n\n/// Adds typography styles for the igx-toast component.\n/// Uses the 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.\n@mixin toast-typography($categories: (text: 'body-2')) {\n    $text: map.get($categories, 'text');\n\n    %igx-toast-display,\n    %igx-toast-display > * {\n        @include type-style($text) {\n            margin: 0;\n        }\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Returns a map containing all style properties related to the theming the tooltip directive.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $background [null] - The background color of the tooltip.\n/// @param {Color} $text-color [null] - The text color of the tooltip.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for the tooltip component.\n///\n/// @requires $light-schema\n///\n///\n///\n/// @example scss Change the tooltip background\n///   $my-tooltip-theme: tooltip-theme($background: magenta);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-checkbox-theme);\n@function tooltip-theme(\n    $schema: $light-schema,\n\n    $border-radius: null,\n    $background: null,\n    $text-color: null\n) {\n    $name: 'igx-tooltip';\n    $selector: '.igx-tooltip--desktop, .igx-tooptip--mobile';\n\n    $tooltip-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $tooltip-schema: map.get($schema, $name);\n    } @else {\n        $tooltip-schema: $schema;\n    }\n\n    $theme: digest-schema($tooltip-schema);\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @if not($border-radius) {\n        $border-radius: border-radius(map.get($theme, 'border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        background: $background,\n        border-radius: $border-radius,\n        text-color: $text-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin tooltip($theme) {\n    @include css-vars($theme);\n\n    %tooltip-display {\n        display: inline-flex;\n        justify-content: center;\n        flex-flow: column wrap;\n        background: var-get($theme, 'background');\n        color: var-get($theme, 'text-color');\n        border-radius: var-get($theme, 'border-radius');\n        margin: 0 auto;\n    }\n\n    %tooltip--desktop {\n        padding: 0 rem(8px);\n        min-height: rem(24px);\n    }\n\n    %tooltip--mobile {\n        padding: 0 rem(16px);\n        min-height: rem(32px);\n    }\n\n    %tooltip--hidden {\n        display: none;\n    }\n}\n\n/// Adds typography styles for the igx-tooltip component.\n/// Uses the 'body-2' category from the typographic scale for mobile tooltips and custom typography for desktop tooltips.\n/// @group typography\n/// @param {Map} $categories [(text-desktop: null, text-mobile: 'body-2')] - The categories from the typographic scale used for type styles.\n@mixin tooltip-typography(\n    $categories: (text-desktop: null, text-mobile: 'body-2')\n) {\n    $text-desktop: map.get($categories, 'text-desktop');\n    $text-mobile: map.get($categories, 'text-mobile');\n\n    %tooltip--mobile {\n        @include type-style($text-mobile);\n    }\n\n    @if $text-desktop != null {\n        %tooltip--desktop {\n            @include type-style($text-desktop);\n        }\n    } @else {\n        %tooltip--desktop {\n            font-size: rem(10px);\n            font-weight: 600;\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Returns a map containing all style properties related to the theming of the tree component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} background [null] - The background color used for the tree node.\n/// @param {Color} foreground [null] - The color used for the tree node content.\n/// @param {Color} background-selected [null] - The background color used for the selected tree node.\n/// @param {Color} foreground-selected [null] - The color used for the content of the selected tree node.\n/// @param {Color} background-active [null] - The background color used for the active tree node.\n/// @param {Color} foreground-active [null] - The color used for the content of the active tree node.\n/// @param {Color} background-active-selected [null] - The background color used for the active selected tree node.\n/// @param {Color} foreground-active-selected [null] - The color used for the content of the active selected tree node.\n/// @param {Color} background-disabled [null] - The background color used for the tree node in disabled state.\n/// @param {Color} foreground-disabled [null] - The color used for the content of the disabled tree node.\n/// @param {Color} drop-area-color [null] - The background color used for the tree node drop aria.\n/// @param {Color} border-color [null] - The outline shadow color used for tree node in focus state.\n/// @requires $light-schema\n///\n///\n/// @example scss Change the tree background\n///   $my-tree-theme: tree-theme($background: magenta);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-tree-theme);\n@function tree-theme(\n    $schema: $light-schema,\n    $background: null,\n    $background-selected: null,\n    $background-active: null,\n    $background-active-selected: null,\n    $background-disabled: null,\n    $foreground: null,\n    $foreground-selected: null,\n    $foreground-active: null,\n    $foreground-active-selected: null,\n    $foreground-disabled: null,\n    $drop-area-color: null,\n    $border-color: null,\n) {\n    $name: 'igx-tree';\n    $tree-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $tree-schema: map.get($schema, $name);\n    } @else {\n        $tree-schema: $schema;\n    }\n\n    $theme: digest-schema($tree-schema);\n\n    @if not($foreground) and $background {\n        $foreground: text-contrast($background);\n    }\n\n    @if not($foreground-selected) and $background-selected {\n        $foreground-selected: text-contrast($background-selected);\n    }\n\n    @if not($foreground-active) and $background-active {\n        $foreground-active: text-contrast($background-active);\n    }\n\n    @if not($foreground-active-selected) and $background-active-selected {\n        $foreground-active-selected: text-contrast($background-active-selected);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        background: $background,\n        foreground: $foreground,\n        background-selected: $background-selected,\n        foreground-selected: $foreground-selected,\n        background-active: $background-active,\n        foreground-active: $foreground-active,\n        background-active-selected: $background-active-selected,\n        foreground-active-selected: $foreground-active-selected,\n        background-disabled: $background-disabled,\n        foreground-disabled: $foreground-disabled,\n        drop-area-color: $drop-area-color,\n        border-color: $border-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin tree($theme) {\n    @include css-vars($theme);\n\n    $variant: map.get($theme, variant);\n    $indigo-theme: $variant == 'indigo-design';\n\n    $node-indent: (\n        comfortable: rem(24px),\n        cosy: rem(16px),\n        compact: rem(12px)\n    );\n\n    $node-height: (\n        comfortable: rem(50px),\n        cosy: rem(40px),\n        compact: rem(32px)\n    );\n\n    $icon-size: rem(24px);\n    $icon-space: rem(8px);\n\n    $drop-indicator-width: (\n        comfortable: calc(100% - ((#{map.get($node-indent, 'comfortable')} * 2) + (#{$icon-size} + #{$icon-space}))),\n        cosy: calc(100% - ((#{map.get($node-indent, 'cosy')} * 2) + (#{$icon-size} + #{$icon-space}))),\n        compact: calc(100% - ((#{map.get($node-indent, 'compact')} * 2) + (#{$icon-size} + #{$icon-space})))\n    );\n\n    %tree-display {\n        display: block;\n        z-index: 0;\n        overflow-y: auto;\n    }\n\n    %tree-node,\n    %node-wrapper,\n    %node-toggle-button,\n    %node-content,\n    %node-select {\n        display: flex;\n    }\n\n    %tree-node {\n        flex-direction: column;\n    }\n\n    %node-wrapper,\n    %node-toggle-button,\n    %node-select {\n        align-items: center;\n    }\n\n    %node-toggle-button,\n    %node-select {\n        margin-inline-end: $icon-space;\n    }\n\n    %node-content,\n    %node-toggle-button,\n    %node-select {\n        z-index: 1;\n    }\n\n    %node-toggle-button--hidden {\n        visibility: hidden;\n    }\n\n    %node-wrapper {\n        min-height: map.get($node-height, 'comfortable');\n        padding: 0 map.get($node-indent, 'comfortable');\n        position: relative;\n        background: var-get($theme, 'background');\n        color: var-get($theme, 'foreground');\n\n        // We need this here, since we count on it to calculate the width of the tree drop indicator\n        igx-icon {\n            width: var(--igx-icon-size, #{$icon-size});\n            height: var(--igx-icon-size, #{$icon-size});\n            font-size: var(--igx-icon-size, #{$icon-size});\n        }\n\n        [dir='rtl'] & {\n            igx-icon {\n                transform: scaleX(-1);\n            }\n        }\n\n        &::after {\n            content: '';\n            position: absolute;\n            top: 0;\n            inset-inline-start: 0;\n            width: 100%;\n            height: 100%;\n            background: transparent;\n            z-index: 0;\n        }\n\n        &:hover {\n            &::after {\n                background: var-get($theme, 'hover-color');\n            }\n        }\n\n        &:focus {\n            outline-width: 0;\n        }\n\n        igx-circular-bar {\n            width: $icon-size;\n            height: $icon-size;\n        }\n\n        &--cosy {\n            min-height: map.get($node-height, 'cosy');\n            padding: 0 map.get($node-indent, 'cosy');\n\n            %node-spacer {\n                width: map.get($node-indent, 'cosy')\n            }\n\n            %node-drop-indicator {\n                inset-inline-end: map.get($node-indent, 'cosy');\n                width: map.get($drop-indicator-width, 'cosy');\n            }\n\n            igx-circular-bar {\n                width: calc(#{$icon-size} - 4px);\n                height: calc(#{$icon-size} - 4px);\n            }\n        }\n\n        &--compact {\n            min-height: map.get($node-height, 'compact');\n            padding: 0 map.get($node-indent, 'compact');\n\n            %node-spacer {\n                width: map.get($node-indent, 'compact')\n            }\n\n            %node-drop-indicator {\n                inset-inline-end: map.get($node-indent, 'compact');\n                width: map.get($drop-indicator-width, 'compact');\n            }\n\n            igx-circular-bar {\n                width: calc(#{$icon-size} - 6px);\n                height: calc(#{$icon-size} - 6px);\n            }\n        }\n    }\n\n    %node-wrapper--selected {\n        background: var-get($theme, 'background-selected');\n        color: var-get($theme, 'foreground-selected');\n    }\n\n    %node-wrapper--active {\n        background: var-get($theme, 'background-active');\n        color: var-get($theme, 'foreground-active');\n    }\n\n    %indigo-opacity {\n        $bg-active: map.get($theme, 'background-active');\n\n        @if ($indigo-theme) {\n            @if meta.type-of($bg-active) == 'color' and lightness($bg-active) < 50 {\n                opacity: .8;\n            } @else {\n                opacity: .3;\n            }\n        }\n    }\n\n    %node-wrapper--active-selected {\n        background: var-get($theme, 'background-active-selected');\n        color: var-get($theme, 'foreground-active-selected');\n    }\n\n    %node-wrapper--focused {\n        box-shadow: inset 0 0 0 rem(1px) var-get($theme, 'border-color');\n    }\n\n    %node-wrapper--disabled {\n        background: var-get($theme, 'background-disabled') !important;\n        color: var-get($theme, 'foreground-disabled') !important;\n\n        box-shadow: none !important;\n\n        pointer-events: none;\n\n        &::after {\n            display: none;\n        }\n\n        %node-toggle-button {\n            color: var-get($theme, 'foreground-disabled') !important;\n        }\n    }\n\n    %node-spacer {\n        display: inline-block;\n        width: map.get($node-indent, 'comfortable');\n    }\n\n    %node-content {\n        display: block;\n        align-items: center;\n        flex: 1;\n        @include ellipsis();\n    }\n\n    %node-toggle-button {\n        justify-content: center;\n        cursor: pointer;\n        user-select: none;\n        min-width: $icon-size\n    }\n\n    %node-drop-indicator {\n        display: flex;\n        visibility: hidden;\n        position: absolute;\n        inset-inline-end: map.get($node-indent, 'comfortable');\n        bottom: 0;\n        width: map.get($drop-indicator-width, 'comfortable');\n\n        > div {\n            flex: 1;\n            height: rem(1px);\n            background: var-get($theme, 'drop-area-color');\n        }\n    }\n\n    %node-group {\n        overflow: hidden;\n    }\n}\n\n/// Adds typography styles for the igx-tree component.\n/// Uses the 'subtitle-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n@mixin tree-typography(\n    $categories: (label: 'body-2')\n) {\n    $text: map.get($categories, 'label');\n\n    %node-content {\n        @include type-style($text)\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:math';\n@use 'sass:color';\n@use 'sass:string';\n@use '../utils/meta' as *;\n\n// Generates CSS variables for a base color\n// @access private\n@mixin _base($color, $shade, $value) {\n    $_shade: $shade == 500;\n    $_valid: meta.type-of($value == 'color');\n\n    @if $_shade and $_valid {\n        --ig-#{$color}-h: #{math.round(color.hue($value))};\n        --ig-#{$color}-s: #{math.round(color.saturation($value))};\n        --ig-#{$color}-l: #{math.round(color.lightness($value))};\n        --ig-#{$color}-a: #{color.alpha($value)};\n    }\n}\n\n// Generates CSS variables for a shade color\n// @access private\n@mixin _shade($color, $shade, $value, $contrast) {\n    $_shade: meta.type-of($shade) == 'string';\n    $_hsl: if($_shade, string.index($shade, 'hsl'), false);\n    $_contrast: if($_shade, string.index($shade, 'contrast'), false);\n\n    @if $_hsl {\n        $variant: string.slice($shade, 1, string.index($shade, '-hsl') - 1);\n\n        --ig-#{$color}-#{$variant}: #{$value};\n    }\n\n    @if $_contrast and $contrast {\n        --ig-#{$color}-#{$shade}: #{$value};\n    }\n}\n\n/// Generates CSS variables for a given palette.\n/// @access public\n/// @group Palettes\n/// @param {Map} $palette - The palette used to generate CSS variables.\n/// @param {Boolean} $contrast [true] - Specify if contrast colors should be included.\n/// @example scss Generate css variables for a palette\n///    $palette: palette($primary: red, $secondary: blue, $gray: #000);\n///    @include palette($palette);\n/// @require {function} is-root\n@mixin palette($palette, $contrast: true) {\n    $scope: if(is-root(), ':root', '&');\n\n    #{$scope} {\n        @each $color, $shades in map.remove($palette, '_meta') {\n            @each $shade, $value in $shades {\n                @include _base($color, $shade, $value);\n                @include _shade($color, $shade, $value, $contrast);\n            }\n        }\n    }\n}\n","@use '../utils/meta' as *;\n\n////\n/// @group Elevations\n////\n\n/// Generates CSS variables for a given elevations map.\n/// @access public\n/// @param {Map} $elevations - The elevations map to use to generate CSS variables.\n/// @example scss Generate CSS variables for elevations.\n///   $elevations: (\n///       small: box-shadow(0 .125rem .25rem rgba(0 0 0 / 75%)),\n///       medium: box-shadow(0 .25rem .5rem rgba(0 0 0 / 85%)),\n///       large: box-shadow(0 .75rem 1rem rgba(0 0 0 / 95%))\n///   );\n///   :root {\n///       @include elevations($elevations);\n///   }\n/// @require {function} is-root\n@mixin elevations($elevations) {\n    $scope: if(is-root(), ':root', '&');\n\n    #{$scope} {\n        @each $level, $shadow in $elevations {\n            --ig-elevation-#{$level}: #{$shadow};\n        }\n    }\n}\n\n/// Includes box-shadow styles for an elevation by name\n/// @access public\n/// @param {String} $name - The name of the shadow.\n/// @example scss Include a box shadow by its name.\n///   .my-class {\n///     @include elevation(small);\n///   }\n@mixin elevation($name) {\n    box-shadow: var(--ig-elevation-#{$name});\n}\n","@use 'sass:list';\n@use 'sass:string';\n@use '../schemas' as *;\n@use '../../base' as *;\n@use '../../components' as *;\n@use 'igniteui-theming/sass/color' as *;\n@use 'igniteui-theming/sass/elevations' as *;\n@use 'igniteui-theming/sass/elevations/presets' as elevations;\n@use 'igniteui-theming/sass/utils' as *;\n@use 'igniteui-theming/sass/themes' as *;\n@use 'igniteui-theming/sass/themes/charts' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Generates an Ignite UI for Angular global theme.\n/// @param {Map} $palette - An palette to be used by the global theme.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the components.\n/// @param {List} $exclude [( )] - A list of igx components to be excluded from the global theme styles.\n/// @param {Number} $roundness [null] - Sets the global roundness factor (the value can be any decimal fraction between 0 and 1) for all components.\n/// @param {Boolean} $elevation [true] - Turns on/off elevations for all components in the theme.\n/// @param {Map} $elevations [$elevations] - The elevation map to be used by all component themes.\n/// @requires $light-material-schema\n/// @requires {function} is-component\n/// @requires {function} is-used\n@mixin theme(\n    $palette,\n    $schema: $light-material-schema,\n    $exclude: (),\n    $roundness: 1,\n    $elevation: true,\n    $elevations: elevations.$material-elevations,\n) {\n    // Stores all excluded component styles\n    $excluded: ();\n    $scope: if(is-root(), ':root', '&');\n\n\n    @if not(list.index($exclude, 'palette')) {\n        @include palette($palette);\n    }\n\n    @if not(list.index($exclude, 'elevations')) {\n        @include elevations($elevations);\n    }\n\n    @if $elevation == false {\n        #{$scope} {\n            --ig-elevation-factor: 0;\n        }\n    }\n\n    @if $roundness {\n        #{$scope} {\n            --ig-radius-factor: #{$roundness};\n        }\n    }\n\n    @if list.length($exclude) > 0 {\n        $excluded: is-component($exclude);\n    }\n\n    @if is-used('igx-ripple', $exclude) {\n        @include ripple(ripple-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-avatar', $exclude) {\n        @include avatar(avatar-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-action-strip', $exclude) {\n        @include action-strip(action-strip-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-badge', $exclude) {\n        @include badge(badge-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-bottom-nav', $exclude) {\n        @include bottom-nav(bottom-nav-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-button', $exclude) {\n        @include button(button-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-button-group', $exclude) {\n        @include button-group(button-group-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-banner', $exclude) {\n        @include banner(banner-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-calendar', $exclude) {\n        @include calendar(calendar-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-card', $exclude) {\n        @include card(card-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-carousel', $exclude) {\n        @include carousel(carousel-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-splitter', $exclude) {\n        @include splitter(splitter-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('data-chart', $exclude) {\n        @include css-vars(data-chart-theme(\n            $schema: $schema,\n        ));\n    }\n\n    @if is-used('doughnut-chart', $exclude) {\n        @include css-vars(doughnut-chart-theme(\n            $schema: $schema,\n        ));\n    }\n\n    @if is-used('linear-gauge', $exclude) {\n        @include css-vars(linear-gauge-theme(\n            $schema: $schema,\n        ));\n    }\n\n    @if is-used('radial-gauge', $exclude) {\n        @include css-vars(radial-gauge-theme(\n            $schema: $schema,\n        ));\n    }\n\n    @if is-used('financial-chart', $exclude) {\n        @include css-vars(financial-chart-theme(\n            $schema: $schema,\n        ));\n    }\n\n    @if is-used('bullet-graph', $exclude) {\n        @include css-vars(bullet-graph-theme(\n            $schema: $schema,\n        ));\n    }\n\n    @if is-used('category-chart', $exclude) {\n        @include css-vars(category-chart-theme(\n            $schema: $schema,\n        ));\n    }\n\n    @if is-used('geo-map', $exclude) {\n        @include css-vars(geo-map-theme(\n            $schema: $schema,\n        ));\n    }\n\n    @if is-used('pie-chart', $exclude) {\n        @include css-vars(pie-chart-theme(\n            $schema: $schema,\n        ));\n    }\n\n    @if is-used('sparkline', $exclude) {\n        @include css-vars(sparkline-theme(\n            $schema: $schema,\n        ));\n    }\n\n    @if is-used('funnel-chart', $exclude) {\n        @include css-vars(funnel-chart-theme(\n            $schema: $schema,\n        ));\n    }\n\n    @if is-used('shape-chart', $exclude) {\n        @include css-vars(shape-chart-theme(\n            $schema: $schema,\n        ));\n    }\n\n    @if is-used('igx-checkbox', $exclude) {\n        @include checkbox(checkbox-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-chip', $exclude) {\n        @include chip(chip-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-column-actions', $exclude) {\n        @include column-actions(column-actions-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-combo', $exclude) {\n        @include combo(combo-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-date-picker', $exclude) {\n        @include date-picker(calendar-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-date-range-picker', $exclude) {\n        @include date-range-picker(date-range-picker-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-dialog', $exclude) {\n        @include dialog(dialog-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-divider', $exclude) {\n        @include divider(divider-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igc-dockmanager', $exclude) {\n        @include dock-manager(dock-manager-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igc-rating', $exclude) {\n        @include rating(rating-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-drop-down', $exclude) {\n        @include drop-down(drop-down-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-expansion-panel', $exclude) {\n        @include expansion-panel(expansion-panel-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-grid', $exclude) {\n        @include grid(grid-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-grid-summary', $exclude) {\n        @include grid-summary(grid-summary-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-grid-toolbar', $exclude) {\n        @include grid-toolbar(grid-toolbar-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-pivot-data-selector', $exclude) {\n        @include pivot-data-selector(pivot-data-selector-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-highlight', $exclude) {\n        @include highlight(highlight-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-icon', $exclude) {\n        @include icon(icon-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-input-group', $exclude) {\n        @include input-group(input-group-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-list', $exclude) {\n        @include list(list-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-navbar', $exclude) {\n        @include navbar(navbar-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-nav-drawer', $exclude) {\n        @include navdrawer(navdrawer-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-overlay', $exclude) {\n        @include overlay(overlay-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-paginator', $exclude) {\n        @include paginator(paginator-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-circular-bar', $exclude) {\n        @include progress-circular(progress-circular-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-linear-bar', $exclude) {\n        @include progress-linear(progress-linear-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-radio', $exclude) {\n        @include radio(radio-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-query-builder', $exclude) {\n        @include query-builder(query-builder-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('ig-scrollbar', $exclude) {\n        @include scrollbar(scrollbar-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-slider', $exclude) {\n        @include slider(slider-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-snackbar', $exclude) {\n        @include snackbar(snackbar-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-switch', $exclude) {\n        @include switch(switch-theme(\n            $schema: $schema,\n        ));\n    }\n\n    @if is-used('igx-tabs', $exclude) {\n        @include tabs(tabs-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-stepper', $exclude) {\n        @include stepper(stepper-theme(\n            $schema: $schema,\n        ));\n    }\n\n    @if is-used('igx-toast', $exclude) {\n        @include toast(toast-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-tooltip', $exclude) {\n        @include tooltip(tooltip-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if is-used('igx-time-picker', $exclude) {\n        @include time-picker(time-picker-theme(\n            $schema: $schema,\n        ));\n    }\n\n    @if is-used('igx-tree', $exclude) {\n        @include tree(tree-theme(\n            $schema: $schema,\n        ));\n    }\n\n    @if is-used('igx-watermark', $exclude) {\n        @include watermark(watermark-theme(\n            $schema: $schema\n        ));\n    }\n\n    @if list.length($dropped-themes) > 0 {\n        @warn string.unquote('You have excluded the following components from the theme: \"#{$dropped-themes}\".');\n    }\n}\n\n/// A wrapper around the theme mixin. Creates a global material theme that can be used with light backgrounds.\n/// @param {Map} $palette - An palette to be used by the global theme.\n/// @param {List} $exclude [( )] - A list of ig components to be excluded from the global theme styles.\n/// @see {mixin} theme\n@mixin light-theme(\n    $palette,\n    $exclude: (),\n    $roundness: 1,\n    $elevation: true,\n) {\n    $gray: color($palette, 'gray');\n    $surface: color($palette, 'surface');\n\n    $light-palette: palette(\n        $primary: color($palette, 'primary'),\n        $secondary: color($palette, 'secondary'),\n        $info: color($palette, 'info'),\n        $success: color($palette, 'success'),\n        $warn: color($palette, 'warn'),\n        $error: color($palette, 'error'),\n        $surface: if($surface != #fff, $surface, #fff),\n        $gray: if($gray != #9e9e9e, $gray, #000),\n    );\n\n    @include theme(\n        $palette: $light-palette,\n        $schema: $light-schema,\n        $exclude: $exclude,\n        $roundness: $roundness,\n        $elevation: $elevation,\n    );\n}\n\n/// A wrapper around the theme mixin. Creates a global material theme that can be used with dark backgrounds.\n/// @param {Map} $palette - An palette to be used by the global theme.\n/// @param {List} $exclude [( )] - A list of igx components to be excluded from the global theme styles.\n/// @see {mixin} theme\n@mixin dark-theme(\n    $palette,\n    $exclude: (),\n    $roundness: 1,\n    $elevation: true,\n) {\n    $gray: color($palette, 'gray');\n    $surface: color($palette, 'surface');\n\n    $dark-palette: palette(\n        $primary: color($palette, 'primary'),\n        $secondary: color($palette, 'secondary'),\n        $info: color($palette, 'info'),\n        $success: color($palette, 'success'),\n        $warn: color($palette, 'warn'),\n        $error: color($palette, 'error'),\n        $surface: if($surface != #fff, $surface, #222),\n        $gray: if($gray != #9e9e9e, $gray, #fff),\n    );\n\n    @include theme(\n        $palette: $dark-palette,\n        $schema: $dark-schema,\n        $exclude: $exclude,\n        $roundness: $roundness,\n        $elevation: $elevation,\n    );\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $color [null] - The color of the ripple.\n/// @requires $light-schema\n/// @example scss Change the color\n///   $my-ripple-theme: igx-ripple-theme($color: yellow);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-ripple-theme);\n@function ripple-theme(\n    $schema: $light-schema,\n    $color: null\n) {\n    $name: 'igx-ripple';\n    $selector: '[igxRipple]';\n\n    $ripple-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $ripple-schema: map.get($schema, $name);\n    } @else {\n        $ripple-schema: $schema;\n    }\n\n    $theme: digest-schema($ripple-schema);\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        color: $color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin ripple($theme) {\n    @include css-vars($theme);\n\n    %igx-ripple-display {\n        display: block;\n        position: absolute;\n        border-radius: border-radius(50%);\n        background: var-get($theme, 'color');\n        pointer-events: none;\n        transform-origin: center;\n        transform: translate3d(0, 0, 0) scale(0);\n        will-change: opacity, transform;\n        opacity: .5;\n        margin: 0 !important;\n        border: none !important;\n    }\n\n    %igx-ripple-wrapper {\n        overflow: hidden;\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'igniteui-theming/sass/animations/easings' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color will be assigned automatically to a contrasting color.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $color [null] - The text color used of the avatar.\n/// @param {Color} $background [null] - The background color used of the avatar.\n/// @param {number} $border-radius [null] - The border-radius used of the avatar.\n/// @param {number} $size [null] - The size of the avatar.\n/// @requires $light-schema\n///\n/// @example scss Change the background and icon colors in icon avatars\n///   $my-avatar-theme: avatar-theme($icon-background: black, $icon-color: white);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-avatar-theme);\n@function avatar-theme(\n    $schema: $light-schema,\n    $background: null,\n    $color: null,\n    $border-radius: null,\n    $size: null,\n) {\n    $name: 'igx-avatar';\n    $avatar-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $avatar-schema: map.get($schema, $name);\n    } @else {\n        $avatar-schema: $schema;\n    }\n\n    $theme: digest-schema($avatar-schema);\n\n    @if not($color) and $background {\n        $color: text-contrast($background);\n    }\n\n    @if not($border-radius) {\n        $border-radius: border-radius(map.get($theme, 'border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        background: $background,\n        color: $color,\n        border-radius: $border-radius,\n        size: $size\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin avatar($theme) {\n    @include css-vars($theme);\n\n    $size: map.get($theme, 'size');\n    $small-size: rem(40px);\n    $medium-size: rem(64px);\n    $large-size: rem(88px);\n\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: $variant == 'bootstrap';\n\n    $box-shadow: map.get((\n        material: null,\n        fluent: null,\n        bootstrap: 0 0 0 rem(3px) var-get($theme, 'background'),\n        indigo-design: null,\n    ), $variant);\n\n    %igx-avatar-outline {\n        position: absolute;\n        content: '';\n        width: 100%;\n        height: 100%;\n        border-radius: inherit;\n        opacity: .5;\n    }\n\n    %igx-avatar-display {\n        position: relative;\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        user-select: none;\n        color: var-get($theme, 'color');\n        background: var-get($theme, 'background');\n        vertical-align: middle;\n        border-radius: var-get($theme, 'border-radius');\n        outline-style: none;\n        flex-shrink: 0;\n\n        &::after {\n            box-shadow: none;\n            @if $bootstrap-theme {\n                @extend %igx-avatar-outline;\n            }\n            transition: box-shadow .15s $in-out-quad;\n        }\n\n        &:focus::after {\n            box-shadow: $box-shadow;\n        }\n    }\n\n    %igx-avatar-image {\n        width: 100%;\n        height: 100%;\n        border-radius: inherit;\n        background-size: cover;\n        background-repeat: no-repeat;\n        background-position: center;\n    }\n\n    %igx-avatar--rounded {\n        --igx-avatar-border-radius: #{rem(44px)};\n    }\n\n    %igx-avatar--initials {\n        text-transform: uppercase;\n    }\n\n    %igx-avatar-initials--small {\n        --size: #{$size or $small-size};\n        font-size: calc(#{var-get(('size': $size or $small-size), 'size')} / 2);\n        line-height: calc(#{var-get(('size': $size or $small-size), 'size')} / 2);\n    }\n\n    %igx-avatar-initials--medium {\n        --size: #{$size or $medium-size};\n        font-size: calc(#{var-get(('size': $size or $medium-size), 'size')} / 2);\n        line-height: calc(#{var-get(('size': $size or $medium-size), 'size')} / 2);\n    }\n\n    %igx-avatar-initials--large {\n        --size: #{$size or $large-size};\n        font-size: calc(#{var-get(('size': $size or $large-size), 'size')} / 2);\n        line-height: calc(#{var-get(('size': $size or $large-size), 'size')} / 2);\n    }\n\n    %igx-avatar--small {\n        --size: #{$size or $small-size};\n        width: var-get(('size': $size or $small-size), 'size');\n        height: var-get(('size': $size or $small-size), 'size');\n    }\n\n    %igx-avatar--medium {\n        --size: #{$size or $medium-size};\n        width: var-get(('size': $size or $medium-size), 'size');\n        height: var-get(('size': $size or $medium-size), 'size');\n    }\n\n    %igx-avatar--large {\n        --size: #{$size or $large-size};\n        width: var-get(('size': $size or $large-size), 'size');\n        height: var-get(('size': $size or $large-size), 'size');\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color will be assigned automatically to a contrasting color.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $icon-color [null] - The color used for the actions icons.\n/// @param {Color} $background [null] - The color used for the action strip component content background.\n/// @param {Color} $actions-background [null] - The color used for the actions background.\n/// @param {Color} $delete-action [null] - The color used for the delete icon in action strip component.\n/// @param {actions-border-radius} $actions-border-radius [null] - The border radius used for actions container inside action strip component.\n///\n/// @example scss Change the background and icon colors in action strip\n///   $my-action-strip-theme: action-strip-theme($background: black);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-action-strip-theme);\n@function action-strip-theme(\n    $schema: $light-schema,\n\n    $background: null,\n    $actions-background: null,\n    $icon-color: null,\n    $delete-action: null,\n    $actions-border-radius: null,\n) {\n    $name: 'igx-action-strip';\n    $action-strip-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $action-strip-schema: map.get($schema, $name);\n    } @else {\n        $action-strip-schema: $schema;\n    }\n\n    $theme: digest-schema($action-strip-schema);\n\n    @if not($icon-color) and $actions-background {\n        $icon-color: text-contrast($actions-background);\n    }\n\n    @if not($actions-border-radius) {\n        $actions-border-radius: border-radius(map.get($theme, 'actions-border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        background: $background,\n        actions-background: $actions-background,\n        icon-color: $icon-color,\n        delete-action: $delete-action,\n        actions-border-radius: $actions-border-radius,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin action-strip($theme) {\n    @include css-vars($theme);\n\n    $padding: (\n        comfortable: 0 rem(24px),\n        cosy: 0 rem(16px),\n        compact: 0 rem(12px)\n    );\n\n    $variant: map.get($theme, variant);\n\n    %igx-action-strip-display {\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        pointer-events: none;\n        top: 0;\n        inset-inline-start: 0;\n        background: var-get($theme, 'background');\n        color: inherit;\n        padding: map.get($padding, 'comfortable');\n        z-index: 9999;\n    }\n\n    %action-icons-density {\n        [igxButton='icon'] {\n            width: rem(28px);\n            height: rem(28px);\n\n            igx-icon {\n                width: var(--igx-icon-size, #{rem(14px)});\n                height: var(--igx-icon-size, #{rem(14px)});\n                font-size: var(--igx-icon-size, #{rem(14px)});\n            }\n        }\n    }\n\n    %igx-action-strip--cosy {\n        @extend %action-icons-density;\n        padding: map.get($padding, 'cosy');\n    }\n\n    %igx-action-strip--compact {\n        @extend %action-icons-density;\n        padding: map.get($padding, 'compact');\n    }\n\n    %igx-action-strip__editing-actions,\n    %igx-action-strip__pinning-actions {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    %igx-action-strip__menu-item {\n        [igxLabel] {\n            cursor: pointer;\n        }\n\n        igx-icon {\n            width: var(--igx-icon-size, rem(18px));\n            height: var(--igx-icon-size, rem(18px));\n            font-size: var(--igx-icon-size, rem(18px));\n        }\n\n        igx-icon + [igxLabel] {\n            margin-inline-start: rem(12px);\n        }\n\n        &%igx-drop-down__item--cosy {\n            igx-icon + [igxLabel] {\n                margin-inline-start: rem(10px);\n            }\n        }\n\n        &%igx-drop-down__item--compact {\n            igx-icon + [igxLabel] {\n                margin-inline-start: rem(8px);\n            }\n        }\n    }\n\n    %igx-action-strip__menu-item--danger {\n        color: color($color: 'error');\n\n        &:hover {\n            color: color($color: 'error');\n        }\n    }\n\n    %igx-action-strip__menu-button {\n        display: flex;\n        align-items: center;\n    }\n\n    %igx-action-strip__actions {\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        pointer-events: all;\n        position: relative;\n        color: var-get($theme, 'icon-color');\n        border-radius: var-get($theme, 'actions-border-radius');\n        background: var-get($theme, 'actions-background');\n        max-height: rem(36px);\n\n        &:last-child {\n            margin-inline-end: 0;\n        }\n\n        igx-icon {\n            color: var-get($theme, 'icon-color');\n        }\n\n        [igxButton='icon'] {\n            igx-icon {\n                color: var-get($theme, 'icon-color');\n            }\n\n            @if $variant == 'indigo-design' or $variant == 'fluent' {\n                border-radius: var-get($theme, 'actions-border-radius');\n            }\n        }\n    }\n\n    %igx-action-strip__editing-actions {\n        > [igxButton] {\n            margin-inline-start: rem(4px);\n\n            &:first-of-type {\n                margin-inline-start: 0;\n            }\n        }\n    }\n\n    %igx-action-strip__delete {\n        igx-icon {\n            color: var-get($theme, 'delete-action');\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n///\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $icon-color [null] - The icon color used.\n/// @param {Color} $text-color [null] - The text color used.\n/// @param {Color} $border-color [null] - The border color used.\n/// @param {Number} $border-width [null] - The border width of the badge component.\n/// @param {Color} $background-color [null] - The background color used.\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the badge.\n/// @param {border-radius} $border-radius [null] - The border radius used for badge component.\n///\n/// @requires $light-schema\n///\n/// @example scss Change the text and icon colors in a badge\n///   $my-badge-theme: badge-theme($icon-color: black, $background-color: white);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-badge-theme);\n@function badge-theme(\n    $schema: $light-schema,\n    $elevations: null,\n\n    $icon-color: null,\n    $text-color: null,\n\n    $border-color: null,\n    $border-radius: null,\n    $border-width: null,\n\n    $background-color: null,\n    $shadow: null,\n) {\n    $name: 'igx-badge';\n    $badge-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $badge-schema: map.get($schema, $name);\n    } @else {\n        $badge-schema: $schema;\n    }\n\n    $theme: digest-schema($badge-schema);\n\n    @if not($icon-color) and $background-color {\n        $icon-color: text-contrast($background-color);\n    }\n\n    @if not($text-color) and $background-color {\n        $text-color: text-contrast($background-color);\n    }\n\n    @if not($shadow) {\n        $elevation: map.get($badge-schema, 'elevation');\n        $shadow: elevation($elevation);\n    }\n\n    @if not($border-radius) {\n        $border-radius: border-radius(map.get($theme, 'border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        icon-color: $icon-color,\n        text-color: $text-color,\n        border-color: $border-color,\n        border-radius: $border-radius,\n        background-color: $background-color,\n        shadow: $shadow,\n        border-width: $border-width\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin badge($theme) {\n    @include css-vars($theme);\n\n    $badge-width: rem(22px);\n    $badge-height: $badge-width;\n\n    $badge-font-size: rem(11px);\n    $badge-font-weight: normal;\n\n    $badge-icon-font-size: rem(12px);\n\n    $badge-value-padding: rem(4px);\n    $border-type: solid;\n\n    %igx-badge-display {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        min-width: $badge-width;\n        height: $badge-height;\n        font-size: $badge-font-size;\n        font-weight: $badge-font-weight;\n        color: var-get($theme, 'text-color');\n        line-height: 1;\n        background: var-get($theme, 'background-color');\n        border-radius: var-get($theme, 'border-radius');\n        box-shadow: var-get($theme, 'shadow');\n        border-width: var-get($theme, 'border-width');\n        border-color: var-get($theme, 'border-color');\n        border-style: $border-type;\n        overflow: hidden;\n\n        igx-icon {\n            display: inline-flex;\n            justify-content: center;\n            align-items: center;\n            width: var(--igx-icon-size, #{$badge-width - rem(2px)});\n            height: var(--igx-icon-size, #{$badge-width - rem(2px)});\n            font-size: var(--igx-icon-size, #{$badge-icon-font-size});\n            font-weight: $badge-font-weight;\n            color: var-get($theme, 'icon-color');\n        }\n    }\n\n    %igx-badge-value {\n        white-space: nowrap;\n        padding: $badge-value-padding;\n    }\n\n    %igx-badge--success {\n        background: color($color: 'success');\n    }\n\n    %igx-badge--info {\n        background: color($color: 'info');\n    }\n\n    %igx-badge--warn {\n        background: color($color: 'warn');\n    }\n\n    %igx-badge--error {\n        background: color($color: 'error');\n    }\n\n    %igx-badge--hidden {\n        visibility: hidden;\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'igniteui-theming/sass/animations/easings' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n/// Does ___not___ apply for disabled state colors.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n///\n/// @param {box-shadow} $shadow [null] - The shadow to be applied for the button group.\n/// @param {Color} $item-text-color [null]- The text color for button group items.\n/// @param {Color} $item-background [null] - The background color for button group items .\n/// @param {Color} $item-border-color [null] - The border color between button group items.\n/// @param {Color} $item-disabled-border [null] - The border color for a disabled item in the button group.\n///\n/// @param {Color} $item-hover-text-color [null] - The hover text color for button group items.\n/// @param {Color} $item-hover-background [null] - The hover background color for button group items.\n///\n/// @param {Color} $disabled-text-color [null]- The text/icon color for a disabled item in the button group.\n/// @param {Color} $disabled-background-color [null] - The background color for a disabled item in the button group.\n/// @param {Color} $item-disabled-border [null] - The border color for a disabled item in the button group.\n///\n/// @param {Color} $item-selected-text-color [null]- The text color for a selected item in the button group.\n/// @param {Color} $item-selected-background [null] - The background color for a selected item in the button group.\n/// @param {Color} $item-selected-border-color [null] - The border color for a selected item from the button group.\n/// @param {Color} $item-selected-hover-background [null] - The background color for a selected item in hover or focus state in the button group.\n/// @param {Color} $selected-shadow-color [null] - The outline color of focused/selected button group items.\n/// @param {Color} $idle-shadow-color [null] - The outline color of focused button group items.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for button-group component.\n///\n/// @requires $light-schema\n///\n/// @example scss Change the background, text, and border colors\n///   $my-button-group-theme: button-group-theme(\n///     $item-text-color: white,\n///     $item-background: rgba(0, 0, 0, .8),\n///     $item-border-color: #dadada\n///   );\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-button-group-theme);\n@function button-group-theme(\n    $schema: $light-schema,\n    $elevations: null,\n\n    $shadow: null,\n    $item-text-color: null,\n    $item-background: null,\n    $item-border-color: null,\n    $item-disabled-border: null,\n    $border-radius: null,\n\n    $item-hover-text-color: null,\n    $item-hover-background: null,\n    $idle-shadow-color: null,\n\n    $disabled-text-color: null,\n    $disabled-background-color: null,\n\n    $item-selected-text-color: null,\n    $item-selected-background: null,\n    $item-selected-border-color: null,\n    $item-selected-hover-background: null,\n    $selected-shadow-color: null\n) {\n    $name: 'igx-button-group';\n    $selector: 'igx-buttongroup';\n\n    $button-group-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $button-group-schema: map.get($schema, $name);\n    } @else {\n        $button-group-schema: $schema;\n    }\n\n    $theme: digest-schema($button-group-schema);\n\n    $border: rem(1px) solid map.get($theme, 'item-selected-border-color');\n\n    @if not($item-text-color) and $item-background {\n        @if meta.type-of($item-background) == 'color' {\n            $item-text-color: text-contrast($item-background);\n        }\n    }\n\n    @if not($item-hover-text-color) and $item-hover-background {\n        @if meta.type-of($item-hover-background) == 'color' {\n            $item-hover-text-color: text-contrast($item-hover-background);\n        }\n    }\n\n    @if not($item-selected-background) and $item-background {\n        @if meta.type-of($item-background) == 'color' {\n            $item-selected-text-color: text-contrast($item-background);\n        }\n    }\n\n    @if not($idle-shadow-color) and $selected-shadow-color {\n        @if meta.type-of($selected-shadow-color) == 'color' {\n            $idle-shadow-color: $selected-shadow-color;\n        }\n    }\n\n    @if not($selected-shadow-color) and $idle-shadow-color {\n        @if meta.type-of($idle-shadow-color) == 'color' {\n            $selected-shadow-color: $idle-shadow-color;\n        }\n    }\n\n    @if not($item-selected-text-color) and $item-selected-background {\n        @if meta.type-of($item-selected-background) == 'color' {\n            $item-selected-text-color: text-contrast($item-selected-background);\n        }\n    }\n\n    @if map.get($button-group-schema, 'elevation') > 0 {\n        $border: none;\n    }\n\n    @if not($shadow) {\n        $elevation: map.get($button-group-schema, 'elevation');\n        $shadow: elevation($elevation);\n    }\n\n    @if not($border-radius) {\n        $border-radius: border-radius(map.get($theme, 'border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        item-text-color: $item-text-color,\n        item-background: $item-background,\n        item-border-color: $item-border-color,\n        item-disabled-border: $item-disabled-border,\n        border-radius: $border-radius,\n        item-hover-text-color: $item-hover-text-color,\n        item-hover-background: $item-hover-background,\n        disabled-text-color:$disabled-text-color,\n        disabled-background-color:$disabled-background-color,\n        item-selected-text-color: $item-selected-text-color,\n        item-selected-background: $item-selected-background,\n        item-selected-border-color: $item-selected-border-color,\n        item-selected-hover-background: $item-selected-hover-background,\n        border: $border,\n        shadow: $shadow,\n        idle-shadow-color: $idle-shadow-color,\n        selected-shadow-color: $selected-shadow-color,\n    ));\n}\n\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin button-group($theme) {\n    @include css-vars($theme);\n    $group-item-min-width: rem(24px);\n    $group-item-border-thickness: rem(1px);\n    $group-items-margin: rem(10px, 16px);\n    $transition: all 140ms $in-out-quad;\n\n    $variant: map.get($theme, 'variant');\n    $bootstrap-theme: $variant == 'bootstrap';\n    $indigo-theme: $variant == 'indigo-design';\n\n    %igx-group-display {\n        display: flex;\n        box-shadow: var-get($theme, 'shadow');\n        transition: $transition;\n        border-radius: var-get($theme, 'border-radius');\n\n        button {\n            // The margin here is required to fix a bug in Safari #7858\n            margin-top: 0;\n            margin-inline-end: 0;\n            margin-bottom: 0;\n        }\n    }\n\n    %igx-group-item {\n        border: $group-item-border-thickness solid var-get($theme, 'item-border-color');\n        color: var-get($theme, 'item-text-color');\n        background: var-get($theme, 'item-background');\n        min-width: $group-item-min-width;\n        display: flex;\n        flex: 1 0 0%;\n        justify-content: center;\n        align-items: center;\n        text-decoration: none;\n        cursor: pointer;\n        user-select: none;\n        position: relative;\n        z-index: 0;\n        transition: $transition;\n\n        &[igxButton] {\n            border-radius: 0;\n            border-color: var-get($theme, 'item-border-color');\n\n            @if $bootstrap-theme {\n                margin: 0 !important;\n                border: none;\n            }\n        }\n\n        &:not(:nth-child(0)) {\n            margin-inline-start: rem(-1px);\n        }\n\n        &:first-of-type {\n            border-start-start-radius: var-get($theme, 'border-radius');\n            border-end-start-radius: var-get($theme, 'border-radius');\n        }\n\n        &:last-of-type {\n            border-start-end-radius: var-get($theme, 'border-radius');\n            border-end-end-radius: var-get($theme, 'border-radius');\n        }\n\n        &[igxButton][disabled='true'] {\n            color: var-get($theme, 'disabled-text-color');\n            background: var-get($theme, 'disabled-background-color');\n            border-color: var-get($theme, 'item-disabled-border');\n        }\n\n        &:hover,\n        &:focus {\n            color: var-get($theme, 'item-hover-text-color');\n            background: var-get($theme, 'item-hover-background');\n        }\n\n        &:focus {\n            @if $bootstrap-theme or $indigo-theme {\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'idle-shadow-color');\n            }\n\n            @if $indigo-theme {\n                z-index: 2;\n            }\n        }\n    }\n\n    %igx-group-item-vertical {\n        &:not(:nth-child(0)) {\n            margin-top: rem(-1px);\n            margin-inline-start: 0;\n        }\n\n        &:first-of-type {\n            border-start-start-radius: var-get($theme, 'border-radius');\n            border-start-end-radius: var-get($theme, 'border-radius');\n            border-end-start-radius: 0;\n            border-end-end-radius: 0;\n        }\n\n        &:last-of-type {\n            border-start-start-radius: 0;\n            border-start-end-radius: 0;\n            border-end-start-radius: var-get($theme, 'border-radius');\n            border-end-end-radius: var-get($theme, 'border-radius');\n        }\n    }\n\n    %igx-group-item-selected {\n        color: var-get($theme, 'item-selected-text-color');\n        background: var-get($theme, 'item-selected-background');\n        border-color: var-get($theme, 'item-selected-border-color');\n        position: relative;\n        z-index: 1;\n\n        &:hover,\n        &:focus {\n            color: var-get($theme, 'item-selected-text-color');\n            background: var-get($theme, 'item-selected-hover-background');\n        }\n\n        &:focus {\n            z-index: 3;\n        }\n\n        @if $indigo-theme {\n            &:focus {\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'selected-shadow-color');\n            }\n        }\n\n        &[igxButton][disabled='true'] {\n            position: relative;\n\n            &::before {\n                position: absolute;\n                content: '';\n                top: 0;\n                bottom: 0;\n                inset-inline-end: 0;\n                inset-inline-start: 0;\n                background: color($color: 'gray', $variant: 500, $opacity: .12);\n            }\n        }\n    }\n\n    %igx-group-vertical {\n        flex-flow: column;\n    }\n\n    %igx-group-item-content {\n        display: flex;\n        align-items: center;\n        flex-flow: row nowrap;\n        min-width: 0;\n\n        * ~ * {\n            margin-inline-start: $group-items-margin;\n        }\n    }\n\n    %igx-button-group__button-text {\n        width: 100%;\n        @include ellipsis();\n    }\n}\n","/* stylelint-disable keyframes-name-pattern */\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n\n$keyframes: () !default;\n\n/// Registers a keyframes animation in the keyframes registry.\n/// @access public\n/// @group animations\n/// @param {String} $name - The name of the keyframes animation.\n@mixin keyframes($name) {\n    $keyframe: map.has-key($keyframes, $name);\n\n    @if not($keyframe) {\n        $keyframe: string.unique-id();\n        $keyframes: map.merge($keyframes, (#{$name}: $keyframe)) !global;\n\n        @at-root {\n            @keyframes #{$name} {\n                @content;\n            }\n        }\n    }\n}\n\n/// Animates an element.\n/// @access public\n/// @group animations\n/// @param {List} $animate - The list of animation properties.\n/// @example scss - Animating an element\n///  @include fade-in(); // include the 'fade-in' keyframes animation mixin\n///\n///  .bozo {\n///     @include animation('fade-in' .3s ease-out);\n///  }\n@mixin animation($animate...) {\n    $max: list.length($animate);\n    $animations: '';\n\n    @for $i from 1 through $max {\n        $animations: #{$animations + list.nth($animate, $i)};\n\n        @if $i < $max {\n            $animations: #{$animations + ', '};\n        }\n    }\n\n    animation: #{$animations};\n}\n","@use '../mixins' as *;\n\n////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin scale-in-center {\n    @include keyframes(scale-in-center) {\n        0% {\n            transform: scale(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-bl {\n    @include keyframes(scale-in-bl) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-center {\n    @include keyframes(scale-in-ver-center) {\n        0% {\n            transform: scaleY(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-top {\n    @include keyframes(scale-in-top) {\n        0% {\n            transform: scale(0);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-left {\n    @include keyframes(scale-in-left) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-top {\n    @include keyframes(scale-in-ver-top) {\n        0% {\n            transform: scaleY(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-tr {\n    @include keyframes(scale-in-tr) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-tl {\n    @include keyframes(scale-in-tl) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-bottom {\n    @include keyframes(scale-in-ver-bottom) {\n        0% {\n            transform: scaleY(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-right {\n    @include keyframes(scale-in-right) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-center {\n    @include keyframes(scale-in-hor-center) {\n        0% {\n            transform: scaleX(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-br {\n    @include keyframes(scale-in-br) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-left {\n    @include keyframes(scale-in-hor-left) {\n        0% {\n            transform: scaleX(0);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-bottom {\n    @include keyframes(scale-in-bottom) {\n        0% {\n            transform: scale(0);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-right {\n    @include keyframes(scale-in-hor-right) {\n        0% {\n            transform: scaleX(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n","@use '../mixins' as *;\n\n////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin scale-out-center {\n    @include keyframes (scale-out-center) {\n        0% {\n            transform: scale(1);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-bl {\n    @include keyframes (scale-out-bl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-vertical {\n    @include keyframes (scale-out-vertical) {\n        0% {\n            transform: scaleY(1);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-top {\n    @include keyframes (scale-out-top) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-left {\n    @include keyframes (scale-out-left) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-ver-top {\n    @include keyframes (scale-out-ver-top) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-tr {\n    @include keyframes (scale-out-tr) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-tl {\n    @include keyframes (scale-out-tl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-ver-bottom {\n    @include keyframes (scale-out-ver-bottom) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-right {\n    @include keyframes (scale-out-right) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-horizontal {\n    @include keyframes (scale-out-horizontal) {\n        0% {\n            transform: scaleX(1);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-br {\n    @include keyframes (scale-out-br) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-hor-left {\n    @include keyframes (scale-out-hor-left) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(0);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-bottom {\n    @include keyframes (scale-out-bottom) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-hor-right {\n    @include keyframes (scale-out-hor-right) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'igniteui-theming/sass/animations' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $slide-background [null] - The slide background color.\n/// @param {Color} $button-background [null] - The previous/next buttons idle background color.\n/// @param {Color} $button-hover-background [null] - The previous/next buttons hover background color.\n/// @param {Color} $button-disabled-background [null] - The previous/next buttons disabled background color.\n/// @param {Color} $button-arrow-color [null] - The previous/next buttons idle arrow color.\n/// @param {Color} $button-hover-arrow-color [null] - The previous/next buttons hover arrow color.\n/// @param {Color} $button-disabled-arrow-color [null] - The previous/next buttons disabled arrow color.\n/// @param {Color} $indicator-dot-color [null] - The idle indicator dot color.\n/// @param {Color} $indicator-border-color [null] - The idle indicator border color.\n/// @param {Color} $indicator-active-dot-color [null] - The active indicator dot color.\n/// @param {Color} $indicator-active-border-color [null] - The active indicator border color.\n/// @param {box-shadow} $button-shadow [null] - Shadow underneath the previous/next buttons.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for carousel component.\n///\n/// @requires $light-schema\n///\n///\n/// @example scss Change the previous/next button colors\n///   $my-carousel-theme: carousel-theme(\n///     $button-background: black,\n///     $button-hover-background: white\n///   );\n///   // Pass the carousel theme to the css-vars() mixin\n///   @include css-vars($my-carousel-theme);\n@function carousel-theme(\n    $schema: $light-schema,\n    $elevations: null,\n\n    $border-radius: null,\n    $button-shadow: null,\n\n    $slide-background: null,\n\n    $button-background: null,\n    $button-hover-background: null,\n    $button-disabled-background: null,\n    $button-arrow-color: null,\n    $button-hover-arrow-color: null,\n    $button-disabled-arrow-color: null,\n\n    $indicator-dot-color: null,\n    $indicator-border-color: null,\n    $indicator-active-dot-color: null,\n    $indicator-active-border-color: null,\n){\n    $name: 'igx-carousel';\n    $carousel-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $carousel-schema: map.get($schema, $name);\n    } @else {\n        $carousel-schema: $schema;\n    }\n\n    $theme: digest-schema($carousel-schema);\n\n    @if not($button-shadow) {\n        $button-elevation: map.get($carousel-schema, 'button-elevation');\n        $button-shadow: elevation($button-elevation);\n    }\n\n    @if not($button-arrow-color) and $button-background {\n        $button-arrow-color: text-contrast($button-background);\n    }\n\n    @if not($button-hover-arrow-color) and $button-hover-background {\n        $button-hover-arrow-color: text-contrast($button-hover-background);\n    }\n\n    @if not($button-disabled-arrow-color) and $button-disabled-background {\n        @if meta.type-of($button-disabled-background) == 'color' {\n            $button-disabled-arrow-color: rgba(text-contrast($button-disabled-background), .3);\n        }\n    }\n\n    @if not($border-radius){\n        $border-radius: border-radius(map.get($theme, 'border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n\n        slide-background: $slide-background,\n\n        border-radius: $border-radius,\n        button-shadow: $button-shadow,\n\n        button-background: $button-background,\n        button-disabled-background: $button-disabled-background,\n        button-hover-background: $button-hover-background,\n        button-arrow-color: $button-arrow-color,\n        button-hover-arrow-color: $button-hover-arrow-color,\n        button-disabled-arrow-color: $button-disabled-arrow-color,\n\n        indicator-dot-color: $indicator-dot-color,\n        indicator-border-color: $indicator-border-color,\n        indicator-active-dot-color: $indicator-active-dot-color,\n        indicator-active-border-color: $indicator-active-border-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin carousel($theme) {\n    @include css-vars($theme);\n    @include scale-in-center();\n    @include scale-out-center();\n\n    $carousel-arrow-margin: 0 rem(16px);\n    $carousel-indicators-margin: rem(16px) 0;\n    $carousel-indicators-padding: 0;\n    $carousel-indicator-margin: 0 rem(5px);\n    $indicator-border-style: rem(2px) solid;\n\n    $variant: map.get($theme, variant);\n    $not-bootstrap-theme: $variant != 'bootstrap';\n\n    %igx-carousel-display {\n        display: flex;\n        position: relative;\n        justify-content: center;\n        width: 100%;\n        height: 100%;\n        align-items: center;\n        flex-flow: column nowrap;\n    }\n\n    %igx-nav-arrow {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: rem(46px);\n        height: rem(46px);\n        cursor: pointer;\n        @if $not-bootstrap-theme {\n            border-radius: border-radius(50%);\n        } @else {\n            border-radius: var-get($theme, 'border-radius');\n        }\n\n        outline-style: none;\n        transition: all .15s ease-in-out;\n        color: var-get($theme, 'button-arrow-color');\n        background: var-get($theme, 'button-background');\n        box-shadow: var-get($theme, 'button-shadow');\n    }\n\n    %igx-nav-arrow--disabled {\n        background: var-get($theme, 'button-disabled-background');\n        color: var-get($theme, 'button-disabled-arrow-color');\n        pointer-events: none;\n        box-shadow: none;\n\n        igx-icon {\n            color: currentColor;\n        }\n    }\n\n    %igx-nav-arrow--hover {\n        color: var-get($theme, 'button-hover-arrow-color');\n        background: var-get($theme, 'button-hover-background');\n    }\n\n    %igx-carousel-arrow {\n        margin: $carousel-arrow-margin;\n        position: absolute;\n        top: 50%;\n        transform: translateY(-50%);\n        z-index: 3;\n        outline: none;\n        user-select: none;\n    }\n\n    %igx-carousel-arrow--next {\n        inset-inline-end: 0;\n    }\n\n    %igx-carousel-arrow--prev {\n        inset-inline-start: 0;\n    }\n\n    %igx-carousel-arrow--next,\n    %igx-carousel-arrow--prev {\n        [dir='rtl'] & {\n            transform: scaleX(-1);\n        }\n    }\n\n    %igx-carousel-indicators {\n        position: absolute;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        margin: $carousel-indicators-margin;\n        padding: $carousel-indicators-padding;\n        list-style: none;\n        z-index: 10;\n        inset-inline-start: 50%;\n        transform: translateX(-50%);\n\n        [dir='rtl'] & {\n            transform: translateX(50%);\n        }\n    }\n\n    %igx-carousel-indicators--bottom {\n        bottom: 0;\n    }\n\n    %igx-carousel-indicators--top {\n        top: 0;\n    }\n\n    %igx-carousel-indicators-label {\n        align-items: center;\n        // TODO: this should be wrapped in carousel typogrpahy\n        font-size: rem(16px);\n    }\n\n    %igx-carousel-indicator {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin: $carousel-indicator-margin;\n        cursor: pointer;\n    }\n\n    %igx-nav-dot {\n        position: relative;\n        width: rem(12px);\n        height: rem(12px);\n        text-indent: rem(-9999px);\n\n        @if $variant != 'indigo-design' {\n            border: $indicator-border-style;\n            border-color: var-get($theme, 'indicator-border-color');\n            box-shadow: elevation(1);\n            opacity: .7;\n        }\n\n        border-radius: border-radius(50%);\n        transition: all .15s $ease-out-quad;\n\n        &::after {\n            @if $variant != 'indigo-design' {\n                @include animation('scale-out-center' .15s $ease-out-quad forwards);\n            }\n            content: '';\n            position: absolute;\n            @if $variant != 'indigo-design' {\n                inset: rem(1px);\n            } @else {\n                inset: 0;\n            }\n            border-radius: inherit;\n            background: var-get($theme, 'indicator-dot-color');\n        }\n\n        &:hover {\n            opacity: 1;\n        }\n    }\n\n    %igx-nav-dot--active {\n        @if $variant != 'indigo-design' {\n            border: $indicator-border-style;\n            border-color: var-get($theme, 'indicator-active-border-color');\n        }\n\n        opacity: 1;\n\n        &::after {\n            background: var-get($theme, 'indicator-active-dot-color');\n            @if $variant != 'indigo-design' {\n                @include animation('scale-in-center' .15s $ease-out-quad forwards);\n            }\n        }\n    }\n\n    %igx-carousel-slide-wrapper {\n        position: relative;\n        width: 100%;\n        height: inherit;\n        overflow: hidden;\n        outline-style: none;\n        border-radius: var-get($theme, 'border-radius');\n        min-height: rem(300px);\n        min-width: rem(300px);\n    }\n\n    %igx-carousel-slide {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        inset: 0;\n        z-index: -1;\n        background: var-get($theme, 'slide-background');\n        visibility: hidden;\n    }\n\n    %igx-carousel-slide--previous {\n        z-index: 1;\n        visibility: visible;\n    }\n\n    %igx-carousel-slide--current {\n        z-index: 2;\n        visibility: visible;\n    }\n\n    %igx-carousel-slide img {\n        width: inherit;\n        height: inherit;\n        object-fit: cover;\n        touch-action: none;\n        pointer-events: none;\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'igniteui-theming/sass/animations/easings' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n///\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n///\n/// @param {color} $bar-color [null] - The background color of the bar.\n/// @param {color} $handle-color [null] - The color for the bar drag handle.\n/// @param {color} $expander-color [null] - The color for the arrow expander's.\n/// @param {number} $border-radius [null] - the border radios of the splitter bar drag handle\n/// @param {color} $focus-color [null] - The color used for focused splitter bar.\n/// @param {number} $size [null] - The size of the splitter, its width for vertical and height for horizontal splitter.\n/// @requires $light-schema\n/// @example scss Set a custom expander color\n///   $my-splitter-theme: splitter-theme($expander-color: red);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-splitter-them);\n@function splitter-theme(\n    $schema: $light-schema,\n    $elevations: null,\n\n    $bar-color: null,\n    $handle-color: null,\n    $expander-color: null,\n    $border-radius: null,\n    $focus-color: null,\n    $size: null\n) {\n    $name: 'igx-splitter';\n    $splitter-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $splitter-schema: map.get($schema, $name);\n    } @else {\n        $splitter-schema: $schema;\n    }\n\n    $theme: digest-schema($splitter-schema);\n\n    @if not($handle-color) and $bar-color {\n        $handle-color: text-contrast($bar-color);\n    }\n\n    @if not($expander-color) and $bar-color {\n        $expander-color: text-contrast($bar-color);\n    }\n\n    @if not($border-radius) {\n        $border-radius: border-radius(map.get($theme, 'border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        bar-color: $bar-color,\n        handle-color: $handle-color,\n        expander-color: $expander-color,\n        border-radius: $border-radius,\n        focus-color: $focus-color,\n        size: $size\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin splitter($theme) {\n    @include css-vars($theme);\n    $splitter-color: var-get($theme, 'bar-color');\n    $hitbox-size: rem(4px);\n    $debug-hitbox: false;\n    $hitbox-debug-color: rgba(coral, .24);\n\n    $variant: map.get($theme, 'variant');\n\n    %igx-splitter-base {\n        &[aria-orientation='horizontal'] {\n            [dir='rtl'] & {\n                flex-direction: row-reverse !important;\n            }\n        }\n    }\n\n    %handle-area {\n        position: absolute;\n        content: '';\n        width: 100%;\n        height: $hitbox-size;\n        background: if($debug-hitbox, $hitbox-debug-color, transparent);\n    }\n\n    %handle-area--vertical {\n        width: $hitbox-size;\n        height: 100%;\n    }\n\n    %igx-splitter-bar {\n        position: relative;\n        display: flex;\n        flex-grow: 1;\n        justify-content: center;\n        align-items: center;\n        background: $splitter-color;\n        border: rem(1px) solid $splitter-color;\n        z-index: 99;\n        opacity: .68;\n        transition: opacity .15s $out-quad !important;\n\n        &::before {\n            @extend %handle-area;\n            top: 100%;\n        }\n\n        &::after {\n            @extend %handle-area;\n            bottom: 100%;\n        }\n\n        &:hover {\n            transition: all .25s ease-out;\n            opacity: 1;\n        }\n    }\n\n    %igx-splitter-bar--focus {\n        // Remove the default browser outline styles\n        outline: transparent solid rem(1px);\n        box-shadow: inset 0 0 0 rem(1px) var-get($theme, 'focus-color');\n\n        @if $variant == 'indigo-design' {\n            background: var-get($theme, 'focus-color');\n        }\n    }\n\n    %igx-splitter-bar--vertical {\n        flex-direction: column;\n        height: 100%;\n\n        &::before {\n            @extend %handle-area--vertical;\n            top: 0;\n            right: 100%;\n        }\n\n        &::after {\n            @extend %handle-area--vertical;\n            top: 0;\n            left: 100%;\n        }\n    }\n\n    %igx-splitter-handle {\n        background: var-get($theme, 'handle-color');\n        border-radius: var-get($theme, 'border-radius');\n    }\n\n    %igx-splitter-handle--horizontal {\n        width: 25%;\n        height: var-get($theme, 'size');\n        margin: 0 rem(48px);\n    }\n\n    %igx-splitter-handle--vertical {\n        width: var-get($theme, 'size');\n        height: 25%;\n        margin: rem(48px) 0;\n    }\n\n    %igx-splitter-hitbox {\n        position: absolute;\n        content: '';\n        background: if($debug-hitbox, $hitbox-debug-color, transparent);\n    }\n\n    %igx-splitter-expander {\n        position: relative;\n        width: 0;\n        height: 0;\n        border-inline-end: var-get($theme, 'size') solid transparent;\n        border-inline-start: var-get($theme, 'size') solid transparent;\n        cursor: pointer;\n        z-index: 1;\n    }\n\n    %igx-splitter-expander--start {\n        border-bottom: var-get($theme, 'size') solid var-get($theme, 'expander-color');\n\n        &::before {\n            @extend %igx-splitter-hitbox;\n            top: calc(100% - #{map.get($theme, 'size')});\n            left: calc(100% - (#{map.get($theme, 'size')} * 2));\n            width: calc(#{map.get($theme, 'size')} * 4);\n            height: calc(#{map.get($theme, 'size')} * 3);\n        }\n    }\n\n    %igx-splitter-expander--end {\n        border-bottom: unset;\n        border-top: var-get($theme, 'size') solid var-get($theme, 'expander-color');\n\n        &::before {\n            @extend %igx-splitter-hitbox;\n            top: calc(100% - (#{map.get($theme, 'size')} * 2));\n            left: calc(100% - (#{map.get($theme, 'size')} * 2));\n            width: calc(#{map.get($theme, 'size')} * 4);\n            height: calc(#{map.get($theme, 'size')} * 3);\n        }\n    }\n\n    %igx-splitter-expander--start-vertical {\n        border-top: var-get($theme, 'size') solid transparent;\n        border-inline-end: var-get($theme, 'size') solid var-get($theme, 'expander-color');\n        border-bottom: var-get($theme, 'size') solid transparent;\n        border-inline-start: unset;\n\n        &::before {\n            @extend %igx-splitter-hitbox;\n            top: calc(100% - (#{map.get($theme, 'size')} * 2));\n            left: calc(100% - (#{map.get($theme, 'size')} * 2));\n            width: calc(#{map.get($theme, 'size')} * 3);\n            height: calc(#{map.get($theme, 'size')} * 4);\n        }\n    }\n\n    %igx-splitter-expander--end-vertical {\n        border-top: var-get($theme, 'size') solid transparent;\n        border-inline-end: unset;\n        border-bottom: var-get($theme, 'size') solid transparent;\n        border-inline-start: var-get($theme, 'size') solid var-get($theme, 'expander-color');\n\n        &::before {\n            @extend %igx-splitter-hitbox;\n            left: calc(100% - (#{map.get($theme, 'size')} * 2));\n            top: calc(100% - (#{map.get($theme, 'size')} * 2));\n            height: calc(#{map.get($theme, 'size')} * 4);\n            width: calc(#{map.get($theme, 'size')} * 3);\n        }\n    }\n}\n","@use '../mixins' as *;\n\n////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin scale-up-center {\n    @include keyframes(scale-up-center) {\n        0% {\n            transform: scale(.5);\n        }\n\n        100% {\n            transform: scale(1);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-bl {\n    @include keyframes(scale-up-bl) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-ver-center {\n    @include keyframes(scale-up-ver-center) {\n        0% {\n            transform: scaleY(.4);\n        }\n\n        100% {\n            transform: scaleY(1);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-top {\n    @include keyframes(scale-up-top) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 50% 0%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-left {\n    @include keyframes(scale-up-left) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 0% 50%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-ver-top {\n    @include keyframes(scale-up-ver-top) {\n        0% {\n            transform: scaleY(.4);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-tr {\n    @include keyframes(scale-up-tr) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-tl {\n    @include keyframes(scale-up-tl) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-ver-bottom {\n    @include keyframes(scale-up-ver-bottom) {\n        0% {\n            transform: scaleY(.4);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-right {\n    @include keyframes(scale-up-right) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 100% 50%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-hor-center {\n    @include keyframes(scale-up-hor-center) {\n        0% {\n            transform: scaleX(.4);\n        }\n\n        100% {\n            transform: scaleX(1);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-br {\n    @include keyframes(scale-up-br) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-hor-left {\n    @include keyframes(scale-up-hor-left) {\n        0% {\n            transform: scaleX(.4);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-bottom {\n    @include keyframes(scale-up-bottom) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 50% 100%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-hor-right {\n    @include keyframes(scale-up-hor-right) {\n        0% {\n            transform: scaleX(.4);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-center {\n    @include keyframes(scale-down-center) {\n        0% {\n            transform: scale(1);\n        }\n\n        100% {\n            transform: scale(.5);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-bl {\n    @include keyframes(scale-down-bl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-ver-center {\n    @include keyframes(scale-down-ver-center) {\n        0% {\n            transform: scaleY(1);\n        }\n\n        100% {\n            transform: scaleY(.3);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-top {\n    @include keyframes(scale-down-top) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 50% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-left {\n    @include keyframes(scale-down-left) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 0% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-ver-top {\n    @include keyframes(scale-down-ver-top) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scaleY(.3);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-tr {\n    @include keyframes(scale-down-tr) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-tl {\n    @include keyframes(scale-down-tl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-ver-top-bottom {\n    @include keyframes(scale-down-ver-to-bottom) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scaleY(.3);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-right {\n    @include keyframes(scale-down-right) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 100% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-hor-center {\n    @include keyframes(scale-down-hor-center) {\n        0% {\n            transform: scaleX(1);\n        }\n\n        100% {\n            transform: scaleX(.3);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-br {\n    @include keyframes(scale-down-br) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-hor-left {\n    @include keyframes(scale-down-hor-left) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scaleX(.3);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-bottom {\n    @include keyframes(scale-down-bottom) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 50% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-hor-right {\n    @include keyframes(scale-down-hor-right) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scaleX(.3);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @param {number} $start-scale [.5] - The scale to start the animation from.\n/// @param {number} $end-scale [1] - The scale to end the animation at.\n/// @requires {mixin} keyframes\n@mixin scale-in-out($start-scale: .5, $end-scale: 1) {\n    @include keyframes(scale-in-out) {\n        50% {\n            transform: scale($start-scale);\n            transform-origin: 50% 50%;\n        }\n\n        100% {\n            transform: scale($end-scale);\n            transform-origin: 50% 50%;\n        }\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $search-separator-border-color [null] - The combo search box separator color.\n/// @param {Color} $empty-list-placeholder-color [null] - The combo placeholder text color.\n/// @param {Color} $empty-list-background [null] - The combo list background color.\n/// @requires $light-schema\n/// @example scss Change the combo empty list background\n///   $my-combo-theme: igx-checkbox-theme($empty-list-background);\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-combo-theme);\n@function combo-theme(\n    $schema: $light-schema,\n    $search-separator-border-color: null,\n    $empty-list-placeholder-color: null,\n    $empty-list-background: null\n) {\n    $name: 'igx-combo';\n    $combo-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $combo-schema: map.get($schema, $name);\n    } @else {\n        $combo-schema: $schema;\n    }\n\n    $theme: digest-schema($combo-schema);\n\n    @return extend($theme, (\n        name: $name,\n        search-separator-border-color: $search-separator-border-color,\n        empty-list-placeholder-color: $empty-list-placeholder-color,\n        empty-list-background: $empty-list-background\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin combo($theme) {\n    @include css-vars($theme);\n\n    %igx-combo {\n        position: relative;\n        display: block;\n    }\n\n    %igx-combo__checkbox {\n        margin-inline-end: rem(8);\n    }\n\n    %igx-combo__drop-down {\n        position: absolute;\n        width: 100%;\n\n        .igx-drop-down {\n            width: 100%;\n        }\n    }\n\n    %igx-combo__search {\n        padding: rem(8px) rem(16px);\n        margin: 0 !important;\n        z-index: 26;\n        border-bottom: rem(1px) dashed var-get($theme, 'search-separator-border-color');\n    }\n\n    %igx-combo__content {\n        position: relative;\n        overflow: hidden;\n\n        &:focus {\n            outline: transparent;\n        }\n    }\n\n    %igx-combo__add {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        position: relative;\n        padding: rem(16px);\n        background: var-get($theme, 'empty-list-background');\n    }\n\n    %igx-combo__empty {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        color: var-get($theme, 'empty-list-placeholder-color');\n        padding: 0 rem(24px);\n        font-size: rem(13px);\n    }\n\n    // TODO: make this part better\n    %igx-combo__add-item {\n        &%igx-drop-down__item {\n            width: auto !important;\n            padding: 0 !important;\n\n            &:hover {\n                background: transparent!important;\n            }\n        }\n\n        &%igx-drop-down__item--focused {\n            &:focus {\n                background: transparent!important;\n            }\n        }\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $theme - The calendar theme used to style the component.\n@mixin date-picker($theme) {\n    @include css-vars($theme, '.igx-date-picker');\n\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: $variant == 'bootstrap';\n\n    %date-picker {\n        box-shadow: elevation(24);\n        border-radius: border-radius(var-get($theme, 'border-radius'));\n        background: var-get($theme, 'content-background');\n        overflow: hidden;\n\n        %cal-display {\n            background: var-get($theme, 'content-background');\n        }\n\n        %cal-header-display {\n            background: var-get($theme, 'header-background');\n            color: var-get($theme, 'header-text-color');\n        }\n\n        %cal-picker-arrow {\n            color: var-get($theme, 'picker-arrow-color');\n\n            &:hover {\n                color: var-get($theme, 'picker-arrow-hover-color');\n            }\n        }\n\n        %cal-picker-date {\n            color: var-get($theme, 'picker-text-color');\n\n            &:hover,\n            &:focus {\n                color: var-get($theme, 'picker-text-hover-color');\n            }\n        }\n\n        %cal-value {\n            color: var-get($theme, 'content-text-color');\n            min-width: 14.28%;\n\n            @if $bootstrap-theme {\n                &:hover,\n                &:focus {\n                    color: var-get($theme, 'date-selected-text-color');\n                }\n            }\n        }\n\n        %cal-value--label {\n            color: var-get($theme, 'label-color');\n\n            &:hover,\n            &:focus {\n                color: var-get($theme, 'label-color');\n            }\n        }\n\n        %cal-value--weekend {\n            color: var-get($theme, 'weekend-text-color');\n        }\n\n        %cal-value--special {\n            color: var-get($theme, 'date-special-text-color');\n            background: var-get($theme, 'date-special-background');\n        }\n\n        %cal-value--disabled {\n            color: var-get($theme, 'date-disabled-text-color');\n        }\n\n        %cal-value--year-current {\n            color: var-get($theme, 'year-current-text-color');\n\n            @if $bootstrap-theme {\n                &:hover,\n                &:focus {\n                    color: var-get($theme, 'year-hover-text-color');\n                }\n            }\n        }\n\n        %cal-value--year-hover {\n            color: var-get($theme, 'year-hover-text-color');\n        }\n\n        %cal-value--month-hover {\n            color: var-get($theme, 'month-hover-text-color');\n        }\n\n        %cal-value--month-current {\n            color: var-get($theme, 'month-current-text-color');\n        }\n\n        %cal-value--inactive {\n            color: var-get($theme, 'inactive-text-color');\n\n            &:hover {\n                color: var-get($theme, 'inactive-text-color');\n            }\n        }\n\n        %cal-value--selected {\n            color: var-get($theme, 'date-selected-text-color');\n        }\n\n        %cal-value--current {\n            color: var-get($theme, 'date-current-text-color');\n        }\n    }\n\n    %date-picker--vertical {\n        min-width: rem(368px); /* 168px for header + 200px for the content */\n    }\n\n    %date-picker--dropdown {\n        display: flex;\n        flex: 1 0 0;\n        flex-direction: column;\n        box-shadow: elevation(3);\n    }\n\n    %date-picker__buttons {\n        display: flex;\n        justify-content: flex-end;\n        padding: rem(8px);\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {color} $label-color [null] - The color for date range separator label.\n@function date-range-picker-theme(\n    $schema: $light-schema,\n    $label-color: null\n) {\n    $name: 'igx-date-range';\n    $date-range-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $date-range-schema: map.get($schema, $name);\n    } @else {\n        $date-range-schema: $schema;\n    }\n\n    $theme: digest-schema($date-range-schema);\n\n    @return extend($theme, (\n        name: $name,\n        label-color: $label-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin date-range-picker($theme) {\n    @include css-vars($theme);\n\n    $base-scale-size: (\n        'comfortable': rem(16px),\n        'cosy': rem(19px),\n        'compact': rem(22px)\n    );\n\n    %igx-date-range-picker {\n        display: flex;\n\n        > igx-icon {\n            cursor: pointer;\n        }\n\n        igx-input-group {\n            flex: 1;\n        }\n    }\n\n    igx-date-range-start,\n    igx-date-range-end,\n    %igx-date-range-picker__start,\n    %igx-date-range-picker__end {\n        flex: 1 0 0%;\n    }\n\n    %igx-date-range-picker__label {\n        display: flex;\n        align-items: center;\n        color: var-get($theme, 'label-color');\n        margin: 0 rem(8px);\n        padding-top: rem(18px, map.get($base-scale-size, 'comfortable'));\n    }\n\n    %igx-date-range-picker--cosy {\n        %igx-date-range-picker__label {\n            padding-top: rem(18px, map.get($base-scale-size, 'cosy'));\n        }\n    }\n\n    %igx-date-range-picker--compact {\n        %igx-date-range-picker__label {\n            padding-top: rem(18px, map.get($base-scale-size, 'compact'));\n        }\n    }\n\n    %igx-date-range-picker-buttons {\n        display: flex;\n        justify-content: flex-end;\n        padding: 0 rem(16px) rem(16px) rem(16px);\n\n        > * {\n            margin-inline-end: rem(8px);\n\n            &:last-of-type {\n                margin-inline-end: 0;\n            }\n        }\n\n        &:empty {\n            display: none;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-date-range-picker component.\n/// Uses the 'subtitle-1'\n/// categories from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n@mixin date-range-typography(\n    $categories: (\n        label: 'subtitle-1',\n    )\n) {\n    $label: map.get($categories, 'label');\n\n    %igx-date-range__label {\n        @include type-style($label);\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $color [null] - The color of the divider. (Gradients are not supported for dashed dividers).\n/// @requires $light-schema\n/// @example scss Change the color of the divider\n///   $my-divider-theme: divider-theme($color: orange);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-divider-theme);\n@function divider-theme(\n    $schema: $light-schema,\n    $color: null\n) {\n    $name: 'igx-divider';\n    $divider-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $divider-schema: map.get($schema, $name);\n    } @else {\n        $divider-schema: $schema;\n    }\n\n    $theme: digest-schema($divider-schema);\n\n    @return extend($theme, (\n        name: $name,\n        color: $color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin divider($theme) {\n    @include css-vars($theme);\n\n    %igx-divider-display {\n        display: block;\n        height: rem(1px);\n        background: var-get($theme, 'color');\n    }\n\n    %igx-divider--dashed {\n        background: linear-gradient(to right, var-get($theme, 'color') 50%, transparent 50%);\n        background-size: rem(10px) rem(1px); /* dash size */\n    }\n\n    %igx-divider--vertical {\n        display: inline-block;\n        width: rem(1px);\n        min-width: rem(1px);\n        height: auto;\n    }\n\n    %igx-divider--vertical-dashed {\n        background: linear-gradient(to bottom, var-get($theme, 'color') 50%, transparent 50%);\n        background-size: rem(1px) rem(10px); /* dash size */\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $label-color [null] - sets the color for the label.\n/// @param {Number} $symbol-size [null] - the size of the symbols.\n/// @param {Color} $symbol-empty-color [null] - sets the idle color for the symbol when it is a plane text.\n/// @param {Color} $symbol-full-color [null] - sets the color in selected state for the symbol when it is a plane text.\n/// @param {Color} $symbol-empty-filter [null] - the filter(s) used for the empty symbol.\n/// @param {Color} $symbol-full-filter [null] - the filter(s) used for the filled symbol.\n/// @param {Color} $disabled-label-color [null] - sets the color for the label in disabled state.\n/// @param {Color} $disabled-empty-symbol-color [null] - sets the idle color for the symbol in disabled state when it is a plane text.\n/// @param {Color} $disabled-full-symbol-color [null] - sets the color for the symbol in selected/disabled state when it is a plane text.\n/// @requires $light-schema\n/// @example scss Change the rating filled symbol color\n///   $my-rating-theme: rating-theme($symbol-full-color: red);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-rating-theme);\n@function rating-theme(\n    $schema: $light-schema,\n    $rest...\n) {\n\n    $name: 'igc-rating';\n    $rating-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $rating-schema: map.get($schema, $name);\n    } @else {\n        $rating-schema: $schema;\n    }\n\n    $theme: digest-schema($rating-schema);\n\n    @return extend($theme, (name: $name), keywords($rest));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin rating($theme) {\n    @include css-vars($theme: $theme);\n\n    igc-rating::part(label) {\n        color: var-get($theme, 'label-color');\n    }\n\n    igc-rating::part(value-label) {\n        color: color(null, 'gray', 900);\n    }\n\n    igc-rating[disabled]::part(label),\n    igc-rating[disabled]::part(value-label) {\n        color: var-get($theme, 'disabled-label-color');\n    }\n\n    igc-rating[disabled] {\n        --symbol-empty-color: var(--disabled-empty-symbol-color);\n        --symbol-full-color: var(--disabled-full-symbol-color);\n        --symbol-empty-filter: grayscale(100%) opacity(50%);\n        --symbol-full-filter: grayscale(50%);\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:color';\n@use 'sass:math';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use './excel-filtering-theme' as *;\n@use 'igniteui-theming/sass/animations' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $header-background [null] - The table header background color.\n/// @param {Color} $header-text-color [null] - The table header text color.\n/// @param {String} $header-border-width [null] - The border width used for header borders.\n/// @param {String} $header-border-style [null] - The border style used for header borders.\n/// @param {Color} $header-border-color [null] - The color used for header borders.\n/// @param {Color} $header-selected-background [null] - The table header background color when selected (ex. column selection).\n/// @param {Color} $header-selected-text-color [null] - The table header text color when selected (ex. column selection).\n/// @param {Color} $sorted-header-icon-color [null] - The sort icon color when sorted.\n/// @param {color} $sortable-header-icon-hover-color [null] - The icon color on hover in grid header when the column is sortable.\n/// @param {Color} $content-background [null] - The table body background color.\n/// @param {Color} $content-text-color [null] - The table body text color.\n/// @param {Color} $ghost-header-text-color [null] - The dragged header text color.\n/// @param {Color} $ghost-header-icon-color [null] - The dragged header icon color.\n/// @param {Color} $ghost-header-background [null] - The dragged header background color.\n/// @param {Color} $row-odd-background [null] - The background color of odd rows.\n/// @param {Color} $row-even-background [null] - The background color of even rows.\n/// @param {Color} $row-odd-text-color [null] - The text color of odd rows.\n/// @param {Color} $row-even-text-color [null] - The text color of even rows.\n/// @param {Color} $row-selected-background [null] - The selected row background color.\n/// @param {Color} $row-selected-hover-background [null] - The selected row hover background color.\n/// @param {Color} $row-selected-text-color [null] - The selected row text color.\n/// @param {Color} $row-selected-hover-text-color [null] - The selected row hover text color.\n/// @param {Color} $row-hover-background [null] - The hover row background color.\n/// @param {Color} $row-hover-text-color [null] - The hover row text color.\n/// @param {Color} $row-border-color [null] - The row bottom border color.\n/// @param {String} $pinned-border-width [null] - The border width of the pinned border.\n/// @param {String} $pinned-border-style [null] - The CSS border style of the pinned border.\n/// @param {Color} $pinned-border-color [null] - The color of the pinned border.\n/// @param {Color} $cell-active-border-color [null] - The border color for the currently active(focused) cell.\n/// @param {Color} $cell-selected-background [null] - The selected cell background color.\n/// @param {Color} $cell-selected-text-color [null] - The selected cell text color.\n/// @param {Color} $cell-editing-background [null] - The background color of the cell being edited.\n/// @param {Color} $cell-edited-value-color [null] - The text color of a cell that has been edited.\n/// @param {Color} $cell-new-color [null] - The text color of a new, unedited cell. Used when adding new row in a grid.\n/// @param {Color} $cell-disabled-color [null] - The text color of a disabled cell.\n/// @param {Color} $cell-selected-within-background [null] - The background of the selected cell inside a selected row/column.\n/// @param {Color} $cell-selected-within-text-color [null] - The color of the selected cell inside a selected row/column.\n/// @param {Color} $edit-mode-color [null] - The color applied around the row when in editing mode.\n/// @param {Color} $edited-row-indicator [null] - The color applied to the edited row indicator line.\n/// @param {Color} $resize-line-color [null] - The table header resize line color.\n/// @param {Color} $drop-indicator-color [null] - The color applied to the line between the columns when dragging a column.\n/// @param {Color} $grouparea-background [null] - The grid group area background color.\n/// @param {Color} $grouparea-color [null] - The grid group area color.\n/// @param {Color} $group-row-background [null] - The grid group row background color.\n/// @param {Color} $group-row-selected-background [null] - The drop area background on drop color.\n/// @param {Color} $group-label-column-name-text [null] - The grid group row column name text color.\n/// @param {Color} $group-label-icon [null] - The grid group row icon color.\n/// @param {Color} $group-label-text [null] - The grid group row text color.\n/// @param {Color} $expand-all-icon-color [null] - The grid header expand all group rows icon color.\n/// @param {Color} $expand-all-icon-hover-color [null] - The grid header expand all group rows icon hover color.\n/// @param {Color} $expand-icon-color [null] - The grid row expand icon color.\n/// @param {Color} $expand-icon-hover-color [null] - The grid row expand icon hover color.\n/// @param {Color} $active-expand-icon-color [null] - The drop area background on drop color.\n/// @param {Color} $active-expand-icon-hover-color [null] - The drop area background on drop color.\n/// @param {Color} $group-count-background [null] - The grid group row cont badge background color.\n/// @param {Color} $group-count-text-color [null] - The grid group row cont badge text color.\n/// @param {Color} $drop-area-text-color [null] - The drop area text color.\n/// @param {Color} $drop-area-icon-color [null] - The drop area icon color.\n/// @param {Color} $drop-area-background [null] - The drop area background color.\n/// @param {Color} $drop-area-on-drop-background [null] - The drop area background on drop color.\n/// @param {Color} $filtering-background-and [null] - The background color of advanced filtering \"AND\" condition.\n/// @param {Color} $filtering-background-and--focus [null] - The background color on focus/selected of advanced filtering \"AND\" condition.\n/// @param {Color} $filtering-background-or [null] - The background color of advanced filtering \"OR\" condition.\n/// @param {Color} $filtering-background-or--focus [null] - The background color on focus/selected of advanced filtering \"OR\" condition.\n/// @param {Color} $filtering-header-background [null] - The background color of the filtered column header.\n/// @param {Color} $filtering-header-text-color [null] - The text color color of the filtered column header.\n/// @param {Color} $filtering-row-background [null] - The background color of the filtering row.\n/// @param {Color} $filtering-row-text-color [null] - The text-color color of the filtering row.\n/// @param {Color} $tree-filtered-text-color [null] - grouping row background color on focus.\n/// @param {Color} $body-summaries-background [null] - The background color of the summary groups located the body.\n/// @param {Color} $body-summaries-text-color [null] - The text color of the summary results located the body.\n/// @param {Color} $root-summaries-background [null] - The background color of the summary groups located the footer.\n/// @param {Color} $root-summaries-text-color [null] - The text color of the summary results located the footer.\n/// @param {Color} $row-highlight [null] - The grid row highlight indication color.\n/// @param {box-shadow} $grid-shadow [null] - The shadow of the grid.\n/// @param {box-shadow} $drag-shadow [null] - The shadow used for movable elements (ex. column headers).\n/// @param {color} $row-ghost-background [null] - The dragged row background color.\n/// @param {color} $row-drag-color [null] - The row drag handle color.\n/// @param {Color} $grid-border-color [null] - The color of the grid border.\n/// @param {border-radius} $drop-area-border-radius [null] - The border radius used for column drop area.\n/// @requires $light-schema\n/// @example scss Change the header background color\n///   $my-grid-theme: grid-theme($header-background: black);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-grid-theme);\n@function grid-theme(\n    $schema: $light-schema,\n    $elevations: null,\n\n    $header-background: null,\n    $header-text-color: null,\n    $header-border-width: null,\n    $header-border-style: null,\n    $header-border-color: null,\n\n    $header-selected-background: null,\n    $header-selected-text-color: null,\n\n    $sorted-header-icon-color: null,\n\n    $content-background: null,\n    $content-text-color: null,\n\n    $ghost-header-text-color: null,\n    $ghost-header-icon-color: null,\n    $ghost-header-background: null,\n\n    $row-odd-background: null,\n    $row-even-background: null,\n    $row-odd-text-color: null,\n    $row-even-text-color: null,\n    $row-selected-background: null,\n    $row-selected-hover-background: null,\n    $row-selected-text-color: null,\n    $row-selected-hover-text-color: null,\n    $row-hover-background: null,\n    $row-hover-text-color: null,\n    $row-border-color: null,\n\n    $pinned-border-width: null,\n    $pinned-border-style: null,\n    $pinned-border-color: null,\n\n    $cell-active-border-color: null,\n    $cell-selected-background: null,\n    $cell-selected-text-color: null,\n    $cell-editing-background: null,\n    $cell-edited-value-color: null,\n    $cell-new-color: null,\n    $cell-disabled-color: null,\n\n    $edit-mode-color: null,\n    $edited-row-indicator: null,\n\n    $resize-line-color: null,\n    $drop-indicator-color: null,\n\n    $grouparea-background: null,\n    $grouparea-color: null,\n\n    $group-row-background: null,\n    $group-row-selected-background: null,\n    $group-label-column-name-text: null,\n    $group-label-icon: null,\n    $group-label-text: null,\n\n    $expand-all-icon-color: null,\n    $expand-all-icon-hover-color: null,\n\n    $expand-icon-color: null,\n    $expand-icon-hover-color: null,\n\n    $active-expand-icon-color: null,\n    $active-expand-icon-hover-color: null,\n\n    $group-count-background: null,\n    $group-count-text-color: null,\n\n    $drop-area-text-color: null,\n    $drop-area-icon-color: null,\n    $drop-area-background: null,\n    $drop-area-on-drop-background: null,\n\n    $filtering-header-background: null,\n    $filtering-header-text-color: null,\n    $filtering-row-background: null,\n    $filtering-row-text-color: null,\n    $filtering-background-and: null,\n    $filtering-background-or: null,\n    $filtering-background-and--focus: null,\n    $filtering-background-or--focus: null,\n    $tree-filtered-text-color: null,\n    $tree-selected-filtered-row-text-color: null,\n    $tree-selected-filtered-cell-text-color: null,\n\n    $body-summaries-background: null,\n    $body-summaries-text-color: null,\n    $root-summaries-background: null,\n    $root-summaries-text-color: null,\n\n    $row-highlight: null,\n    $grid-shadow: null,\n    $drag-shadow: null,\n    $row-ghost-background: null,\n    $row-drag-color: null,\n    $drop-area-border-radius: null,\n    $grid-border-color: null,\n    $sortable-header-icon-hover-color: null,\n\n    $cell-selected-within-background: null,\n    $cell-selected-within-text-color: null,\n) {\n    $name: 'igx-grid';\n    $selector: 'igx-grid, igx-hierarchical-grid, igx-pivot-grid, igx-tree-grid, igx-advanced-filtering-dialog, igx-grid-excel-style-filtering, .igx-excel-filter__secondary';\n    $grid-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $grid-schema: map.get($schema, $name);\n    } @else {\n        $grid-schema: $schema;\n    }\n\n    $theme: digest-schema($grid-schema);\n\n    @if not($cell-selected-within-text-color) and $cell-selected-within-background {\n        $cell-selected-within-text-color: text-contrast($cell-selected-within-background);\n    }\n\n    @if not($ghost-header-icon-color) and $ghost-header-background {\n        @if meta.type-of($ghost-header-background) == 'color' {\n            $ghost-header-icon-color: rgba(text-contrast($ghost-header-background), .07);\n        }\n    }\n\n    @if not($ghost-header-text-color) and $ghost-header-background {\n        $ghost-header-text-color: text-contrast($ghost-header-background);\n    }\n\n    @if $header-background and meta.type-of($header-background) == 'color' {\n        $header-background: to-opaque($header-background, color($color: 'surface'));\n    }\n\n    @if not($header-text-color) and $header-background {\n        $header-text-color: text-contrast($header-background);\n    }\n\n    @if not($header-selected-text-color) and $header-selected-background {\n        $header-selected-text-color: text-contrast($header-selected-background);\n    }\n\n    @if not($header-border-color) and $header-background {\n        @if meta.type-of($header-background) == 'color' {\n            $header-border-color: rgba(text-contrast($header-background), .24);\n        }\n    }\n\n    @if not($content-text-color) and $content-background {\n        $content-text-color: text-contrast($content-background);\n    }\n\n    @if not($row-odd-background) and $content-background {\n        $row-odd-background: $content-background;\n    }\n\n    @if $row-odd-background and meta.type-of($row-odd-background) == 'color' and color.alpha($row-odd-background) != 1 {\n        $cbg: if($content-background, $content-background, map.get($theme, 'content-background'));\n\n        $row-odd-background: to-opaque($row-odd-background, $cbg);\n    }\n\n    @if not($row-odd-text-color) and $row-odd-background {\n        $row-odd-text-color: text-contrast($row-odd-background);\n    }\n\n    @if not($row-even-background) and $content-background {\n        $row-even-background: $content-background;\n    }\n\n    @if $row-even-background and meta.type-of($row-even-background) == 'color' and color.alpha($row-even-background) != 1 {\n        $cbg: if($content-background, $content-background, map.get($theme, 'content-background'));\n\n        $row-even-background: to-opaque($row-even-background, $cbg);\n    }\n\n    @if not($row-even-text-color) and $row-even-background {\n        $row-even-text-color: text-contrast($row-even-background);\n    }\n\n    @if not($row-hover-background) and $content-background {\n        @if meta.type-of($content-background) == 'color' {\n            $row-hover-background: to-opaque(rgba(text-contrast($content-background), .08), $content-background)\n        }\n    }\n\n    @if not($row-hover-text-color) and $row-hover-background {\n        $row-hover-text-color: text-contrast($row-hover-background);\n    }\n\n    @if not($cell-selected-text-color) and $cell-selected-background {\n        $cell-selected-text-color: text-contrast($cell-selected-background);\n    }\n\n    @if not($row-selected-text-color) and $row-selected-background {\n        $row-selected-text-color: text-contrast($row-selected-background);\n    }\n\n    @if not($row-selected-hover-text-color) and $row-selected-hover-background {\n        $row-selected-hover-text-color: text-contrast($row-selected-hover-background);\n    }\n\n    @if not($row-border-color) and $content-background {\n        @if meta.type-of($content-background) == 'color' {\n            $row-border-color: rgba(text-contrast($content-background), .08)\n        }\n    }\n\n    @if not($pinned-border-color) and $content-background {\n        @if meta.type-of($content-background) == 'color' {\n            $pinned-border-color: rgba(text-contrast($content-background), .08)\n        }\n    }\n\n    @if not($group-row-background) and $header-background {\n        $group-row-background: $header-background\n    }\n\n    @if not($expand-icon-color) and $group-row-background {\n        $expand-icon-color: text-contrast($group-row-background)\n    }\n\n    @if not($group-label-text) and $group-row-selected-background {\n        $group-label-text: text-contrast($group-row-selected-background)\n    }\n\n    @if not($expand-icon-color) and $group-row-selected-background {\n        $expand-icon-color: text-contrast($group-row-selected-background)\n    }\n\n    @if not($group-count-background) and $group-row-selected-background {\n        $group-count-background: text-contrast($group-row-selected-background);\n    }\n\n    @if not($expand-all-icon-color) and $header-background {\n        @if meta.type-of($header-background) == 'color' {\n            $expand-all-icon-color: rgba(text-contrast($header-background), .87);\n        }\n    }\n\n    @if not($expand-all-icon-hover-color) and $header-background {\n        $expand-all-icon-hover-color: text-contrast($header-background);\n    }\n\n    @if not($group-label-text) and $group-row-background {\n        $group-label-text: text-contrast($group-row-background)\n    }\n\n    @if not($group-count-background) and $group-row-background {\n        $group-count-background: text-contrast($group-row-background);\n    }\n\n    @if not($group-count-text-color) and $group-count-background {\n        $group-count-text-color: text-contrast($group-count-background);\n    }\n\n    @if not($grouparea-background) and $header-background {\n        $grouparea-background: $header-background\n    }\n\n    @if not($grouparea-color) and $grouparea-background {\n        @if meta.type-of($grouparea-background) == 'color' {\n            $grouparea-color: rgba(text-contrast($grouparea-background), .8)\n        }\n    }\n\n    @if not($grouparea-color) and $header-background {\n        @if meta.type-of($header-background) == 'color' {\n            $grouparea-color: rgba(text-contrast($header-background), .8)\n        }\n    }\n\n    @if not($drop-area-background) and $grouparea-background {\n        $drop-area-background: text-contrast($grouparea-background);\n    }\n\n    @if not($drop-area-on-drop-background) and $drop-area-background {\n        $drop-area-on-drop-background: $drop-area-background;\n    }\n\n    @if not($drop-area-text-color) and $drop-area-background {\n        $drop-area-text-color: text-contrast($drop-area-background)\n    }\n\n    @if not($drop-area-icon-color) and $drop-area-background {\n        $drop-area-icon-color: text-contrast($drop-area-background)\n    }\n\n    @if not($filtering-header-background) and $header-background {\n        @if meta.type-of($header-background) == 'color' {\n            @if luminance($header-background) < .5 {\n                $filtering-header-background: to-opaque(color.scale($header-background, $lightness: 5%));\n            } @else {\n                $filtering-header-background: to-opaque(color.scale($header-background, $lightness: -5%));\n            }\n        }\n    }\n\n    @if not($filtering-header-text-color) and $filtering-header-background {\n        $filtering-header-text-color: text-contrast($filtering-header-background);\n    }\n\n    @if not($filtering-row-background) and $header-background {\n        @if meta.type-of($header-background) == 'color' {\n            @if luminance($header-background) < .5 {\n                $filtering-row-background: to-opaque(color.scale($header-background, $lightness: 5%));\n            } @else {\n                $filtering-row-background: to-opaque(color.scale($header-background, $lightness: -5%));\n            }\n        }\n    }\n\n    @if not($filtering-row-text-color) and $filtering-row-background {\n        $filtering-row-text-color: text-contrast(to-opaque($filtering-row-background));\n    }\n\n    @if not($body-summaries-text-color) and $body-summaries-background {\n        $body-summaries-text-color: text-contrast($body-summaries-background);\n    }\n\n    @if not($root-summaries-text-color) and $root-summaries-background {\n        $root-summaries-text-color: text-contrast($root-summaries-background);\n    }\n\n    @if not($grid-shadow) {\n        $grid-elevation: map.get($grid-schema, 'grid-elevation');\n        $grid-shadow: elevation($grid-elevation);\n    }\n\n    @if not($drag-shadow) {\n        $drag-elevation: map.get($grid-schema, 'drag-elevation');\n        $drag-shadow: elevation($drag-elevation);\n    }\n\n    @if not($drop-area-border-radius) {\n        $drop-area-border-radius: border-radius(map.get($theme, 'drop-area-border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n\n        header-background: $header-background,\n        header-text-color: $header-text-color,\n        header-selected-background:  $header-selected-background,\n        header-selected-text-color:  $header-selected-text-color,\n        header-border-width: $header-border-width,\n        header-border-style: $header-border-style,\n        header-border-color: $header-border-color,\n\n        sorted-header-icon-color: $sorted-header-icon-color,\n\n        ghost-header-text-color: $ghost-header-text-color,\n        ghost-header-icon-color: $ghost-header-icon-color,\n        ghost-header-background: $ghost-header-background,\n\n        content-background: $content-background,\n        content-text-color: $content-text-color,\n\n        row-odd-background: $row-odd-background,\n        row-even-background: $row-even-background,\n        row-odd-text-color: $row-odd-text-color,\n        row-even-text-color: $row-even-text-color,\n        row-selected-background: $row-selected-background,\n        row-selected-hover-background: $row-selected-hover-background,\n        row-selected-text-color: $row-selected-text-color,\n        row-selected-hover-text-color: $row-selected-hover-text-color,\n        row-hover-background: $row-hover-background,\n        row-hover-text-color: $row-hover-text-color,\n        row-border-color: $row-border-color,\n\n        pinned-border-width: $pinned-border-width,\n        pinned-border-style: $pinned-border-style,\n        pinned-border-color: $pinned-border-color,\n\n        cell-active-border-color: $cell-active-border-color,\n        cell-selected-background: $cell-selected-background,\n        cell-editing-background: $cell-editing-background,\n        cell-selected-text-color: $cell-selected-text-color,\n\n        edit-mode-color: $edit-mode-color,\n        edited-row-indicator: $edited-row-indicator,\n        cell-edited-value-color: $cell-edited-value-color,\n        cell-new-color: $cell-new-color,\n\n        cell-disabled-color: $cell-disabled-color,\n\n        resize-line-color: $resize-line-color,\n\n        drop-indicator-color: $drop-indicator-color,\n\n        grouparea-background: $grouparea-background,\n        grouparea-color: $grouparea-color,\n\n        group-label-column-name-text: $group-label-column-name-text,\n        group-label-icon: $group-label-icon,\n        group-label-text: $group-label-text,\n\n        expand-all-icon-color: $expand-all-icon-color,\n        expand-all-icon-hover-color: $expand-all-icon-hover-color,\n\n        expand-icon-color: $expand-icon-color,\n        expand-icon-hover-color: $expand-icon-hover-color,\n        active-expand-icon-color: $active-expand-icon-color,\n        active-expand-icon-hover-color: $active-expand-icon-hover-color,\n\n        group-count-background: $group-count-background,\n        group-count-text-color: $group-count-text-color,\n\n        group-row-background: $group-row-background,\n        group-row-selected-background: $group-row-selected-background,\n\n        drop-area-text-color: $drop-area-text-color,\n        drop-area-icon-color: $drop-area-icon-color,\n        drop-area-on-drop-background: $drop-area-on-drop-background,\n        drop-area-background: $drop-area-background,\n\n        filtering-header-background: $filtering-header-background,\n        filtering-header-text-color: $filtering-header-text-color,\n        filtering-row-background: $filtering-row-background,\n        filtering-row-text-color: $filtering-row-text-color,\n        filtering-background-and: $filtering-background-and,\n        filtering-background-or: $filtering-background-or,\n        filtering-background-and--focus: $filtering-background-and--focus,\n        filtering-background-or--focus: $filtering-background-or--focus,\n\n        tree-filtered-text-color: $tree-filtered-text-color,\n        tree-selected-filtered-row-text-color: $tree-selected-filtered-row-text-color,\n        tree-selected-filtered-cell-text-color: $tree-selected-filtered-cell-text-color,\n\n        body-summaries-background: $body-summaries-background,\n        body-summaries-text-color: $body-summaries-text-color,\n        root-summaries-background: $root-summaries-background,\n        root-summaries-text-color: $root-summaries-text-color,\n\n        row-highlight: $row-highlight,\n        grid-shadow: $grid-shadow,\n        drag-shadow: $drag-shadow,\n        row-ghost-background: $row-ghost-background,\n        row-drag-color: $row-drag-color,\n        drop-area-border-radius: $drop-area-border-radius,\n        sortable-header-icon-hover-color: $sortable-header-icon-hover-color,\n        grid-border-color: $grid-border-color,\n\n        cell-selected-within-background: $cell-selected-within-background,\n        cell-selected-within-text-color: $cell-selected-within-text-color,\n    ));\n}\n\n@mixin _filtering-scroll-mask($theme, $dir) {\n    display: block;\n    position: absolute;\n    width: rem(10px);\n    content: '';\n    inset-block: rem(-2px);\n    background: linear-gradient(to #{$dir}, var-get($theme, 'filtering-row-background'), transparent);\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} excel-filtering\n@mixin grid($theme) {\n    @include css-vars($theme);\n\n    @include scale-in-ver-center();\n\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: $variant == 'bootstrap';\n    $not-bootstrap-theme: $variant != 'bootstrap';\n\n    $cbx-size: map.get((\n        material: rem(20px),\n        fluent: rem(20px),\n        bootstrap: rem(14px),\n        indigo-design: rem(20px),\n    ), $variant);\n    $cbx-bs-size: rem(14px);\n\n    $grid-shadow: var-get($theme, 'grid-shadow');\n\n    $grid-caption-fs: rem(20px);\n    $grid-caption-lh: rem(32px);\n    $grid-caption-padding: rem(16px) rem(24px);\n\n    $grid-head-fs: rem(12px);\n    $grid-head-fw: 600;\n    $transition: all 120ms $ease-in-out-cubic;\n\n    // Cell\n    $grid-cell-align-num: end;\n    $grid-cell-fs: rem(13px);\n    $grid-cell-lh: rem(16px);\n    $grid-cell-pinned-style: rem(1px) solid;\n    $grid-cell-pinned-border-color: color($color: 'gray', $variant: 300);\n\n    $grid-header-border: var-get($theme, 'header-border-width') var-get($theme, 'header-border-style') var-get($theme, 'header-border-color');\n\n    $cell-pin: (\n        style: var-get($theme, 'pinned-border-width') var-get($theme, 'pinned-border-style'),\n        color: var-get($theme, 'pinned-border-color')\n    );\n\n    $padding-comfortable: rem(24px);\n    $padding-cosy: rem(16px);\n    $padding-compact: rem(12px);\n\n    $grid-header-padding: (\n        comfortable: 0 $padding-comfortable,\n        cosy: 0 $padding-cosy,\n        compact: 0 $padding-compact\n    );\n\n    $pivot-row-aria-padding: (\n        comfortable: $padding-comfortable,\n        cosy: $padding-cosy,\n        compact: $padding-compact\n    );\n\n    $grid-cbx-padding: (\n        comfortable: $padding-comfortable,\n        cosy: $padding-cosy,\n        compact: $padding-compact\n    );\n\n    $cbx-padding: map.get($grid-cbx-padding, 'comfortable');\n    $cbx-padding-cosy: map.get($grid-cbx-padding, 'cosy');\n    $cbx-padding-compact: map.get($grid-cbx-padding, 'compact');\n\n    $grid-header-height: (\n        comfortable: rem(50px),\n        cosy: rem(40px),\n        compact: rem(32px)\n    );\n\n    $drop-area-height: (\n        comfortable: rem(32px),\n        cosy: rem(24px),\n        compact: rem(24px)\n    );\n\n    $cell-padding-comfortable: rem(24px);\n    $cell-padding-cosy: rem(16px);\n    $cell-padding-compact: rem(12px);\n\n    $grid-cell-padding: (\n        comfortable: 0 $cell-padding-comfortable,\n        cosy: 0 $cell-padding-cosy,\n        compact: 0 $cell-padding-compact\n    );\n\n    $hierarchical-grid-indent: (\n        comfortable: rem(24px),\n        cosy: rem(16px),\n        compact: rem(12px)\n    );\n\n    $hierarchical-action-icon: rem(24px);\n\n    $grouparea-padding: (\n        comfortable: 0 rem(24px),\n        cosy: 0 rem(16px),\n        compact: 0 rem(12px)\n    );\n\n    $grouparea-min-height: (\n        comfortable: rem(57px),\n        cosy: rem(49px),\n        compact: rem(41px)\n    );\n\n    $grid-grouping-indicator-padding: (\n        comfortable: rem(24px),\n        cosy: rem(16px),\n        compact: rem(12px)\n    );\n\n    $indicator-icon-width: rem(24px);\n    $drag-icon-size: rem(24px);\n    $grouping-padding-right: rem(12px);\n\n    $grid-header-weight: map.get((\n        material: 600,\n        fluent: 800,\n        bootstrap: 700,\n        indigo-design: 600,\n    ), $variant);\n\n    %disable-focus-styles {\n        outline: 0;\n    }\n\n    %grid-display {\n        --igx-tree-indent-size: #{rem(24px)};\n\n        position: relative;\n        display: grid;\n        grid-template-rows: auto auto auto 1fr auto auto;\n        grid-template-columns: 100%;\n        overflow: hidden;\n        box-shadow: $grid-shadow;\n\n        @if $variant == 'fluent' {\n            box-shadow: 0 0 0 rem(1px) var-get($theme, 'grid-border-color');\n        }\n\n        outline-style: none;\n        z-index: 1;\n\n        %cbx-display {\n            min-width: $cbx-size;\n        }\n    }\n\n    %grid-display-cosy {\n        --igx-tree-indent-size: #{rem(16px)};\n    }\n\n    %grid-display-compact {\n        --igx-tree-indent-size: #{rem(12px)};\n    }\n\n    %grid-caption {\n        display: flex;\n        align-items: center;\n        font-size: $grid-caption-fs;\n        line-height: $grid-caption-lh;\n        padding: $grid-caption-padding;\n        grid-row: 1;\n    }\n\n    %grid-thead,\n    %grid-tfoot {\n        position: relative;\n        display: flex;\n        background: var-get($theme, 'header-background');\n        color: var-get($theme, 'header-text-color');\n        overflow: hidden;\n        outline-style: none;\n\n        %grid-row {\n            position: relative;\n            background: inherit;\n            color: inherit;\n            z-index: 2;\n\n            &:hover {\n                background: inherit;\n                color: inherit;\n            }\n        }\n\n        > [aria-activedescendant] {\n            outline-style: none;\n        }\n    }\n\n    %grid-thead {\n        border-bottom: $grid-header-border;\n\n        @if $bootstrap-theme {\n            border-bottom-width: rem(2px);\n        }\n\n        z-index: 2;\n\n        %grid__cbx-selection--push {\n            align-items: flex-start;\n            padding-top: math.div(map.get($grid-header-height, 'comfortable') - rem(20px), 2);\n        }\n\n        %grid-row {\n            border-bottom: none;\n        }\n    }\n\n    %grid-thead-container {\n        grid-row: 3;\n        display: flex;\n        overflow: hidden;\n\n        %igx-grid__drag-indicator {\n            cursor: default;\n        }\n\n        %grid-row--mrl {\n            %igx-grid__hierarchical-expander--header,\n            %igx-grid__header-indentation,\n            %igx-grid__row-indentation,\n            %grid__cbx-selection {\n                border-bottom: var-get($theme, 'header-border-width') var-get($theme, 'header-border-style') var-get($theme, 'header-border-color');\n            }\n        }\n    }\n\n    %grid-thead--cosy {\n        %grid__cbx-selection--push--cosy {\n            align-items: flex-start;\n            padding-top: math.div(map.get($grid-header-height, 'cosy') - rem(20px), 2);\n        }\n    }\n\n    %grid-thead--compact {\n        %grid__cbx-selection--push--compact {\n            align-items: flex-start;\n            padding-top: math.div(map.get($grid-header-height, 'compact') - rem(20px), 2);\n        }\n    }\n\n    %grid-thead-title {\n        flex-basis: auto !important;\n        align-items: center !important;\n        border-bottom: $grid-header-border;\n        height: map.get($grid-header-height, 'comfortable');\n    }\n\n    %grid-thead-title--pinned {\n        border-inline-end: map.get($cell-pin, 'style') map.get($cell-pin, 'color') !important;\n    }\n\n    %grid-thead-title--cosy {\n        height: map.get($grid-header-height, 'cosy');\n        padding: map.get($grid-cell-padding, 'cosy');\n    }\n\n    %grid-thead-title--compact {\n        height: map.get($grid-header-height, 'compact');\n        padding: map.get($grid-cell-padding, 'compact');\n    }\n\n    %grid-thead-group {\n        display: flex;\n        flex-flow: row nowrap;\n    }\n\n    /* We set those with position relative\n    so that the drop indicators be scoped\n    to their respective group. The item\n    being the topmost element, while the\n    subgroup encapsulates children of each\n    thead item and group.\n    */\n    %grid-thead-item {\n        display: flex;\n        flex-flow: column nowrap;\n\n        %grid-thead-group {\n            flex: 1 1 auto;\n        }\n\n        %grid-cell-header {\n            flex: 1 1 auto;\n        }\n\n        %grid-thead-title {\n            flex: 0 0 auto;\n        }\n    }\n\n    %grid-thead-item,\n    %grid-thead-subgroup {\n        position: relative;\n    }\n\n    %grid-tfoot {\n        grid-row: 5;\n        border-top: $grid-header-border;\n        z-index: 10001;\n    }\n\n    %grid-footer {\n        grid-row: 7;\n    }\n\n    %grid-display-container-thead {\n        width: 100%;\n        overflow: visible;\n    }\n\n    %grid-display-container-tr {\n        width: 100%;\n        overflow: visible;\n    }\n\n    %grid-mrl-block {\n        display: grid;\n        background: inherit;\n        position: relative;\n\n        %grid-thead-item {\n            display: flex;\n        }\n\n        %grid-cell-header {\n            align-items: center;\n            flex-grow: 1;\n            border-bottom: $grid-header-border;\n        }\n\n        %grid-cell-display {\n            border-inline-end: rem(1px) solid var-get($theme, 'row-border-color');\n            border-bottom: rem(1px) solid var-get($theme, 'row-border-color');\n        }\n    }\n\n    %grid-row--mrl {\n        &%grid-row {\n            border-bottom-color: transparent;\n        }\n\n        %grid__cbx-selection,\n        %igx-grid__row-indentation,\n        %igx-grid__drag-indicator {\n            border-bottom: rem(1px) solid var-get($theme, 'row-border-color');\n        }\n    }\n\n    %grid-tbody {\n        position: relative;\n        background: var-get($theme, 'content-background');\n        color: var-get($theme, 'content-text-color');\n        overflow: hidden;\n        z-index: 1;\n        outline-style: none;\n    }\n\n    %grid-tbody-container {\n        position: relative;\n        display: flex;\n        grid-row: 4;\n        overflow: hidden;\n    }\n\n    %grid-tbody-message {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100%;\n        color: var-get($theme, 'content-text-color');\n        flex-direction: column;\n        padding: rem(24px);\n    }\n\n    %igx-grid__loading {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        min-height: rem(100px);\n\n        > %circular-display {\n            width: rem(50);\n            height: rem(50);\n        }\n    }\n\n    %grid-scroll {\n        grid-row: 6;\n        display: flex;\n        flex-flow: row nowrap;\n        width: 100%;\n        background: var-get($theme, 'header-background');\n        z-index: 10001;\n    }\n\n    %grid-thead-thumb {\n        background: var-get($theme, 'header-background');\n        border-inline-start: rem(1px) solid var-get($theme, 'header-border-color');\n    }\n\n    %grid-tfoot-thumb {\n        position: absolute;\n        top: 0;\n        inset-inline-end: 0;\n        background: var-get($theme, 'header-background');\n        border-inline-start: rem(1px) solid var-get($theme, 'header-border-color');\n    }\n\n    %grid-tbody-scrollbar {\n        background: var-get($theme, 'content-background');\n        border-inline-start: rem(1px) solid var-get($theme, 'row-border-color');\n        position: relative;\n    }\n\n    %grid-tbody-scrollbar-start {\n        background: var-get($theme, 'header-background');\n    }\n\n    %grid-tbody-scrollbar-main {\n        position: relative;\n    }\n\n    %grid-tbody-scrollbar-end {\n        background: var-get($theme, 'header-background');\n    }\n\n    %grid-scroll-start {\n        background: var-get($theme, 'header-background');\n    }\n\n    %grid-scroll-main {\n        igx-display-container {\n            height: 0;\n        }\n\n        igx-horizontal-virtual-helper {\n            height: 100%;\n        }\n    }\n\n    %grid-row {\n        display: flex;\n        background: var-get($theme, 'content-background');\n        border-bottom: rem(1px) solid var-get($theme, 'row-border-color');\n        outline-style: none;\n        position: relative;\n        background-clip: content-box !important;\n\n        &:hover {\n            background: var-get($theme, 'row-hover-background');\n            color: var-get($theme, 'row-hover-text-color');\n\n            %grid-cell--column-selected {\n                color: var-get($theme, 'row-selected-hover-text-color');\n                background: var-get($theme, 'row-selected-hover-background');\n            }\n\n            %grid-cell--cross-selected {\n                color: var-get($theme, 'cell-selected-within-text-color');\n                background: var-get($theme, 'cell-selected-within-background');\n            }\n        }\n\n        &%igx-grid__tr--ghost {\n            @include css-vars((\n                name: 'igx-grid-row',\n                row-ghost-background: map.get($theme, 'row-ghost-background'),\n                row-drag-color: map.get($theme, 'row-drago-color')\n            ));\n\n            background: var-get($theme, 'row-ghost-background');\n            color: var-get($theme, 'row-drag-color');\n            z-index: 1;\n        }\n    }\n\n    %igx-grid__drag-indicator {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: map.get($grid-cell-padding, 'comfortable');\n        flex: 1 0 auto;\n        // Fix for IE 11\n        min-width: calc(#{$drag-icon-size} + #{$cell-padding-comfortable});\n        background: inherit;\n        z-index: 4;\n        cursor: move;\n        border-inline-end: rem(1px) solid transparent;\n        background-clip: border-box;\n\n        igx-icon {\n            width: var(--igx-icon-size, #{$drag-icon-size});\n            height: var(--igx-icon-size, #{$drag-icon-size});\n            font-size: var(--igx-icon-size, #{$drag-icon-size});\n        }\n    }\n\n    %igx-grid__drag-indicator--cosy {\n        padding: map.get($grid-cell-padding, 'cosy');\n        // Fix for IE 11\n        min-width: calc(#{$drag-icon-size} + #{$cell-padding-cosy});\n    }\n\n    %igx-grid__drag-indicator--compact {\n        padding: map.get($grid-cell-padding, 'compact');\n        // Fix for IE 11\n        min-width: calc(#{$drag-icon-size} + #{$cell-padding-compact});\n    }\n\n    %igx-grid__drag-indicator--header {\n        border-inline-end: $grid-header-border;\n    }\n\n    %igx-grid__drag-indicator--off {\n        color: var-get($theme, 'row-drag-color');\n    }\n\n    %igx-grid__tr--drag {\n        opacity: .5;\n    }\n\n    %grid-row--odd {\n        background: var-get($theme, 'row-odd-background');\n        color: var-get($theme, 'row-odd-text-color');\n    }\n\n    %grid-row--even {\n        background: var-get($theme, 'row-even-background');\n        color: var-get($theme, 'row-even-text-color');\n    }\n\n    %igx-grid__tr--expanded {\n        border-bottom: none;\n    }\n\n    %igx-grid__tr--pinned {\n        position: relative;\n        background: inherit;\n        z-index: 10000;\n\n        %igx-grid__hierarchical-expander--empty {\n            border-inline-end: rem(1px) solid var-get($theme, 'header-border-color');\n        }\n    }\n\n    %igx-grid__tr--pinned-top {\n        border-bottom: map.get($cell-pin, 'style') map.get($cell-pin, 'color') !important;\n    }\n\n    %igx-grid__tr--pinned-bottom {\n        border-top: map.get($cell-pin, 'style') map.get($cell-pin, 'color') !important;\n        position: absolute;\n        bottom: 0;\n    }\n\n    %igx-grid__td--centered {\n        justify-content: center;\n    }\n\n    %igx-grid__td--bool {\n        igx-icon {\n            width: var(--igx-icon-size, #{rem(18px)});\n            height: var(--igx-icon-size, #{rem(18px)});\n            font-size: var(--igx-icon-size, #{rem(18px)});\n        }\n\n        %igx-icon--error {\n            color: color($color: 'gray', $variant: 500);\n        }\n    }\n\n    %igx-grid__td--bool-true {\n        %igx-icon--success {\n            color: color($color: 'gray', $variant: 700);\n        }\n    }\n\n    %igx-grid__tr--edit {\n        border-bottom: rem(1px) solid var-get($theme, 'edit-mode-color');\n        position: relative;\n\n        &::after {\n            content: '';\n            position: absolute;\n            height: rem(1);\n            width: 100%;\n            top: rem(-1);\n            inset-inline-start: 0;\n            background: var-get($theme, 'edit-mode-color');\n        }\n\n        &%grid-row {\n            border-bottom: rem(1px) solid var-get($theme, 'edit-mode-color');\n        }\n\n        %igx-grid__td--editing {\n            border: none;\n\n            %form-group-bundle--focus {\n                caret-color: var-get($theme, 'edit-mode-color') !important;\n            }\n\n            %form-group-bundle--fluent--focus {\n                &::after {\n                    border: none !important;\n                }\n            }\n\n            %form-group-border {\n                background: var-get($theme, 'edit-mode-color') !important;\n            }\n        }\n\n        [aria-readonly='true'] {\n            color: var-get($theme, 'cell-disabled-color');\n\n            igx-icon {\n                color: var-get($theme, 'cell-disabled-color');\n            }\n        }\n    }\n\n    %igx-grid__tr--inner {\n        display: flex;\n        background: inherit;\n    }\n\n    %igx-grid__tr--header {\n        display: flex;\n        align-items: center;\n    }\n\n    %igx-grid__tr--add-animate {\n        @include animation(scale-in-ver-center .2s $ease-in-out-quad);\n    }\n\n    %grid-row--edit-mrl {\n        &:first-of-type::after {\n            top: 0;\n            z-index: 5;\n        }\n    }\n\n    %igx-grid__tr--edited {\n        &::before {\n            content: '';\n            position: absolute;\n            width: if($variant == 'indigo-design', rem(4px), rem(2px));\n            height: 100%;\n            z-index: 10000;\n            background: var-get($theme, 'edited-row-indicator');\n        }\n    }\n\n    %grid-row--group {\n        position: relative;\n        background: var-get($theme, 'header-background') !important;\n    }\n\n    %igx-grid-row--filtered {\n        %grid-cell-text {\n            color: var-get($theme, 'tree-filtered-text-color');\n        }\n\n        %igx-grid__tree-grouping-indicator {\n            color: var-get($theme, 'tree-filtered-text-color');\n\n            &:hover {\n                color: var-get($theme, 'tree-filtered-text-color');\n            }\n        }\n\n        %grid-cell--selected {\n            %grid-cell-text {\n                color: var-get($theme, 'tree-selected-filtered-cell-text-color');\n            }\n\n            %igx-grid__tree-grouping-indicator {\n                color: var-get($theme, 'tree-selected-filtered-cell-text-color');\n\n                &:hover {\n                    color: var-get($theme, 'tree-selected-filtered-cell-text-color');\n                }\n            }\n        }\n    }\n\n    %grid-row--selected--filtered {\n        %grid-cell-text {\n            color: var-get($theme, 'tree-selected-filtered-row-text-color');\n        }\n\n        %igx-grid__tree-grouping-indicator {\n            color: var-get($theme, 'tree-selected-filtered-row-text-color');\n\n            &:hover {\n                color: var-get($theme, 'tree-selected-filtered-row-text-color');\n            }\n        }\n\n        %grid-cell--selected {\n            %grid-cell-text {\n                color: var-get($theme, 'tree-selected-filtered-cell-text-color');\n            }\n\n            %igx-grid__tree-grouping-indicator {\n                color: var-get($theme, 'tree-selected-filtered-cell-text-color');\n\n                &:hover {\n                    color: var-get($theme, 'tree-selected-filtered-cell-text-color');\n                }\n            }\n        }\n    }\n\n    %igx-grid__tree-grouping-indicator {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        user-select: none;\n        outline-style: none;\n        margin-inline-end: rem(8);\n        cursor: pointer;\n\n        color: var-get($theme, 'expand-icon-color');\n\n        &:hover {\n            color: var-get($theme, 'expand-icon-hover-color')\n        }\n\n        [dir='rtl'] & {\n            transform: scaleX(-1);\n        }\n    }\n\n    %igx-grid__tree-loading-indicator {\n        width: rem(24px, 16px);\n        height: rem(24px, 16px);\n        margin-inline-end: rem(8px, 16px);\n\n        %circular-outer {\n            stroke: var-get($theme, 'expand-icon-color');\n        }\n\n        > %circular-display {\n            width: rem(24);\n            height: rem(24);\n        }\n    }\n\n    %grid-cell-display {\n        position: relative;\n        display: flex;\n        flex: 1 1 0%;\n        align-items: center;\n        outline-style: none;\n        padding: map.get($grid-cell-padding, 'comfortable');\n        font-size: $grid-cell-fs;\n        line-height: $grid-cell-lh;\n        color: inherit;\n        text-align: start;\n        background-clip: border-box !important;\n    }\n\n    // This is no longer being extended and is left\n    // here for reference purposes only. It seems setting\n    // overflow: hidden on the cell prevents drag and selection\n    // of the cell.\n    // See github issue #9821\n    %igx-grid__td--tree-cell {\n        overflow: hidden;\n    }\n\n    %grid-cell-text {\n        @include ellipsis();\n    }\n\n    %grid-cell-display--cosy {\n        padding: map.get($grid-cell-padding, 'cosy');\n    }\n\n    %grid-cell-display--compact {\n        padding: map.get($grid-cell-padding, 'compact');\n    }\n\n    %grid-cell--fixed-width {\n        flex-grow: 0;\n        outline-style: none;\n    }\n\n    %grid-cell--active {\n        box-shadow: inset 0 0 0 rem(1px) var-get($theme, 'cell-active-border-color');\n\n        %igx-grid__filtering-cell,\n        %grid-cell-header {\n            border-inline-end-color: var-get($theme, 'cell-active-border-color');\n            border-bottom-color: var-get($theme, 'cell-active-border-color');\n        }\n    }\n\n    %grid-cell--invalid {\n        padding-inline-end: rem(4px) !important;\n\n        > igx-icon {\n            margin-inline-start: auto;\n            color: color($color: 'error');\n            width: var(--igx-icon-size, rem(18px));\n            height: var(--igx-icon-size, rem(18px));\n            font-size: var(--igx-icon-size, rem(18px));\n        }\n\n        %grid-cell-text {\n            width: 100%;\n        }\n\n        .igx-input-group__bundle {\n            &:focus-within {\n                &::after {\n                    border: none !important;\n                }\n            }\n        }\n    }\n\n    %grid-cell--valid {\n        box-shadow: inset 0 0 0 rem(2px) color($color: 'success') !important;\n    }\n\n    %grid-cell--pinned-selected,\n    %grid-cell--selected {\n        color: var-get($theme, 'cell-selected-text-color');\n        background: var-get($theme, 'cell-selected-background');\n        // this is causing an issue https://github.com/IgniteUI/igniteui-angular/issues/4981\n        // border-bottom: 0;\n\n        %igx-grid__tree-grouping-indicator {\n            &:hover {\n                color: var-get($theme, 'cell-selected-text-color');\n            }\n        }\n    }\n\n    %grid-row--selected {\n        color: var-get($theme, 'row-selected-text-color');\n        background: var-get($theme, 'row-selected-background');\n\n        %grid-cell--selected,\n        %grid-cell--pinned-selected {\n            color: var-get($theme, 'cell-selected-within-text-color');\n            background: var-get($theme, 'cell-selected-within-background');\n        }\n\n        &:hover {\n            background: var-get($theme, 'row-selected-hover-background');\n            color: var-get($theme, 'row-selected-hover-text-color');\n\n            %grid-cell--column-selected {\n                color: var-get($theme, 'row-selected-hover-text-color');\n                background: var-get($theme, 'row-selected-hover-background');\n            }\n        }\n\n        %igx-grid__tree-grouping-indicator {\n            color: var-get($theme, 'row-selected-text-color');\n\n            &:hover {\n                color: var-get($theme, 'row-selected-text-color');\n            }\n        }\n    }\n\n    %grid-cell--column-selected {\n        color: var-get($theme, 'row-selected-text-color');\n        background: var-get($theme, 'row-selected-background');\n    }\n\n    %grid-cell--cross-selected {\n        color: var-get($theme, 'cell-selected-within-text-color');\n        background: var-get($theme, 'cell-selected-within-background');\n    }\n\n    %igx-grid__td--new {\n        color: var-get($theme, 'cell-new-color');\n    }\n\n    %igx-grid__td--edited {\n        %grid-cell-text {\n            font-style: italic;\n            color: var-get($theme, 'cell-edited-value-color');\n            padding: 0 rem(1px);\n        }\n    }\n\n    %igx-grid__tr--deleted {\n        %grid-cell-text {\n            font-style: italic;\n            color: color(map.get($theme, 'palette'), 'error');\n            text-decoration: line-through;\n        }\n    }\n\n    %igx-grid__tr--disabled {\n        %grid-cell-text {\n            color: var-get($theme, 'cell-disabled-color');\n        }\n    }\n\n    %igx-grid__td--editing {\n        background: var-get($theme, 'cell-editing-background') !important;\n        box-shadow: inset 0 0 0 rem(2px) var-get($theme, 'edit-mode-color');\n        padding: 0 !important;\n\n        // Have a more stable visual editing experience\n        igx-input-group,\n        igx-select,\n        igx-date-picker,\n        igx-time-picker {\n            width: 100%;\n            height: 100%;\n        }\n\n        igx-input-group {\n            --theme: fluent;\n            padding-top: 0 !important;\n        }\n\n        .igx-input-group__bundle {\n            border: none !important;\n\n            &::before {\n                content: none !important;\n            }\n        }\n\n        &.igx-grid__td--invalid {\n            box-shadow: inset 0 0 0 rem(2px) color($color: 'error') !important;\n            padding-inline-end: rem(4px) !important;\n        }\n\n        igx-prefix,\n        igx-suffix {\n            padding-top: 0 !important;\n            padding-bottom: 0 !important;\n        }\n\n        igx-date-range-picker {\n            height: 100%;\n        }\n\n        igx-time-picker [igxLabel] {\n            display: none;\n        }\n\n        %form-group-bundle {\n            height: 100%;\n        }\n\n        input {\n            margin: 0 auto;\n            max-width: 100%;\n        }\n\n        %form-group-input {\n            // ignore global typography\n            font-size: $grid-cell-fs !important;\n            line-height: $grid-cell-lh !important;\n        }\n    }\n\n    %grid-cell--pinned {\n        position: relative;\n        background: inherit;\n        z-index: 9999;\n    }\n\n    %grid-cell--pinned--column-selected {\n        color: var-get($theme, 'row-selected-text-color');\n        background: var-get($theme, 'row-selected-background');\n\n        &:hover {\n            background: var-get($theme, 'row-selected-hover-background');\n            color: var-get($theme, 'row-selected-text-color');\n        }\n    }\n\n    %grid-cell--pinned-last {\n        border-inline-end: map.get($cell-pin, 'style') map.get($cell-pin, 'color') !important;\n\n        %igx-grid__filtering-cell,\n        %grid-cell-header {\n            border-inline-end: none;\n        }\n\n        &%grid-cell--editing {\n            border-inline-end: map.get($cell-pin, 'style') var-get($theme, 'cell-selected-background') !important;\n        }\n    }\n\n    %grid-cell--pinned-first {\n        border-inline-start: map.get($cell-pin, 'style') map.get($cell-pin, 'color') !important;\n\n        &%grid-cell--editing {\n            border-inline-start: map.get($cell-pin, 'style') var-get($theme, 'cell-selected-background') !important;\n        }\n    }\n\n    %grid-cell--row-pinned-first {\n        overflow: hidden;\n    }\n\n    %grid-cell--pinned-chip {\n        margin-inline-end: rem(12px);\n    }\n\n    %grid-cell--pinned-chip--cosy {\n        margin-inline-end: rem(8px);\n    }\n\n    %grid-cell--pinned-chip--compact {\n        margin-inline-end: rem(4px);\n    }\n\n    %grid-cell-header {\n        flex-flow: row nowrap;\n        justify-content: space-between;\n        align-items: flex-end;\n        font-size: $grid-head-fs;\n        font-weight: $grid-head-fw;\n        min-width: 0;\n        padding: map.get($grid-header-padding, 'comfortable');\n        border-inline-end: $grid-header-border;\n        outline-style: none;\n        overflow: hidden;\n        transition: color 250ms ease-in-out;\n    }\n\n    %grid-cell-header--filtering {\n        background: var-get($theme, 'filtering-header-background');\n        color: var-get($theme, 'filtering-header-text-color');\n        z-index: 3;\n    }\n\n    %grid-cell-header--cosy {\n        padding: map.get($grid-header-padding, 'cosy');\n        min-height: map.get($grid-header-height, 'cosy');\n    }\n\n    %grid-cell-header--compact {\n        padding: map.get($grid-header-padding, 'compact');\n        min-height: map.get($grid-header-height, 'compact');\n    }\n\n    %grid-cell-header-title {\n        @include ellipsis();\n        font-weight: $grid-header-weight;\n        min-width: 3ch;\n        user-select: none;\n        cursor: initial;\n        flex-grow: 1; /* hey IE, the text should take most of the space */\n        // align-self: flex-end; /* commenting out for now on external request */\n        line-height: math.div(map.get($grid-header-height, 'comfortable'), $grid-head-fs);\n        transition: color 250ms ease-in-out;\n    }\n\n    %grid-cell-header-title--cosy {\n        line-height: math.div(map.get($grid-header-height, 'cosy'), $grid-head-fs);\n    }\n\n    %grid-cell-header-title--compact {\n        line-height: math.div(map.get($grid-header-height, 'compact'), $grid-head-fs);\n    }\n\n    %grid-cell-header-icons {\n        display: inline-flex;\n        align-items: center;\n        justify-content: flex-end;\n        user-select: none;\n        min-width: rem(30px); /* sort-icon + filter icon width */\n        height: map.get($grid-header-height, 'comfortable');\n        align-self: flex-end;\n\n        &:empty {\n            min-width: 0;\n        }\n\n        .sort-icon {\n            position: relative;\n            display: flex;\n\n            igx-icon {\n                width: var(--igx-icon-size, #{rem(15px)});\n                height: var(--igx-icon-size, #{rem(15px)});\n                font-size: var(--igx-icon-size, #{rem(15px)});\n            }\n\n            &::after {\n                content: attr(data-sortIndex);\n                position: absolute;\n                top: rem(-5px);\n                inset-inline-end: rem(-1px);\n                font-size: rem(10px);\n                text-align: end;\n                font-family: sans-serif;\n                line-height: rem(10px);\n            }\n        }\n    }\n\n\n    %igx-grid-th__expander {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-inline-end: rem(8px);\n        cursor: pointer;\n\n        igx-icon {\n            color: var-get($theme, 'expand-icon-color');\n        }\n\n        &:hover {\n            igx-icon {\n                color: var-get($theme, 'expand-icon-hover-color');\n            }\n        }\n    }\n\n    %igx-grid-th__group-title {\n        @include ellipsis();\n    }\n\n    %igx-grid-th--collapsible {\n        justify-content: normal;\n    }\n\n    %igx-grid-th--selectable {\n        color: var-get($theme, 'header-selected-text-color');\n        background: var-get($theme, 'header-selected-background');\n\n        @if $variant != 'indigo-design' {\n            opacity: .7;\n\n            &%grid__drag-ghost-image {\n                opacity: 1;\n            }\n        } @else {\n            opacity: 1;\n        }\n\n        .sort-icon {\n            color: var-get($theme, 'header-selected-text-color');\n\n            ::after {\n                background: var-get($theme, 'header-selected-background');\n            }\n        }\n\n        &%igx-grid-th--sorted {\n            .sort-icon {\n                color: var-get($theme, 'header-selected-text-color');\n\n                &:focus,\n                &:hover {\n                    color: var-get($theme, 'header-selected-text-color');\n                }\n            }\n        }\n    }\n\n    %igx-grid-th--selected {\n        color: var-get($theme, 'header-selected-text-color');\n        background: var-get($theme, 'header-selected-background');\n\n        .sort-icon::after {\n            background: var-get($theme, 'header-selected-background');\n        }\n\n        &%igx-grid-th--sorted {\n            .sort-icon {\n                color: var-get($theme, 'header-selected-text-color');\n\n                &:focus,\n                &:hover {\n                    color: var-get($theme, 'header-selected-text-color');\n                }\n            }\n        }\n    }\n\n    %igx-grid-th--active {\n        @extend %grid-cell--active;\n\n        %igx-grid-th--selected,\n        %igx-grid-th--selectable {\n            @extend %grid-cell--active;\n        }\n    }\n\n    %igx-grid-summary--active {\n        @extend %grid-cell--active !optional;\n    }\n\n    %igx-grid-th--sortable {\n        .sort-icon {\n            cursor: pointer;\n            opacity: .7;\n\n            &:hover {\n                opacity: 1;\n            }\n        }\n    }\n\n    %igx-grid-th--sorted {\n        .sort-icon {\n            opacity: 1;\n            color: var-get($theme, 'sorted-header-icon-color');\n\n            &:hover {\n                color: var-get($theme, 'sortable-header-icon-hover-color');\n            }\n        }\n    }\n\n    %igx-grid-th--filtrable {\n        %grid-cell-header-title {\n            opacity: .7;\n        }\n    }\n\n    %igx-grid-th--filtrable-sortable {\n        .sort-icon {\n            cursor: pointer;\n            opacity: .7;\n\n            &:hover {\n                opacity: 1;\n            }\n        }\n    }\n\n    .sort-icon {\n        transition: all 250ms ease-in-out;\n    }\n\n    %grid-cell-header-icons--cosy {\n        height: map.get($grid-header-height, 'cosy');\n    }\n\n    %grid-cell-header-icons--compact {\n        height: map.get($grid-header-height, 'compact');\n    }\n\n    %grid-cell-number {\n        text-align: $grid-cell-align-num;\n        justify-content: flex-end;\n\n        %grid-cell-header-icons {\n            justify-content: flex-start;\n            order: -1;\n\n            .sort-icon {\n                order: 1;\n            }\n        }\n    }\n\n    %grid__cbx-selection {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background: inherit;\n        z-index: 4;\n        background-clip: border-box;\n    }\n\n    %cbx-padding {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        // The min-width here plays the role of padding because of IE11\n        min-width: calc(#{$cbx-size} + (#{$cbx-padding} * 2));\n    }\n\n    %cbx-padding--cosy {\n        min-width: calc(#{$cbx-size} + (#{$cbx-padding-cosy} * 2));\n    }\n\n    %cbx-padding--compact {\n        min-width: calc(#{$cbx-size} + (#{$cbx-padding-compact} * 2));\n    }\n\n    %grid__resize-handle {\n        position: absolute;\n        width: rem(4px);\n        top: 0;\n        inset-inline-end: rem(-2px);\n        height: 100%;\n        z-index: 2;\n    }\n\n    %grid__resize-line {\n        position: absolute;\n        cursor: col-resize;\n        width: rem(4px);\n        background: var-get($theme, 'resize-line-color');\n        z-index: 2;\n\n        &::before,\n        &::after {\n            position: absolute;\n            content: '';\n            height: 100%;\n            width: rem(96px);\n        }\n\n        &::before {\n            inset-inline-end: 100%;\n        }\n\n        &::after {\n            inset-inline-start: 100%;\n        }\n    }\n\n    %grid-summaries {\n        display: flex;\n        overflow: hidden;\n        background: var-get($theme, 'root-summaries-background');\n        outline-style: none;\n\n        %igx-grid-summary__result {\n            color: var-get($theme, 'root-summaries-text-color');\n        }\n    }\n\n    %grid-summaries--body {\n        background: var-get($theme, 'body-summaries-background');\n        border-bottom: rem(1px) dashed var-get($theme, 'row-border-color');\n\n        &:last-of-type {\n            border-bottom: none;\n        }\n\n        %igx-grid-summary__result {\n            color: var-get($theme, 'body-summaries-text-color');\n        }\n    }\n\n    %grid-summaries-patch {\n        @if $bootstrap-theme {\n            background: color($color: 'gray', $variant: 100);\n        } @else {\n            background: inherit;\n        }\n        position: relative;\n        z-index: 1;\n        border-inline-end: rem(1px) solid var-get($theme, 'header-border-color');\n    }\n\n    // Column moving\n    %igx-grid-th__drop-indicator-left,\n    %igx-grid-th__drop-indicator-right {\n        position: absolute;\n        width: rem(1px);\n        height: 100%;\n        top: 0;\n        z-index: 1;\n    }\n\n    %igx-grid-th__drop-indicator-left {\n        inset-inline-start: rem(-1px);\n    }\n\n    %igx-grid-th__drop-indicator-right {\n        inset-inline-end: rem(-1px);\n    }\n\n    %igx-grid-th__drop-indicator--active {\n        &%igx-grid-th__drop-indicator-left,\n        &%igx-grid-th__drop-indicator-right {\n            border-inline-end: rem(1px) solid var-get($theme, 'drop-indicator-color');\n        }\n\n        &::after,\n        &::before {\n            position: absolute;\n            content: '';\n            width: 0;\n            height: 0;\n            border-style: solid;\n            inset-inline-start: rem(-3px);\n        }\n\n        &::before {\n            bottom: 0;\n            border-width: 0 rem(4px) rem(4px);\n            border-color: transparent transparent var-get($theme, 'drop-indicator-color');\n        }\n\n        &::after {\n            top: 0;\n            border-width: rem(4px) rem(4px) 0;\n            border-color: var-get($theme, 'drop-indicator-color') transparent transparent;\n        }\n    }\n\n    %grid__scroll-on-drag-left,\n    %grid__scroll-on-drag-right {\n        position: absolute;\n        width: rem(15px);\n        top: 0;\n        height: 100%;\n        z-index: 25;\n    }\n\n    %grid__scroll-on-drag-left {\n        inset-inline-start: 0;\n    }\n\n    %grid__scroll-on-drag-right {\n        inset-inline-end: 0;\n    }\n\n    %grid__scroll-on-drag-pinned {\n        position: absolute;\n        width: rem(15px);\n        height: 100%;\n        top: 0;\n        z-index: 25;\n    }\n\n    %grid__drag-ghost-image {\n        position: absolute;\n        display: flex;\n        align-items: center;\n        background: var-get($theme, 'ghost-header-background');\n        color: var-get($theme, 'ghost-header-text-color');\n        min-width: rem(168px);\n        max-width: rem(320px);\n        height: map.get($grid-header-height, 'comfortable');\n        min-height: map.get($grid-header-height, 'comfortable');\n        top: rem(-99999px);\n        inset-inline-start: rem(-99999px);\n        border: none;\n        box-shadow: var-get($theme, 'drag-shadow');\n        overflow: hidden;\n        z-index: 20;\n\n        %grid-cell-header-title {\n            @include ellipsis();\n            flex: 1 0 0;\n            text-align: end;\n        }\n\n        %grid-cell-header-icons {\n            display: none;\n        }\n\n        %grid-thead-title {\n            border: none;\n        }\n    }\n\n    %grid__drag-ghost-image--cosy {\n        height: map.get($grid-header-height, 'cosy');\n        min-height: map.get($grid-header-height, 'cosy');\n    }\n\n    %grid__drag-ghost-image--compact {\n        height: map.get($grid-header-height, 'compact');\n        min-height: map.get($grid-header-height, 'compact');\n    }\n\n    %grid__drag-ghost-image-icon {\n        color: var-get($theme, 'ghost-header-icon-color');\n        margin-inline-end: rem(12px);\n    }\n\n    %grid__drag-ghost-image-icon-group {\n        color: var-get($theme, 'ghost-header-icon-color');\n        padding: var-get($grid-header-padding, 'comfortable');\n        padding-inline-end: 0;\n        margin-inline-end: rem(8);\n    }\n\n    %igx-grid__drag-col-header {\n        background: var-get($theme, 'header-background');\n\n        %grid-cell-header {\n            > * {\n                opacity: .4;\n            }\n        }\n    }\n\n    // Group by section\n    %igx-grid__group-row {\n        background: var-get($theme, 'group-row-background');\n        display: flex;\n        outline-style: none;\n        border-bottom: rem(1px) solid var-get($theme, 'row-border-color');\n        min-height: map.get($grid-header-height, 'comfortable');\n\n        %igx-grid__drag-indicator {\n            cursor: default;\n            flex-grow: 0;\n        }\n    }\n\n    %igx-grid__group-row--active {\n        background: var-get($theme, 'group-row-selected-background');\n        @extend %grid-cell--active !optional;\n\n        %igx-grid__grouping-indicator {\n            color: var-get($theme, 'expand-icon-color');\n        }\n\n        %igx-grid__drag-indicator {\n            border: rem(1px) solid var-get($theme, 'cell-active-border-color');\n            border-inline-start-width: 0;\n            border-inline-end-width: 0;\n            box-shadow: inset rem(1px) 0 0 0 var-get($theme, 'cell-active-border-color');\n        }\n\n        &:hover {\n            background: var-get($theme, 'group-row-selected-background');\n        }\n    }\n\n    %igx-grid__group-row--cosy {\n        min-height: map.get($grid-header-height, 'cosy');\n    }\n\n    %igx-grid__group-row--compact {\n        min-height: map.get($grid-header-height, 'compact');\n    }\n\n    %igx-group-label {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        line-height: rem(16px);\n\n        > * {\n            margin-inline-end: rem(4px);\n\n            &:last-child {\n                margin-inline-end: 0;\n            }\n        }\n    }\n\n    %igx-group-label__icon {\n        user-select: none;\n\n        igx-icon {\n            color: var-get($theme, 'group-label-icon');\n            width: var(--igx-icon-size, #{rem(16px)});\n            height: var(--igx-icon-size, #{rem(16px)});\n            font-size: var(--igx-icon-size, #{rem(16px)});\n        }\n    }\n\n    %igx-group-label__column-name {\n        color: var-get($theme, 'group-label-column-name-text');\n        font-weight: 600;\n        font-size: rem(12px);\n    }\n\n    %igx-group-label__count-badge {\n        > div {\n            background: var-get($theme, 'group-count-background');\n            color: var-get($theme, 'group-count-text-color');\n            font-size: $grid-head-fs;\n        }\n    }\n\n    %igx-group-label__text {\n        font-size: rem(13px);\n        color: var-get($theme, 'group-label-text')\n    }\n\n    [dir='rtl'] {\n        %igx-grid__group-content {\n            padding-inline-start: map.get($grid-grouping-indicator-padding, 'comfortable');\n        }\n\n        %igx-grid__group-content--cosy {\n            padding-inline-start: map.get($grid-grouping-indicator-padding, 'cosy');\n        }\n\n        %igx-grid__group-content--compact{\n            padding-inline-start: map.get($grid-grouping-indicator-padding, 'compact');\n        }\n\n        %igx-group-label {\n            > * {\n                margin-inline-start: rem(4px);\n\n                &:last-child {\n                    margin-inline-start: 0;\n                }\n            }\n        }\n    }\n\n    %igx-grid__group-content {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        flex: 1 1 auto;\n        padding-inline-start: map.get($grid-grouping-indicator-padding, 'comfortable');\n        min-height: map.get($grid-header-height, 'comfortable');\n\n        &:focus {\n            outline: transparent;\n        }\n    }\n\n    %igx-grid__group-content--cosy {\n        padding-inline-start: map.get($grid-grouping-indicator-padding, 'cosy');\n        min-height: map.get($grid-header-height, 'cosy');\n    }\n\n    %igx-grid__group-content--compact{\n        padding-inline-start: map.get($grid-grouping-indicator-padding, 'compact');\n        min-height: map.get($grid-header-height, 'compact');\n    }\n\n    %igx-grid__row-indentation {\n        position: relative;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding-inline-start: map.get($grid-grouping-indicator-padding, 'comfortable');\n        padding-inline-end: map.get($grid-grouping-indicator-padding, 'comfortable');\n        border-inline-end: rem(1px) solid var-get($theme, 'header-border-color');\n        background: inherit;\n        z-index: 1;\n        background-clip: border-box;\n\n        &::after {\n            content: '';\n            position: absolute;\n            width: 100%;\n            height: rem(1px);\n            bottom: rem(-1px);\n            inset-inline-start: 0;\n            background: transparent;\n        }\n\n        %igx-button--icon {\n            width: rem(28px);\n            height: rem(28px);\n            color: var-get($theme, 'expand-all-icon-color');\n        }\n\n        &:focus,\n        &:hover {\n            %igx-button--icon {\n                color: var-get($theme, 'expand-all-icon-hover-color');\n            }\n        }\n    }\n\n    %igx-grid__row-indentation--cosy {\n        padding-inline-start: map.get($grid-grouping-indicator-padding, 'cosy');\n        padding-inline-end: map.get($grid-grouping-indicator-padding, 'cosy')\n    }\n\n    %igx-grid__row-indentation--compact {\n        padding-inline-start: map.get($grid-grouping-indicator-padding, 'compact');\n        padding-inline-end: map.get($grid-grouping-indicator-padding, 'compact')\n    }\n\n    %igx-grid-grouparea {\n        grid-row: 2;\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        flex-wrap: wrap;\n        border-bottom: $grid-header-border;\n        background: var-get($theme, 'grouparea-background');\n        color: var-get($theme, 'grouparea-color');\n        min-height: map.get($grouparea-min-height, 'comfortable');\n        padding: map.get($grouparea-padding, 'comfortable');\n        z-index: 2;\n        height: 100%;\n        overflow: hidden;\n\n        &:focus {\n            outline-style: none;\n        }\n\n        %igx-chip {\n            margin-top: rem(8px);\n            margin-bottom: rem(8px);\n        }\n    }\n\n    %igx-grid-grouparea__connector {\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        margin: 0 rem(4px);\n\n        igx-icon {\n            width: var(--igx-icon-size, #{rem(16px)});\n            height: var(--igx-icon-size, #{rem(16px)});\n            font-size: var(--igx-icon-size, #{rem(16px)});\n        }\n\n        [dir='rtl'] & {\n            transform: scaleX(-1);\n        }\n    }\n\n    %igx-grid-grouparea--cosy {\n        min-height: map.get($grouparea-min-height, 'cosy');\n        padding: map.get($grouparea-padding, 'cosy');\n\n        %igx-chip {\n            margin-top: rem(8px);\n            margin-bottom: rem(8px);\n        }\n    }\n\n    %igx-grid-grouparea--compact {\n        min-height: map.get($grouparea-min-height, 'compact');\n        padding: map.get($grouparea-padding, 'compact');\n\n        %igx-chip {\n            margin-top: rem(4px);\n            margin-bottom: rem(4px);\n        }\n    }\n\n    %igx-drop-area {\n        min-width: rem(80px);\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        height: map.get($drop-area-height, 'comfortable');\n        border-radius: var-get($theme, 'drop-area-border-radius');\n        padding: map.get($grid-cell-padding, 'comfortable');\n        flex: 1 0 0%;\n        background: var-get($theme, 'drop-area-background');\n\n        %igx-drop-area__icon {\n            color: var-get($theme, 'drop-area-icon-color');\n            width: rem(16px);\n            height: rem(16px);\n            font-size: rem(16px);\n            margin-inline-end: rem(8px);\n        }\n    }\n\n    %igx-drop-area--hover {\n        background: var-get($theme, 'drop-area-on-drop-background');\n    }\n\n    %igx-drop-area--cosy {\n        height: map.get($drop-area-height, 'cosy');\n        border-radius: var-get($theme, 'drop-area-border-radius');\n        padding: map.get($grid-cell-padding, 'cosy');\n    }\n\n    %igx-drop-area--compact {\n        height: map.get($drop-area-height, 'compact');\n        border-radius: var-get($theme, 'drop-area-border-radius');\n        padding: map.get($grid-cell-padding, 'compact');\n    }\n\n    %igx-drop-area__text {\n        @include ellipsis();\n        color: var-get($theme, 'drop-area-text-color');\n        font-size: rem(13px);\n    }\n\n    %igx-grid__grouping-indicator {\n        position: relative;\n        display: flex;\n\n        user-select: none;\n        justify-content: center;\n        align-items: center;\n        z-index: 1;\n        cursor: pointer;\n        padding-inline-end: $grouping-padding-right;\n        margin-inline-start: #{map.get($grid-grouping-indicator-padding, 'comfortable')};\n        min-height: map.get($grid-header-height, 'comfortable');\n\n        igx-icon {\n            color: var-get($theme, 'expand-icon-color');\n            width: var(--igx-icon-size, #{$indicator-icon-width});\n        }\n\n        &:hover,\n        &:focus {\n            outline-style: none;\n\n            igx-icon {\n                color: var-get($theme, 'expand-icon-hover-color');\n            }\n        }\n\n        [dir='rtl'] & {\n            transform: scaleX(-1);\n        }\n    }\n\n    %igx-grid__grouping-indicator--cosy {\n        min-height: map.get($grid-header-height, 'cosy');\n        margin-inline-start: #{map.get($grid-grouping-indicator-padding, 'cosy')};\n    }\n\n    %igx-grid__grouping-indicator--compact {\n        min-height: map.get($grid-header-height, 'compact');\n        margin-inline-start: #{map.get($grid-grouping-indicator-padding, 'compact')};\n    }\n\n    %igx-grid__header-indentation {\n        position: relative;\n        padding-inline-end: map.get($grid-grouping-indicator-padding, 'comfortable');\n        border-inline-end: rem(1px) solid var-get($theme, 'header-border-color');\n        background: var-get($theme, 'header-background');\n        z-index: 4;\n    }\n\n    %igx-grid__header-indentation--cosy {\n        padding-inline-end: map.get($grid-grouping-indicator-padding, 'cosy');\n    }\n\n    %igx-grid__header-indentation--compact {\n        padding-inline-end: map.get($grid-grouping-indicator-padding, 'compact');\n    }\n\n    %igx-grid__group-expand-btn {\n        position: absolute;\n        cursor: pointer;\n        user-select: none;\n        top: calc(50% - 12px);\n        inset-inline-start: map.get($grid-grouping-indicator-padding, 'comfortable');\n\n        &:hover {\n            color: var-get($theme, 'expand-icon-hover-color');\n        }\n\n        &%igx-grid__group-expand-btn--push {\n            top: math.div(map.get($grid-header-height, 'comfortable') - rem(24px), 2);\n        }\n    }\n\n    %igx-grid__group-expand-btn--cosy {\n        inset-inline-start: map.get($grid-grouping-indicator-padding, 'cosy');\n\n        &%igx-grid__group-expand-btn--push {\n            top: math.div(map.get($grid-header-height, 'cosy') - rem(24px), 2);\n        }\n    }\n\n    %igx-grid__group-expand-btn--compact {\n        inset-inline-start: map.get($grid-grouping-indicator-padding, 'compact');\n\n        &%igx-grid__group-expand-btn--push {\n            top: math.div(map.get($grid-header-height, 'compact') - rem(24px), 2);\n        }\n    }\n\n    @for $i from 1 through 10 {\n        %igx-grid__row-indentation--level-#{$i} {\n            padding-inline-start: calc(#{$i * map.get($grid-grouping-indicator-padding, 'comfortable')} + #{$indicator-icon-width});\n        }\n\n        %igx-grid__group-row--padding-level-#{$i} {\n            %igx-grid__grouping-indicator {\n                padding-inline-start: #{$i * map.get($grid-grouping-indicator-padding, 'comfortable')};\n            }\n        }\n\n        %igx-grid__row-indentation-cosy--level-#{$i} {\n            padding-inline-start: calc(#{$i * map.get($grid-grouping-indicator-padding, 'cosy')} + #{$indicator-icon-width});\n        }\n\n        %igx-grid__group-row-cosy--padding-level-#{$i} {\n            %igx-grid__grouping-indicator {\n                padding-inline-start: #{$i * map.get($grid-grouping-indicator-padding, 'cosy')};\n            }\n        }\n\n        %igx-grid__row-indentation-compact--level-#{$i} {\n            padding-inline-start: calc(#{$i * map.get($grid-grouping-indicator-padding, 'compact')} + #{$indicator-icon-width});\n        }\n\n        %igx-grid__group-row-compact--padding-level-#{$i} {\n            %igx-grid__grouping-indicator {\n                padding-inline-start: #{$i * map.get($grid-grouping-indicator-padding, 'compact')};\n            }\n        }\n    }\n\n    %igx-grid__outlet {\n        z-index: 10002;\n        position: fixed;\n    }\n\n    %igx-grid__loading-outlet {\n        z-index: 10003;\n\n        > %overlay-wrapper--modal {\n            background: none;\n        }\n\n        %circular-display {\n            width: rem(50);\n            height: rem(50);\n        }\n    }\n\n    %igx-grid__row-editing-outlet {\n        z-index: 10000;\n        position: absolute;\n\n        %overlay-wrapper {\n            /* Change wrapper position from 'fixed' to 'absolute' so that it is hidden when scrolled below the parent grid body content. */\n            position: absolute;\n        }\n    }\n\n    %igx-grid__addrow-snackbar {\n        position: absolute;\n        z-index: 5;\n        bottom: rem(24px);\n        inset-inline-start: 50%;\n        transform: translateX(-50%);\n    }\n\n    %igx-grid__filtering-cell {\n        display: flex;\n        align-items: center;\n        border-inline-end: $grid-header-border;\n        border-top: $grid-header-border;\n        height: map.get($grid-header-height, 'comfortable');\n        padding: map.get($grid-header-padding, 'comfortable');\n        overflow: hidden;\n\n        igx-chips-area {\n            transition: transform .25s $ease-out-back;\n            flex-wrap: nowrap;\n\n            .igx-filtering-chips__connector {\n                font-size: rem(12px);\n                text-transform: uppercase;\n                font-weight: 600;\n                margin: 0 rem(8px);\n            }\n        }\n    }\n\n    %igx-grid__filtering-cell--selected {\n        color: var-get($theme, 'header-selected-text-color');\n        background: var-get($theme, 'header-selected-background');\n    }\n\n    %igx-grid__filtering-cell-indicator {\n        position: relative;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding-inline-end: rem(8px);\n        margin-inline-start: rem(8px);\n        cursor: pointer;\n        visibility: visible;\n\n        igx-icon {\n            width: var(--igx-icon-size, #{rem(18px)});\n            height: var(--igx-icon-size, #{rem(18px)});\n            font-size: var(--igx-icon-size, #{rem(18px)});\n        }\n\n        %igx-badge-display {\n            /* start of IE vertical alignment fix */\n            top: 50%;\n            transform: translateY(-50%);\n            /* end of IE vertical alignment fix */\n            position: absolute;\n            width: rem(14px);\n            height: rem(14px);\n            min-width: rem(14px);\n            font-size: rem(12px);\n            text-align: center;\n            inset-inline-end: 0;\n        }\n    }\n\n    %igx-grid__filtering-cell-indicator--hidden {\n        visibility: hidden;\n    }\n\n    %igx-grid__filtering-cell--cosy {\n        height: map.get($grid-header-height, 'cosy');\n        padding: map.get($grid-header-padding, 'comfortable');\n    }\n\n    %igx-grid__filtering-cell--compact {\n        height: map.get($grid-header-height, 'compact');\n        padding: map.get($grid-header-padding, 'comfortable');\n    }\n\n    %igx-grid__filtering-row {\n        position: absolute;\n        display: flex;\n        width: 100%;\n        height: map.get($grid-header-height, 'comfortable');\n        padding: map.get($grid-cell-padding, 'cosy');\n        align-items: center;\n        justify-content: space-between;\n        background: var-get($theme, 'filtering-row-background');\n        color: var-get($theme, 'filtering-row-text-color');\n        inset-inline-start: 0;\n        bottom: 0;\n        z-index: 3;\n\n        &::after {\n            display: block;\n            position: absolute;\n            content: '';\n            background: inherit;\n            inset-inline-start: 0;\n            inset-inline-end: 0;\n            top: 0;\n            bottom: 0;\n            box-shadow: 0 rem(1px) 0 var-get($theme, 'filtering-row-background'),\n                0 rem(4px) rem(10px) rgba(0, 0, 0, .12);\n            z-index: -1;\n        }\n\n        igx-input-group {\n            --theme: fluent;\n            width: 100%;\n            max-width: rem(200px);\n            min-width: rem(140px);\n        }\n\n        igx-prefix:focus {\n            color: color(map.get($theme, 'palette'), 'secondary');\n        }\n\n        igx-suffix  {\n            igx-icon {\n                outline-style: none;\n\n                &:focus {\n                    color: color($color: 'secondary');\n                }\n\n                + igx-icon {\n                    margin-inline-start: rem(4px);\n                }\n            }\n        }\n    }\n\n    %igx-grid__filtering-dropdown-items {\n        display: flex;\n        align-items: center;\n    }\n\n    %igx-grid__filtering-dropdown-text {\n        margin-inline-start: rem(16px);\n    }\n\n    %igx-grid__filtering-row--cosy {\n        height: map.get($grid-header-height, 'cosy');\n    }\n\n    %igx-grid__filtering-row--compact {\n        height: map.get($grid-header-height, 'compact');\n    }\n\n    %igx-grid__filtering-row-main {\n        display: flex;\n        flex: 1;\n        overflow: hidden;\n        max-width: calc(100% - 176px);\n        min-width: rem(56px);\n\n        igx-chips-area {\n            transition: transform .25s $ease-out-back;\n            flex-wrap: nowrap;\n            margin: 0 rem(8px);\n        }\n\n        igx-chip {\n            margin: 0 rem(4px);\n        }\n\n        [igxButton] {\n            igx-icon {\n                position: absolute;\n                inset-inline-start: rem(12px);\n                /* IE fix for vertical alignment*/\n                top: 50%;\n                transform: translateY(-50%);\n            }\n\n            span {\n                margin-inline-start: rem(16px);\n            }\n        }\n    }\n\n    %igx-grid__filtering-scroll-start {\n        width: rem(24px);\n        height: rem(24px);\n        position: relative;\n        overflow: visible;\n        margin: 0 rem(8px);\n        z-index: 1;\n\n        &::after {\n            @include _filtering-scroll-mask($theme, right);\n            inset-inline-start: calc(100% + 6px);\n        }\n\n        [dir='rtl'] & {\n            transform: scaleX(-1);\n\n            &::after {\n                content: initial;\n            }\n\n            &::before {\n                @include _filtering-scroll-mask($theme, right);\n                inset-inline-end: calc(100% + 6px);\n            }\n        }\n    }\n\n    %igx-grid__filtering-scroll-end {\n        width: rem(24px);\n        height: rem(24px);\n        position: relative;\n        overflow: visible;\n        margin: 0 rem(8px);\n        z-index: 1;\n\n        &::before {\n            @include _filtering-scroll-mask($theme, left);\n            inset-inline-end: calc(100% + 6px);\n        }\n\n        [dir='rtl'] & {\n            transform: scaleX(-1);\n\n            &::before {\n                content: initial;\n            }\n\n            &::after {\n                @include _filtering-scroll-mask($theme, left);\n                inset-inline-start: calc(100% + 6px);\n            }\n        }\n    }\n\n    %igx-grid__tr--highlighted {\n        position: relative;\n\n        &::after {\n            content: '';\n            position: absolute;\n            top: 0;\n            inset-inline-start: 0;\n            width: rem(4px);\n            height: 100%;\n            background: var-get($theme, 'row-highlight');\n            z-index: 3;\n        }\n\n        %igx-grid__tr--edited {\n            &::before {\n                inset-inline-start: rem(4px);\n            }\n        }\n\n        &::before {\n            inset-inline-start: rem(4px);\n        }\n    }\n\n    %igx-grid__tr-container {\n        border-bottom: rem(1px) solid var-get($theme, 'row-border-color');\n    }\n\n    %igx-grid__tr-container--active {\n        @extend %grid-cell--active !optional;\n    }\n\n    %igx-grid__hierarchical-expander {\n        user-select: none;\n        background: inherit;\n        padding-inline-start: map.get($hierarchical-grid-indent, 'comfortable');\n        padding-inline-end: map.get($hierarchical-grid-indent, 'comfortable');\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        cursor: pointer;\n        z-index: 3;\n        color: var-get($theme, 'expand-icon-color');\n        background-clip: border-box;\n\n        &:focus {\n            outline: none;\n\n            igx-icon {\n                color: var-get($theme, 'expand-icon-hover-color');\n            }\n        }\n\n        &:hover {\n            igx-icon {\n                color: var-get($theme, 'expand-icon-hover-color');\n            }\n        }\n\n        igx-icon {\n            color: var-get($theme, 'expand-icon-color');\n            max-width: $hierarchical-action-icon;\n            min-width: $hierarchical-action-icon;\n        }\n\n        [dir='rtl'] & {\n            transform: scaleX(-1);\n        }\n\n        &--empty {\n            cursor: default;\n            pointer-events: none;\n        }\n    }\n\n    %igx-grid__hierarchical-expander--cosy {\n        padding-inline-start: map.get($hierarchical-grid-indent, 'cosy');\n        padding-inline-end: map.get($hierarchical-grid-indent, 'cosy');\n    }\n\n    %igx-grid__hierarchical-expander--compact {\n        padding-inline-start: map.get($hierarchical-grid-indent, 'compact');\n        padding-inline-end: map.get($hierarchical-grid-indent, 'compact');\n    }\n\n    %igx-grid__hierarchical-expander--header {\n        background: inherit;\n        border-inline-end: rem(1px) solid var-get($theme, 'header-border-color');\n        z-index: 3;\n        background-clip: border-box;\n\n        igx-icon {\n            display: flex;\n            align-items: center;\n        }\n    }\n\n    %igx-grid__hierarchical-expander--push {\n        align-items: flex-start;\n\n        igx-icon {\n            min-height: map.get($grid-header-height, 'comfortable');\n            max-height: map.get($grid-header-height, 'comfortable');\n        }\n    }\n\n    %igx-grid__hierarchical-expander--push--cosy {\n        igx-icon {\n            min-height: map.get($grid-header-height, 'cosy');\n        }\n    }\n\n    %igx-grid__hierarchical-expander--push--compact {\n        igx-icon {\n            min-height: map.get($grid-header-height, 'compact');\n        }\n    }\n\n    %igx-grid__header-indentation--no-border {\n        border-inline-end: rem(1px) solid transparent;\n    }\n\n    %igx-grid__hierarchical-indent {\n        margin-inline-start: calc(2 * #{map.get($hierarchical-grid-indent, 'comfortable')} + #{$hierarchical-action-icon});\n        margin-top: map.get($hierarchical-grid-indent, 'comfortable');\n        margin-inline-end: map.get($hierarchical-grid-indent, 'comfortable');\n        margin-bottom: map.get($hierarchical-grid-indent, 'comfortable');\n\n        &--scroll {\n            margin-inline-end: calc(#{map.get($hierarchical-grid-indent, 'comfortable')} + 18px);\n        }\n    }\n\n    %igx-grid__hierarchical-indent--cosy {\n        margin-inline-start: calc(2 * #{map.get($hierarchical-grid-indent, 'cosy')} + #{$hierarchical-action-icon});\n        margin-top: map.get($hierarchical-grid-indent, 'cosy');\n        margin-inline-end: map.get($hierarchical-grid-indent, 'cosy');\n        margin-bottom: map.get($hierarchical-grid-indent, 'cosy');\n\n        &--scroll {\n            margin-inline-end: calc(#{map.get($hierarchical-grid-indent, 'cosy')} + 18px);\n        }\n    }\n\n    %igx-grid__hierarchical-indent--compact {\n        margin-inline-start: calc(2 * #{map.get($hierarchical-grid-indent, 'compact')} + #{$hierarchical-action-icon});\n        margin-top: map.get($hierarchical-grid-indent, 'compact');\n        margin-inline-end: map.get($hierarchical-grid-indent, 'compact');\n        margin-bottom: map.get($hierarchical-grid-indent, 'compact');\n\n        &--scroll {\n            margin-inline-end: calc(#{map.get($hierarchical-grid-indent, 'compact')} + 18px);\n        }\n    }\n\n    @include excel-filtering($theme);\n\n    %advanced-filtering-dialog {\n        background: var-get($theme, 'filtering-row-background');\n        box-shadow: elevation(12);\n\n        igx-query-builder {\n            --igx-query-builder-background: #{var-get($theme, 'filtering-row-background')};\n            --igx-query-builder-background-and: #{var-get($theme, 'filtering-background-and')};\n            --igx-query-builder-background-and--focus: #{var-get($theme, 'filtering-background-and--focus')};\n            --igx-query-builder-background-or: #{var-get($theme, 'filtering-background-or')};\n            --igx-query-builder-background-or--focus: #{var-get($theme, 'filtering-background-or--focus')};\n            box-shadow: none;\n        }\n\n        igx-query-builder-header {\n            cursor: grab;\n        }\n    }\n\n    %igx-grid__filtering-row-editing-buttons--small,\n    %igx-grid__filtering-row-editing-buttons {\n        display: flex;\n        align-items: center;\n\n        button {\n            transition: none;\n        }\n    }\n\n    %igx-grid__filtering-row-editing-buttons--small {\n        button {\n            &:not([disabled]) {\n                igx-icon {\n                    color: var-get($theme, 'sorted-header-icon-color');\n                }\n            }\n        }\n    }\n\n    %igx-grid__tr-action {\n        &:last-of-type {\n            border-inline-end: var-get($theme, 'header-border-width') var-get($theme, 'header-border-style') var-get($theme, 'header-border-color');\n        }\n    }\n\n    // Pivot grid\n    %igx-grid__pivot--super-compact {\n        %grid-cell-display,\n        %grid-cell-header {\n            padding: 0 rem(4px) !important;\n            min-height: rem(24px) !important;\n            height: rem(24px);\n        }\n\n        %grid-cell-header {\n            > * {\n                line-height: normal;\n                align-self: initial;\n                max-height: 100%;\n            }\n        }\n    }\n\n\n    %grid-thead--pivot {\n        display: flex;\n\n        %grid-thead--virtualizationWrapper {\n            border-inline-start: var-get($theme, 'header-border-width') var-get($theme, 'header-border-style') var-get($theme, 'header-border-color');\n        }\n    }\n\n    %grid-thead--virtualizationWrapper {\n        height: 100%;\n    }\n\n    %grid-thead--virtualizationContainer {\n        overflow: visible;\n        height: 100%;\n    }\n\n    %igx-grid__tr-pivot {\n        display: flex;\n        align-items: center;\n        background: inherit;\n        overflow: hidden;\n        z-index: 3;\n        height: map.get($grid-header-height, 'comfortable');\n\n        &--cosy {\n            height: map.get($grid-header-height, 'cosy');\n            padding: map.get($grid-header-padding, 'cosy');\n        }\n\n        &--compact {\n            height: map.get($grid-header-height, 'compact');\n            padding: map.get($grid-header-padding, 'compact');\n        }\n\n        padding: map.get($grid-header-padding, 'comfortable');\n        background-clip: border-box !important;\n        border-inline-start: var-get($theme, 'header-border-width') var-get($theme, 'header-border-style') var-get($theme, 'header-border-color');\n        border-bottom: var-get($theme, 'header-border-width') var-get($theme, 'header-border-style') var-get($theme, 'header-border-color');\n\n        igx-chips-area {\n            flex-wrap: nowrap;\n            width: auto;\n\n            > * {\n                margin-inline-end: rem(4px);\n            }\n\n            &:last-child {\n                margin-inline-end: 0;\n            }\n        }\n    }\n\n    %igx-grid__pivot-filter-toggle {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        cursor: pointer;\n        position: relative;\n\n        > igx-badge {\n            position: absolute;\n            top: rem(-4px);\n            inset-inline-start: 60%;\n            width: rem(18px);\n            min-width: rem(18px);\n            height: rem(18px);\n            font-size: rem(10px);\n            pointer-events: none;\n            user-select: none;\n        }\n    }\n\n    %igx-grid__pivot-empty-chip-area {\n        line-height: normal;\n        font-size: rem(14px);\n        margin-inline-end: 0 !important;\n    }\n\n    %igx-grid__tr-pivot--row-area {\n        height: auto !important;\n        align-items: flex-end;\n        padding-bottom: map.get($pivot-row-aria-padding, 'comfortable');\n\n        &--cosy{\n            padding-bottom: map.get($pivot-row-aria-padding, 'cosy');\n        }\n\n        &--compact{\n            padding-bottom: map.get($pivot-row-aria-padding, 'compact');\n        }\n\n        border-inline-start: 0;\n        border-bottom: 0;\n    }\n\n    %igx-grid__tr-pivot--filter-container {\n        display: flex;\n        flex-direction: column;\n    }\n\n    %igx-grid__tr-pivot--chip_drop_indicator {\n        width: rem(2px);\n        background: var-get($theme, 'resize-line-color');\n    }\n\n    %igx-grid__tr-pivot--drop-row-area {\n        flex-grow: 1;\n    }\n\n    %igx-grid__tr-pivot--filter {\n        height: map.get($grid-header-height, 'comfortable');\n\n        &--cosy {\n            height: map.get($grid-header-height, 'cosy');\n        }\n\n        &--compact {\n            height: map.get($grid-header-height, 'compact');\n        }\n\n        border-inline-start: 0;\n        border-inline-end: 0;\n        border-bottom: var-get($theme, 'header-border-width') var-get($theme, 'header-border-style') var-get($theme, 'header-border-color');\n    }\n\n    %igx-grid-thead__wrapper--pivot {\n        border-bottom: 0;\n    }\n\n    %igx-grid__tr-pivot-group {\n        flex: 1;\n    }\n\n    %igx-grid__tr-pivot-toggle-icons {\n        display: inline-flex !important;\n    }\n\n    %igx-grid__tr-pivot--columnDimensionLeaf {\n        box-shadow: none;\n\n        igx-grid-header {\n            border: none;\n        }\n    }\n\n    %igx-grid__tr-pivot--columnMultiRowSpan {\n        igx-grid-header {\n            > * {\n                visibility: hidden;\n            }\n        }\n    }\n\n    %igx-grid__tr-header-row {\n        igx-pivot-row-dimension-header-group {\n            igx-pivot-row-dimension-header {\n                align-items: center;\n            }\n        }\n    }\n    // Pivot grid END\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $background-color [null] - The summaries background color is inherited form igx-grid__tfoot\n/// @param {Color} $focus-background-color [null] - The background color when a summary item is on focus.\n/// @param {Color} $label-color [null] - The summaries label color.\n/// @param {Color} $result-color [null] - The summaries value/result color.\n/// @param {Color} $border-color [null] - The summaries border color.\n/// @param {Color} $pinned-border-width [null] - The border width of the summary panel.\n/// @param {Color} $pinned-border-style [null] - The border style of the summary panel.\n/// @param {Color} $pinned-border-color [null] - The border color of the summary panel.\n/// @param {Color} $label-hover-color [null] - The summaries hover label color.\n/// @requires $light-schema\n/// @example scss Change the summaries background and labels color\n///   $my-summary-theme: grid-summary-theme(\n///     $background-color: black,\n///     $label-color: white\n///   );\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-summary-theme);\n@function grid-summary-theme(\n    $schema: $light-schema,\n\n    $background-color: null,\n    $focus-background-color: null,\n    $label-color: null,\n    $result-color: null,\n    $border-color: null,\n    $pinned-border-width: null,\n    $pinned-border-style: null,\n    $pinned-border-color: null,\n    $label-hover-color: null\n) {\n    $name: 'igx-grid-summary';\n    $selector: '.igx-grid-summary';\n    $grid-summary-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $grid-summary-schema: map.get($schema, $name);\n    } @else {\n        $grid-summary-schema: $schema;\n    }\n\n    $theme: digest-schema($grid-summary-schema);\n\n    @if not($result-color) and $background-color {\n        $result-color: text-contrast($background-color);\n    }\n\n    @if not($border-color) and $background-color {\n        @if type-of($background-color) == 'color' {\n            $border-color: rgba(text-contrast($background-color), .26);\n        }\n    }\n\n    @if not($pinned-border-color) and $background-color {\n        @if type-of($background-color) == 'color' {\n            $pinned-border-color: rgba(text-contrast($background-color), .26);\n        }\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        background-color: $background-color,\n        focus-background-color: $focus-background-color,\n        label-color: $label-color,\n        result-color: $result-color,\n        border-color: $border-color,\n        pinned-border-width: $pinned-border-width,\n        pinned-border-style: $pinned-border-style,\n        pinned-border-color: $pinned-border-color,\n        label-hover-color: $label-hover-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin grid-summary($theme) {\n    @include css-vars($theme);\n\n    $cell-pin: (\n        style: var-get($theme, 'pinned-border-width') var-get($theme, 'pinned-border-style'),\n        color: var-get($theme, 'pinned-border-color')\n    );\n\n    $item-padding: (\n        comfortable: rem(6px) 0,\n        cosy: rem(2px) 0,\n        compact: 0\n    );\n\n    $summary-padding: (\n        comfortable: 0 rem(24px),\n        cosy: 0 rem(16px),\n        compact: 0 rem(12px)\n    );\n\n    %igx-grid-summary {\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        flex: 1 1 0%;\n        padding: map.get($summary-padding, 'comfortable');\n        background: var-get($theme, 'background-color', inherit);\n        overflow: hidden;\n        outline-style: none;\n\n        &::after {\n            position: absolute;\n            inset: 0;\n        }\n\n        &:focus::after {\n            background: var-get($theme, 'focus-background-color');\n        }\n    }\n\n    %igx-grid-summary--cosy {\n        padding: map.get($summary-padding, 'cosy');\n    }\n\n    %igx-grid-summary--compact {\n        padding: map.get($summary-padding, 'compact');\n    }\n\n    %igx-grid-summary--pinned {\n        position: relative;\n        z-index: 1;\n    }\n\n    %grid-summary--fixed-width {\n        flex-grow: 0;\n    }\n\n    %igx-grid-summary--pinned-last {\n        border-inline-end: map.get($cell-pin, 'style') map.get($cell-pin, 'color');\n        @media print {\n            border-inline-end: map.get($cell-pin, 'style') #999;\n        }\n    }\n\n    %igx-grid-summary--pinned-first {\n        border-inline-start: map.get($cell-pin, 'style') map.get($cell-pin, 'color');\n        @media print {\n            border-inline-start: map.get($cell-pin, 'style') #999;\n        }\n    }\n\n    %igx-grid-summary__item {\n        display: flex;\n        align-items: center;\n        padding: map.get($item-padding, 'comfortable');\n        font-size: rem(12px);\n        position: relative;\n    }\n\n    %igx-grid-summary__item--cosy {\n        padding: map.get($item-padding, 'cosy');\n    }\n\n    %igx-grid-summary__item--compact {\n        padding: map.get($item-padding, 'compact');\n    }\n\n    %igx-grid-summary__label {\n        color: var-get($theme, 'label-color');\n        min-width: rem(30px);\n        margin-inline-end: rem(3px);\n\n        &:hover {\n            color: var-get($theme, 'label-hover-color');\n        }\n    }\n\n    %igx-grid-summary__result {\n        color: var-get($theme, 'result-color');\n        font-weight: 600;\n        flex: 1 1 auto;\n        text-align: end;\n    }\n\n    %igx-grid-summary__label,\n    %igx-grid-summary__result {\n        @include ellipsis();\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $background-color [null] - The toolbar background color.\n/// @param {Color} $title-text-color [null] - The toolbar title text color.\n/// @param {Color} $dropdown-background [null] - The toolbar drop-down background color.\n/// @param {Color} $item-text-color [null] - The toolbar drop-down item text color.\n/// @param {Color} $item-hover-background [null] - The toolbar drop-down item hover background color.\n/// @param {Color} $item-hover-text-color [null] - The toolbar drop-down item hover text color.\n/// @param {Color} $item-focus-background [null] - The toolbar drop-down item focus background color.\n/// @param {Color} $item-focus-text-color [null] - The toolbar drop-down item focus text color.\n/// @requires $light-schema\n/// @example scss Change the toolbar background color\n///   $my-toolbar-theme: grid-toolbar-theme(\n///     $background-color: black\n///   );\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-toolbar-theme);\n@function grid-toolbar-theme(\n    $schema: $light-schema,\n    $elevations: null,\n\n    $background-color: null,\n    $title-text-color: null,\n\n    $dropdown-background: null,\n    $item-text-color: null,\n    $item-hover-background: null,\n    $item-hover-text-color: null,\n    $item-focus-background: null,\n    $item-focus-text-color: null\n) {\n    $name: 'igx-grid-toolbar';\n    $selector: 'igx-grid-toolbar, .igx-grid-toolbar__dd-list';\n    $grid-toolbar-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $grid-toolbar-schema: map.get($schema, $name);\n    } @else {\n        $grid-toolbar-schema: $schema;\n    }\n\n    $theme: digest-schema($grid-toolbar-schema);\n\n\n    @if not($title-text-color) and $background-color {\n        $title-text-color: text-contrast($background-color);\n    }\n\n    @if not($item-text-color) and $dropdown-background {\n        $item-text-color: text-contrast($dropdown-background);\n    }\n\n    @if not($item-hover-text-color) and $dropdown-background {\n        $item-hover-text-color: text-contrast($dropdown-background);\n    }\n\n    @if not($item-focus-text-color) and $dropdown-background {\n        $item-focus-text-color: text-contrast($dropdown-background);\n    }\n\n    @if not($item-hover-text-color) and $item-hover-background {\n        $item-hover-text-color: text-contrast($item-hover-background);\n    }\n\n    @if not($item-focus-text-color) and $item-focus-background {\n        $item-focus-text-color: text-contrast($item-focus-background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        elevations: $elevations,\n        background-color: $background-color,\n        title-text-color: $title-text-color,\n        item-text-color: $item-text-color,\n        dropdown-background: $dropdown-background,\n        item-hover-background: $item-hover-background,\n        item-hover-text-color: $item-hover-text-color,\n        item-focus-background: $item-focus-background,\n        item-focus-text-color: $item-focus-text-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin grid-toolbar($theme) {\n    @include css-vars($theme);\n\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: $variant == 'bootstrap';\n\n    // Caption\n    $grid-toolbar-fs: rem(16px);\n\n    $grid-toolbar-padding: (\n        comfortable: rem(24px) rem(16px),\n        cosy: rem(16px) rem(12px),\n        compact: rem(12px) rem(8px)\n    );\n\n    $grid-toolbar-spacer: (\n        comfortable: rem(16px),\n        cosy: rem(12px),\n        compact: rem(8px)\n    );\n\n    $grid-toolbar-height: (\n        comfortable: rem(58px),\n        cosy: rem(52px),\n        compact: rem(44px)\n    );\n\n    %igx-grid-toolbar {\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        grid-row: 1;\n        font-size: $grid-toolbar-fs;\n\n        @if $bootstrap-theme {\n            border-bottom: rem(1px) solid color($color: 'gray', $variant: 100);\n        } @else {\n            border-bottom: rem(1px) solid color($color: 'gray', $variant: 300);\n        }\n\n        background: var-get($theme, 'background-color');\n        height: auto;\n        min-height: map.get($grid-toolbar-height, 'comfortable');\n        padding-block: 0;\n        padding-inline: map.get($grid-toolbar-padding, 'comfortable');\n\n        [igxButton] {\n            margin-inline-start: map.get($grid-toolbar-spacer, 'comfortable');\n\n            &:first-of-type {\n                margin-inline-start: 0;\n            }\n\n            &:last-of-type {\n                margin-inline-end: 0;\n            }\n        }\n\n        &[dir='rtl'] {\n            text-align: end;\n\n            [igxButton] {\n                margin-inline-start: 0;\n                margin-inline-end: rem(8);\n\n                &:last-child {\n                    margin-inline-end: 0;\n                }\n            }\n        }\n    }\n\n    %igx-grid-toolbar--cosy {\n        min-height: map.get($grid-toolbar-height, 'cosy');\n        padding-inline: map.get($grid-toolbar-padding, 'cosy');\n\n        [igxButton] {\n            margin-inline-start: map.get($grid-toolbar-spacer, 'cosy');\n        }\n    }\n\n    %igx-grid-toolbar--compact {\n        min-height: map.get($grid-toolbar-height, 'compact');\n        padding-inline: map.get($grid-toolbar-padding, 'compact');\n\n        [igxButton] {\n            margin-inline-start: map.get($grid-toolbar-spacer, 'compact');\n        }\n    }\n\n    %igx-grid-toolbar__title {\n        color: var-get($theme, 'title-text-color');\n        flex: 1 1 auto;\n        @include ellipsis();\n        max-width: 40ch;\n        margin-inline-end: map.get($grid-toolbar-spacer, 'comfortable')\n    }\n\n    %igx-grid-toolbar__custom-content {\n        display: flex;\n        flex-wrap: wrap;\n        flex-grow: 1;\n        justify-content: flex-end;\n        margin-inline-end: map.get($grid-toolbar-spacer, 'comfortable');\n    }\n\n    %igx-grid-toolbar__actions {\n        display: flex;\n        align-items: center;\n        flex-flow: row wrap;\n        margin-inline-start: auto;\n\n        > * {\n            display: flex;\n            margin-inline-start: map.get($grid-toolbar-spacer, 'comfortable');\n\n            &:first-child {\n                margin-inline-start: 0;\n            }\n        }\n    }\n\n    %igx-grid-toolbar__actions,\n    %igx-grid-toolbar__title,\n    %igx-grid-toolbar__custom-content {\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-grid-toolbar__title:empty + %igx-grid-toolbar__custom-content:empty {\n        + %igx-grid-toolbar__actions {\n            width: 100%;\n            margin-inline-start: 0;\n            justify-content: flex-end;\n        }\n    }\n\n    %igx-grid-toolbar__progress-bar {\n        position: absolute;\n        width: 100%;\n        inset-inline-start: 0;\n        inset-inline-end: 0;\n        bottom: rem(-1px);\n        height: rem(2px);\n        overflow: hidden;\n        background: var-get($theme, 'background-color');\n\n        igx-linear-bar > * {\n            border-radius: 0;\n\n            &:first-child > div {\n                background: color($color: 'secondary');\n            }\n        }\n    }\n\n    %igx-grid-toolbar__adv-filter--filtered {\n        border-color: color($color: 'secondary') !important;\n\n        @if $bootstrap-theme {\n            border-width: rem(2px);\n            border-color: color($color: 'primary', $variant: 800) !important;\n            color: color($color: 'primary', $variant: 800);\n\n            &:hover,\n            &:focus {\n                background: color($color: 'primary', $variant: 800);\n            }\n        }\n    }\n\n    %igx-grid-toolbar__dropdown {\n        position: relative;\n    }\n\n    %igx-grid-toolbar__dd-list {\n        list-style: none;\n        background: var-get($theme, 'dropdown-background');\n        margin: 0;\n        padding: 0;\n        box-shadow: elevation(8);\n    }\n\n    %igx-grid-toolbar__dd-list-items {\n        cursor: pointer;\n        position: relative;\n        padding: rem(8px) rem(16px);\n        color: var-get($theme, 'item-text-color');\n        white-space: nowrap;\n\n        &:hover {\n            background: var-get($theme, 'item-hover-background');\n            color: var-get($theme, 'item-hover-text-color');\n        }\n\n        &:focus {\n            background: var-get($theme, 'item-focus-background');\n            color: var-get($theme, 'item-focus-text-color');\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n@function pivot-data-selector-theme(\n    $schema: $light-schema,\n    $background: null\n) {\n    $name: 'igx-pivot-data-selector';\n    $selector: '.igx-pivot-data-selector';\n    $pivot-data-selector-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $pivot-data-selector-schema: map.get($schema, $name);\n    } @else {\n        $pivot-data-selector-schema: $schema;\n    }\n\n    $theme: digest-schema($pivot-data-selector-schema);\n\n    @return extend($theme, (\n        name: $name,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin pivot-data-selector($theme) {\n    @include css-vars($theme);\n\n    $chip-height-material: (\n        comfortable: rem(22px),\n        cosy: rem(20px),\n        compact: rem(18px)\n    );\n\n    $chip-item-padding: 0 #{rem(2px)};\n    $panel-padding: rem(4px, 16px);\n\n    %selector-base {\n        display: flex;\n        flex-direction: column;\n        max-width: rem(280px);\n        background: var-get($theme, 'background');\n        z-index: 0;\n\n        > igx-input-group {\n            flex: 0 1 auto;\n        }\n\n        igx-display-container {\n            display: flex;\n            flex-direction: column;\n        }\n\n        > igx-list {\n            igx-display-container {\n                padding: rem(4px);\n            }\n\n            igx-list-item {\n                display: flex;\n                min-height: rem(28px);\n            }\n\n            %cbx-label {\n                font-size: rem(13px);\n            }\n        }\n\n        %form-group-input--box {\n            transform: none;\n        }\n\n        %form-group-prefix,\n        %form-group-prefix--cosy,\n        %form-group-prefix--compact {\n            padding-inline-end: rem(16px) !important;\n            box-sizing: content-box;\n        }\n\n        %form-group-bundle-main--box,\n        %form-group-bundle-main--box-cosy,\n        %form-group-bundle-main--box-compact {\n            padding-top: 0 !important;\n        }\n\n        %igx-expanded-panel-margin {\n            igx-expansion-panel[aria-expanded='true'] {\n                margin-top: 0;\n                margin-bottom: 0;\n            }\n        }\n\n        %igx-expansion-panel__body {\n            position: relative;\n            height: rem(128px);\n            font-size: rem(14px);\n            padding: $panel-padding;\n            overflow-y: auto;\n\n            > igx-list {\n                height: auto;\n            }\n        }\n\n        %igx-expansion-panel__header-icon--start {\n            margin-inline-end: rem(8px);\n        }\n\n        %igx-expansion-panel__header-title {\n            display: flex;\n\n            > h6 {\n                font-size: rem(12px);\n            }\n        }\n\n        %igx-expansion-panel__header-inner {\n            background: var-get($theme, 'header-color');\n            padding: $panel-padding;\n\n            .dragOver & {\n                background: color($color: 'gray', $variant: 300);\n                box-shadow: inset 0 0 0 rem(1px) color($color: 'gray', $variant: 400);\n            }\n        }\n    }\n\n    %selector-filter {\n        display: flex;\n        flex-direction: column;\n        overflow: hidden;\n\n        igx-list {\n            display: flex;\n            flex-direction: column;\n            padding: rem(8px) rem(4px);\n            min-height: rem(186px);\n            max-height: rem(208px);\n            overflow-y: auto;\n        }\n\n        igx-list-item {\n            display: flex;\n        }\n\n        igx-checkbox + span {\n            margin-inline-start: rem(8px);\n            line-height: rem(28px);\n        }\n    }\n\n    %selector-header,\n    %selector-header-extra {\n        display: flex;\n        align-items: center;\n    }\n\n    %selector-header-extra {\n        igx-icon {\n            padding: 0 rem(8px);\n            box-sizing: content-box;\n        }\n\n        %igx-chip__item {\n            height: map.get($chip-height-material, 'comfortable');\n        }\n\n        %igx-chip__item--cosy {\n            height: map.get($chip-height-material, 'cosy');\n        }\n\n        %igx-chip__item--compact {\n            height: map.get($chip-height-material, 'compact');\n        }\n\n        %igx-chip__content {\n            padding: $chip-item-padding;\n        }\n    }\n\n    %selector-item {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        min-height: rem(32px);\n        width: 100%;\n\n        .igx-drag--push & {\n            padding-top: rem(32px);\n        }\n    }\n\n    %selector-item-ghost {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        font-size: rem(14px);\n        background: color($color: 'surface');\n        min-height: rem(32px);\n        height: auto;\n        padding: 0 rem(2px) 0 rem(4px);\n        cursor: grabbing;\n        box-shadow: elevation(24);\n        border: rem(1px) solid color($color: 'gray', $variant: 100);\n        border-radius: border-radius(rem(2px));\n        z-index: 10;\n    }\n\n    %selector-base,\n    %selector-item-ghost {\n        igx-icon {\n            width: var(--igx-icon-size, #{rem(18px)});\n            height: var(--igx-icon-size, #{rem(18px)});\n            font-size: var(--igx-icon-size, #{rem(18px)});\n        }\n    }\n\n    %selector-item-ghost-text {\n        display: flex;\n        align-items: center;\n\n        igx-icon {\n            margin-inline-end: rem(8px);\n        }\n    }\n\n    %selector-item-ghost--no-drop {\n        cursor: no-drop;\n    }\n\n    %selector-item-text {\n        @include ellipsis();\n        max-width: calc(100% - rem(18px) + rem(8px));\n    }\n\n    %selector-item-text,\n    %selector-action-sort,\n    %selector-action-filter,\n    %selector-action-move,\n    %selector-action-summary {\n        user-select: none;\n    }\n\n    %selector-action-sort,\n    %selector-action-summary,\n    %selector-action-filter {\n        cursor: pointer;\n    }\n\n    %selector-action-move {\n        cursor: grab;\n    }\n\n    %selector-item-start {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        flex: 0 1 100%;\n        margin-inline-end: rem(8px);\n        overflow: hidden;\n    }\n\n    %selector-item-end {\n        display: flex;\n\n        igx-icon + igx-icon {\n            margin-inline-start: rem(8px);\n        }\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// If only background color(s) specified, text color(s) will be assigned automatically to a contrasting color.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $resting-background [null]- The background color used for the highlight in its resting state.\n/// @param {Color} $resting-color [null] - The text color used for the highlight in its resting state.\n/// @param {Color} $active-background [null] - The background color used for the highlight in its active state.\n/// @param {Color} $active-color [null] - The text color used for the highlight in its active state.\n/// @requires $light-schema\n/// @example scss Change the background and icon colors in icon highlight\n///   $my-highlight-theme: highlight-theme($resting-background: black, $active-color: white);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-highlight-theme);\n@function highlight-theme(\n    $schema: $light-schema,\n    $resting-background: null,\n    $resting-color: null,\n    $active-background: null,\n    $active-color: null,\n) {\n    $name: 'igx-highlight';\n    $selector: '.igx-highlight';\n    $highlight-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $highlight-schema: map.get($schema, $name);\n    } @else {\n        $highlight-schema: $schema;\n    }\n\n    $theme: digest-schema($highlight-schema);\n\n    @if not($resting-color) and $resting-background {\n        $resting-color: text-contrast($resting-background);\n    }\n\n    @if not($active-color) and $active-background {\n        $active-color: text-contrast($active-background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        resting-background: $resting-background,\n        resting-color: $resting-color,\n        active-background: $active-background,\n        active-color: $active-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin highlight($theme) {\n    @include css-vars($theme);\n\n    %igx-highlight {\n        color: var-get($theme, 'resting-color');\n        background: var-get($theme, 'resting-background');\n    }\n\n    %igx-highlight--active {\n        color: var-get($theme, 'active-color');\n        background: var-get($theme, 'active-background');\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $color [null] - The icon color.\n/// @param {String} $size [null] - The icon size.\n/// @param {Color} $disabled-color [null] - The disabled icon color.\n/// @requires $light-schema\n/// @example scss Change the icon color\n///   $my-icon-theme: icon-theme($color: orange);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-icon-theme);\n@function icon-theme(\n    $schema: $light-schema,\n\n    $color: null,\n    $size: null,\n    $disabled-color: null\n) {\n    $name: 'igx-icon';\n    $icon-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $icon-schema: map.get($schema, $name);\n    } @else {\n        $icon-schema: $schema;\n    }\n\n    $theme: digest-schema($icon-schema);\n\n    @return extend($theme, (\n        name: $name,\n        color: $color,\n        size: $size,\n        disabled-color: $disabled-color\n    ));\n}\n\n// stylelint-disable font-family-no-missing-generic-family-keyword\n/// @param {Map} $theme - The theme used to style the component.\n@mixin icon($theme) {\n    @include css-vars($theme);\n\n    $igx-icon-font-size: var-get($theme, 'size');\n\n    %igx-icon-display {\n        display: inline-flex;\n        width: $igx-icon-font-size;\n        height: $igx-icon-font-size;\n        font-size: $igx-icon-font-size;\n        color: var-get($theme, 'color');\n        direction: inherit;\n\n        div,\n        svg {\n            display: block;\n            width: inherit;\n            height: inherit;\n            fill: currentColor;\n        }\n\n        &[igxPrefix].material-icons,\n        &[igxSuffix].material-icons {\n            font-family: 'Material Icons';\n        }\n    }\n\n    %igx-icon--success {\n        color: color($color: 'success');\n    }\n\n    %igx-icon--error {\n        color: color($color: 'error');\n    }\n\n    %igx-icon--inactive {\n        color: var-get($theme, 'disabled-color') !important;\n        opacity: .54;\n    }\n}\n","////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @type Timing Function\n$in-quad: cubic-bezier(.55, .085, .68, .53);\n\n/// @type Timing Function\n$in-cubic: cubic-bezier(.55, .55, .675, .19);\n\n/// @type Timing Function\n$in-quart: cubic-bezier(.895, .03, .685, .22);\n\n/// @type Timing Function\n$in-quint: cubic-bezier(.755, .05, .855, .06);\n\n/// @type Timing Function\n$in-sine: cubic-bezier(.47, 0, .745, .715);\n\n/// @type Timing Function\n$in-expo: cubic-bezier(.95, .05, .795, .035);\n\n/// @type Timing Function\n$in-circ: cubic-bezier(.95, .05, .795, .035);\n\n/// @type Timing Function\n$in-back: cubic-bezier(.95, .05, .795, .035);\n\n/// @type Timing Function\n$out-quad: cubic-bezier(.25, .46, .45, .94);\n\n/// @type Timing Function\n$out-cubic: cubic-bezier(.215, .61, .355, 1);\n\n/// @type Timing Function\n$out-quart: cubic-bezier(.165, .84, .44, 1);\n\n/// @type Timing Function\n$out-quint: cubic-bezier(.23, 1, .32, 1);\n\n/// @type Timing Function\n$out-sine: cubic-bezier(.39, .575, .565, 1);\n\n/// @type Timing Function\n$out-expo: cubic-bezier(.19, 1, .22, 1);\n\n/// @type Timing Function\n$out-circ: cubic-bezier(.075, .82, .165, 1);\n\n/// @type Timing Function\n$out-back: cubic-bezier(.175, .885, .32, 1.275);\n\n/// @type Timing Function\n$in-out-quad: cubic-bezier(.455, .03, .515, .955);\n\n/// @type Timing Function\n$in-out-cubic: cubic-bezier(.645, .045, .355, 1);\n\n/// @type Timing Function\n$in-out-quart: cubic-bezier(.77, 0, .175, 1);\n\n/// @type Timing Function\n$in-out-quint: .5s cubic-bezier(.86, 0, .07, 1);\n\n/// @type Timing Function\n$in-out-sine: cubic-bezier(.445, .05, .55, .95);\n\n/// @type Timing Function\n$in-out-expo: cubic-bezier(1, 0, 0, 1);\n\n/// @type Timing Function\n$in-out-circ: cubic-bezier(.785, .135, .15, .86);\n\n/// @type Timing Function\n$in-out-back: cubic-bezier(.68, -.55, .265, 1.55);\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'igniteui-theming/sass/animations/easings' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $background-color [null] - The background color used for modal overlays.\n/// @requires $light-schema\n/// @example scss Change the background color\n///   $my-overlay-theme: overlay-theme($background-color: rgba(yellow, .74));\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-overlay-theme);\n@function overlay-theme(\n    $schema: $light-schema,\n    $background-color: null\n) {\n    $name: 'igx-overlay';\n    $selector: '.igx-overlay__wrapper--modal, .igx-overlay__content--modal';\n    $overlay-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $overlay-schema: map.get($schema, $name);\n    } @else {\n        $overlay-schema: $schema;\n    }\n\n    $theme: digest-schema($overlay-schema);\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        background-color: $background-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin overlay($theme) {\n    @include css-vars($theme);\n\n    %overlay-display {\n        width: 0;\n        height: 0;\n        box-sizing: content-box;\n    }\n\n    %overlay-wrapper {\n        position: fixed;\n        inset: 0;\n        background: transparent;\n        transition: background .25s $in-out-quad;\n        pointer-events: none;\n        z-index: 10005;\n        box-sizing: content-box;\n    }\n\n    %overlay-wrapper--modal {\n        background: var-get($theme, 'background-color');\n        pointer-events: initial;\n    }\n\n    %overlay-wrapper--flex {\n        display: flex;\n    }\n\n    %overlay-wrapper--flex-container {\n        display: flex;\n        position: absolute;\n    }\n\n    %overlay-content {\n        position: absolute;\n        pointer-events: all;\n        box-sizing: content-box;\n    }\n\n    %overlay-content--modal {\n        pointer-events: initial;\n    }\n\n    %overlay-content--elastic {\n        overflow: auto;\n    }\n\n    %overlay-content--relative {\n        position: relative;\n    }\n\n    %igx-toggle--hidden {\n        display: none !important;\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Grid Paging Theme\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $text-color [currentColor] - The text color.\n/// @param {Color} $background-color [rgba(0, 0, 0, .04)] - The background color of the paging panel.\n/// @param {Color} $border-color [rgba(0, 0, 0, .26)] - The border color of the paging panel.\n/// @requires $light-schema\n/// @example scss Change the stripes color\n///   $my-paginator-theme: paginator-theme(\n///     $stripes-color: orange\n///   );\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-paginator-theme);\n@function paginator-theme(\n    $schema: $light-schema,\n\n    $text-color: null,\n    $background-color: null,\n    $border-color: null\n) {\n    $name: 'igx-paginator';\n    $grid-paginator-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $grid-paginator-schema: map.get($schema, $name);\n    } @else {\n        $grid-paginator-schema: $schema;\n    }\n\n    $theme: digest-schema($grid-paginator-schema);\n\n\n    @if not($text-color) and $background-color {\n        $text-color: text-contrast($background-color);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        text-color: $text-color,\n        background-color: $background-color,\n        border-color: $border-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin paginator($theme) {\n    @include css-vars($theme);\n\n    $paginator-padding: (\n        comfortable: 0 rem(24px),\n        cosy: 0 rem(16px),\n        compact: 0 rem(12px)\n    );\n\n    $paginator-height: (\n        comfortable: rem(56px),\n        cosy: rem(48px),\n        compact: rem(44px)\n    );\n\n    %igx-paginator {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        color: var-get($theme, 'text-color');\n        background: var-get($theme, 'background-color');\n        font-size: rem(12px);\n        border-top: rem(1px) solid var-get($theme, 'border-color');\n        z-index: 1;\n        padding: map.get($paginator-padding, 'comfortable');\n        height: map.get($paginator-height, 'comfortable');\n        width: 100%;\n\n        &:empty {\n            padding: 0;\n        }\n    }\n\n    %igx-paginator--cosy {\n        padding: map.get($paginator-padding, 'cosy');\n        height: map.get($paginator-height, 'cosy');\n    }\n\n    %igx-paginator--compact {\n        padding: map.get($paginator-padding, 'compact');\n        height: map.get($paginator-height, 'compact');\n    }\n\n    %igx-paginator-content {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        width: 100%;\n    }\n\n    %igx-page-size {\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        flex: 1;\n    }\n\n    %igx-page-size__label {\n        margin-inline-end: rem(8px);\n        @include ellipsis();\n    }\n\n    %igx-page-size__select {\n        display: flex;\n        max-width: rem(90px);\n        min-width: rem(80px);\n    }\n\n    %igx-page-nav {\n        display: flex;\n        justify-content: flex-end;\n        align-items: center;\n        flex: 1;\n\n        > * {\n            margin-inline-start: rem(8px);\n        }\n\n        [dir='rtl'] & {\n            igx-icon {\n                transform: scaleX(-1);\n            }\n        }\n    }\n\n    %igx-page-nav__text {\n        display: flex;\n    }\n}\n","@use '../mixins' as *;\n\n////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin rotate-center {\n    @include keyframes(rotate-center) {\n        0% {\n            transform: rotate(0);\n        }\n\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-bl {\n    @include keyframes(rotate-bl) {\n        0% {\n            transform: rotate(0);\n            transform-origin: bottom left;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: bottom left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-vert-center {\n    @include keyframes(rotate-vert-center) {\n        0% {\n            transform: rotateY(0);\n        }\n\n        100% {\n            transform: rotateY(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-diagonal-br {\n    @include keyframes(rotate-diagonal-br) {\n        0% {\n            transform: rotate3d(-1, 1, 0, 0deg);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: rotate3d(-1, 1, 0, -360deg);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-top {\n    @include keyframes(rotate-top) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: top;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-left {\n    @include keyframes(rotate-left) {\n        0% {\n            transform: rotate(0);\n            transform-origin: left;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-vert-left {\n    @include keyframes(rotate-vert-left) {\n        0% {\n            transform: rotateY(0);\n            transform-origin: left;\n        }\n\n        100% {\n            transform: rotateY(360deg);\n            transform-origin: left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-diagonal-bl {\n    @include keyframes(rotate-diagonal-bl) {\n        0% {\n            transform: rotate3d(1, 1, 0, 0deg);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: rotate3d(1, 1, 0, 360deg);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-tr {\n    @include keyframes(rotate-tr) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top right;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: top right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-tl {\n    @include keyframes(rotate-tl) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top left;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: top left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up {\n    @include keyframes(rotate-scale-up) {\n        0% {\n            transform: scale(1) rotateZ(0);\n        }\n\n        50% {\n            transform: scale(2) rotateZ(180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateZ(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up-diag-1 {\n    @include keyframes(rotate-scale-up-diag-1) {\n        0% {\n            transform: scale(1) rotate3d(1, 1, 0, 0deg);\n        }\n\n        50% {\n            transform: scale(2) rotate3d(1, 1, 0, -180deg);\n        }\n\n        100% {\n            transform: scale(1) rotate3d(1, 1, 0, -360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down {\n    @include keyframes(rotate-scale-down) {\n        0% {\n            transform: scale(1) rotateZ(0);\n        }\n\n        50% {\n            transform: scale(.5) rotateZ(180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateZ(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down-diag-1 {\n    @include keyframes(rotate-scale-down-diag-1) {\n        0% {\n            transform: scale(1) rotate3d(1, 1, 0, 0deg);\n        }\n\n        50% {\n            transform: scale(.5) rotate3d(1, 1, 0, -180deg);\n        }\n\n        100% {\n            transform: scale(1) rotate3d(1, 1, 0, -360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up-hor {\n    @include keyframes(rotate-scale-up-hor) {\n        0% {\n            transform: scale(1) rotateX(0);\n        }\n\n        50% {\n            transform: scale(2) rotateX(-180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateX(-360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up-diag-2 {\n    @include keyframes(rotate-scale-up-diag-2) {\n        0% {\n            transform: scale(1) rotate3d(-1, 1, 0, 0deg);\n        }\n\n        50% {\n            transform: scale(2) rotate3d(-1, 1, 0, 180deg);\n        }\n\n        100% {\n            transform: scale(1) rotate3d(-1, 1, 0, 360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down-hor {\n    @include keyframes(rotate-scale-down-hor) {\n        0% {\n            transform: scale(1) rotateX(0);\n        }\n\n        50% {\n            transform: scale(.5) rotateX(-180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateX(-360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down-diag-2 {\n    @include keyframes(rotate-scale-down-diag-2) {\n        0% {\n            transform: scale(1) rotate3d(-1, 1, 0, 0deg);\n        }\n\n        50% {\n            transform: scale(.5) rotate3d(-1, 1, 0, 180deg);\n        }\n\n        100% {\n            transform: scale(1) rotate3d(-1, 1, 0, 360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up-ver {\n    @include keyframes(rotate-scale-up-ver) {\n        0% {\n            transform: scale(1) rotateY(0);\n        }\n\n        50% {\n            transform: scale(2) rotateY(180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateY(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down-ver {\n    @include keyframes(rotate-scale-down-ver) {\n        0% {\n            transform: scale(1) rotateY(0);\n        }\n\n        50% {\n            transform: scale(.5) rotateY(180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateY(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-cw {\n    @include keyframes(rotate-90-cw) {\n        0% {\n            transform: rotate(0);\n        }\n\n        100% {\n            transform: rotate(90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-right-cw {\n    @include keyframes(rotate-90-right-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: right;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-bl-cw {\n    @include keyframes(rotate-90-bl-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-horizontal-fwd {\n    @include keyframes(rotate-90-horizontal-fwd) {\n        0% {\n            transform: rotateX(0);\n        }\n\n        100% {\n            transform: rotateX(90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-ccw {\n    @include keyframes(rotate-90-ccw) {\n        0% {\n            transform: rotate(0);\n        }\n\n        100% {\n            transform: rotate(-90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-right-ccw {\n    @include keyframes(rotate-90-right-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: right;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-bl-ccw {\n    @include keyframes(rotate-90-bl-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-horizontal-bck {\n    @include keyframes(rotate-90-horizontal-bck) {\n        0% {\n            transform: rotateX(0);\n        }\n\n        100% {\n            transform: rotateX(-90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-top-cw {\n    @include keyframes(rotate-90-top-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: top;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-br-cw {\n    @include keyframes(rotate-90-br-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-left-cw {\n    @include keyframes(rotate-90-left-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: left;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-vertical-fwd {\n    @include keyframes(rotate-90-vertical-fwd) {\n        0% {\n            transform: rotateY(0);\n        }\n\n        100% {\n            transform: rotateY(90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-top-ccw {\n    @include keyframes(rotate-90-top-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: top;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-br-ccw {\n    @include keyframes(rotate-90-br-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-left-ccw {\n    @include keyframes(rotate-90-left-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: left;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-vertical-bck {\n    @include keyframes(rotate-90-vertical-bck) {\n        0% {\n            transform: rotateY(0);\n        }\n\n        100% {\n            transform: rotateY(-90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-tr-cw {\n    @include keyframes(rotate-90-tr-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top right;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: top right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-bottom-cw {\n    @include keyframes(rotate-90-bottom-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: bottom;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: bottom;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-tl-cw {\n    @include keyframes(rotate-90-tl-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-tr-ccw {\n    @include keyframes(rotate-90-tr-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top right;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: top right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-bottom-ccw {\n    @include keyframes(rotate-90-bottom-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: bottom;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: bottom;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-tl-ccw {\n    @include keyframes(rotate-90-tl-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:list';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'igniteui-theming/sass/animations' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $track-color [null] - The main track color.\n/// @param {Color} $fill-color-default [null] - The track default fill color.\n/// @param {Color} $fill-color-danger [null] - The track danger fill color.\n/// @param {Color} $fill-color-warning [null] - The track warning fill color.\n/// @param {Color} $fill-color-info [null] - The track info fill color.\n/// @param {Color} $fill-color-success [null] - The track success fill color.\n/// @param {Color} $stripes-color [null] - The track stripes color.\n/// @param {Color} $text-color [null] - The track value text color.\n/// @param {Number} $track-border-radius [null] - The border radius fraction, between 0 - 8 to be used fot the progress bar track\n/// @requires $light-schema\n/// @example scss Change the stripes color\n///   $my-progress-linear-theme: progress-linear-theme(\n///     $stripes-color: orange\n///   );\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-progress-linear-theme);\n@function progress-linear-theme(\n    $schema: $light-schema,\n\n    $track-color: null,\n    $fill-color-default: null,\n    $fill-color-danger: null,\n    $fill-color-warning: null,\n    $fill-color-info: null,\n    $fill-color-success: null,\n    $stripes-color: null,\n    $text-color: null,\n    $track-border-radius: null,\n) {\n    $name: 'igx-linear-bar';\n    $linear-bar-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $linear-bar-schema: map.get($schema, $name);\n    } @else {\n        $linear-bar-schema: $schema;\n    }\n\n    $theme: digest-schema($linear-bar-schema);\n\n    @return extend($theme, (\n        name: $name,\n        track-color: $track-color,\n        fill-color-default: $fill-color-default,\n        fill-color-danger: $fill-color-danger,\n        fill-color-warning: $fill-color-warning,\n        fill-color-info: $fill-color-info,\n        fill-color-success: $fill-color-success,\n        stripes-color: $stripes-color,\n        text-color: $text-color,\n        track-border-radius: $track-border-radius,\n    ));\n}\n\n@mixin striped-gradient($gradient-orientation, $stripe-color) {\n    background-image: linear-gradient(\n        $gradient-orientation,\n        $stripe-color 25%,\n        transparent 25%,\n        transparent 50%,\n        $stripe-color 50%,\n        $stripe-color 75%,\n        transparent 75%,\n        transparent\n    );\n}\n\n@mixin striped-gradient--indigo($gradient-orientation, $stripe-color) {\n    background-image: linear-gradient(\n        $gradient-orientation,\n        transparent 25%,\n        $stripe-color 25%,\n        $stripe-color 75%,\n        transparent 75%,\n    );\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin progress-linear($theme) {\n    @include css-vars($theme);\n\n    $variant: map.get($theme, variant);\n\n    $bar-height: map.get((\n        material: rem(4px),\n        fluent: rem(4px),\n        bootstrap: rem(16px),\n        indigo-design: rem(4px),\n    ), $variant);\n\n    $gradient-orientation: map.get((\n        material: -45deg,\n        fluent: -45deg,\n        bootstrap: 45deg,\n        indigo-design: 45deg,\n    ), $variant);\n\n    $gradient-orientation-rtl: map.get((\n        material: 45deg,\n        fluent: 45deg,\n        bootstrap: -45deg,\n        indigo-design: -45deg,\n    ), $variant);\n\n    $background-size: map.get((\n        material: rem(40px) rem(40px),\n        fluent: rem(40px) rem(40px),\n        bootstrap: rem(16px) rem(16px),\n        indigo-design: rem(20px),\n    ), $variant);\n\n    $stripe-color: var-get($theme, 'stripes-color');\n    $value-fs: rem(14px, 16px);\n    $value-fw: 600;\n    $value-margin: 0;\n\n    %linear-display {\n        position: relative;\n        display: flex;\n        width: 100%;\n        flex: 1 1 100%;\n        flex-direction: column;\n\n        &[dir='rtl'],\n        [dir='rtl'] & {\n            %linear-bar {\n                transform: rotateY(180deg);\n            }\n        }\n    }\n\n    %linear-bar {\n        position: relative;\n        width: inherit;\n        height: $bar-height;\n        background: var-get($theme, 'track-color');\n        overflow: hidden;\n        border-radius: border-radius(var-get($theme, 'track-border-radius'));\n        z-index: 0;\n    }\n\n    %linear-indicator {\n        width: 100%;\n        position: absolute;\n        height: 100%;\n    }\n\n    %linear-indicator--striped {\n        @if $variant != 'indigo-design' {\n            @include striped-gradient($gradient-orientation, $stripe-color);\n        } @else {\n            @include striped-gradient--indigo($gradient-orientation, $stripe-color);\n        }\n\n        background-size: $background-size;\n\n        [dir='rtl'] & {\n            @if $variant != 'indigo-design' {\n                @include striped-gradient($gradient-orientation-rtl, $stripe-color);\n            } @else {\n                @include striped-gradient--indigo($gradient-orientation-rtl, $stripe-color);\n            }\n        }\n    }\n\n    %linear-indicator--indeterminate-secondary,\n    %linear-indicator--indeterminate-primary\n    {\n        transform-origin: top left;\n        width: 100% !important;\n        height: inherit;\n        position: absolute;\n        background: transparent;\n\n        &::after {\n            content: '';\n            position: absolute;\n            top: 0;\n            inset-inline-start: 0;\n            width: inherit;\n            height: inherit;\n            background: var-get($theme, 'fill-color-default');\n            backface-visibility: hidden;\n        }\n    }\n\n    %linear-indicator--indeterminate-primary {\n        transform: scale3d(0, 1, 1);\n        animation: indeterminate-primary 2000ms infinite linear;\n        left: -145.166611%;\n\n        &::after {\n            animation: indeterminate-primary-scale 2000ms infinite linear;\n        }\n    }\n\n    %linear-indicator--indeterminate-secondary {\n        animation: indeterminate-secondary 2000ms infinite linear;\n        left: -54.888891%;\n\n        &::after {\n            animation: indeterminate-secondary-scale 2000ms infinite linear;\n            width: 100%;\n            height: inherit;\n        }\n    }\n\n    %linear-indicator--default {\n        background: var-get($theme, 'fill-color-default')\n    }\n\n    %linear-indicator--danger {\n        background-color: var-get($theme, 'fill-color-danger');\n    }\n\n    %linear-indicator--warning {\n        background-color: var-get($theme, 'fill-color-warning');\n    }\n\n    %linear-indicator--info {\n        background-color: var-get($theme, 'fill-color-info');\n    }\n\n    %linear-indicator--success {\n        background-color: var-get($theme, 'fill-color-success');\n    }\n\n    %linear-value {\n        margin: $value-margin;\n        color: var-get($theme, 'text-color');\n        font-size: $value-fs;\n        font-weight: $value-fw;\n    }\n\n    %linear-value--start {\n        align-self: flex-start;\n    }\n\n    %linear-value--center {\n        align-self: center;\n    }\n\n    %linear-value--end {\n        align-self: flex-end;\n    }\n\n    %linear-value--top {\n        order: -1;\n    }\n\n    %linear-value--hidden {\n        display: none;\n    }\n\n    $indeterminate-primary-translate-step-2: cubic-bezier(.5, 0, .701732, .495819);\n    $indeterminate-primary-translate-step-3: cubic-bezier(.302435, .381352, .55, .956352);\n\n    $indeterminate-primary-scale-step-2: cubic-bezier(.334731, .12482, .785844, 1);\n    $indeterminate-primary-scale-step-3: cubic-bezier(.06, .11, .6, 1);\n\n    $indeterminate-secondary-translate-step-1: cubic-bezier(.15, 0, .515058, .409685);\n    $indeterminate-secondary-translate-step-2: cubic-bezier(.31033, .284058, .8, .733712);\n    $indeterminate-secondary-translate-step-3: cubic-bezier(.4, .627035, .6, .902026);\n\n    $indeterminate-secondary-scale-step-1: cubic-bezier(.15, 0, .515058, .409685);\n    $indeterminate-secondary-scale-step-2: cubic-bezier(.31033, .284058, .8, .733712);\n    $indeterminate-secondary-scale-step-3: cubic-bezier(.4, .627035, .6, .902026);\n\n    @keyframes indeterminate-primary {\n        0% {\n            transform: translateX(0);\n        }\n\n        20% {\n            animation-timing-function: $indeterminate-primary-translate-step-2;\n            transform: translateX(0);\n        }\n\n        59.15% {\n            animation-timing-function: $indeterminate-primary-translate-step-3;\n            transform: translateX(83.67142%);\n        }\n\n        100% {\n            transform: translateX(200.611057%);\n        }\n    }\n\n    @keyframes indeterminate-primary-scale {\n        0% {\n            transform: scaleX(.08);\n        }\n\n        36.65% {\n            animation-timing-function: $indeterminate-primary-scale-step-2;\n            transform: scaleX(.08);\n        }\n\n        69.15% {\n            animation-timing-function: $indeterminate-primary-scale-step-2;\n            transform: scaleX(.661479);\n        }\n\n        100% {\n            transform: scaleX(.08);\n        }\n    }\n\n    @keyframes indeterminate-secondary {\n        0% {\n            animation-timing-function: $indeterminate-secondary-translate-step-1;\n            transform: translateX(0);\n        }\n\n        25% {\n            animation-timing-function: $indeterminate-secondary-translate-step-2;\n\n            transform: translateX(37.651913%);\n        }\n\n        48.35% {\n            animation-timing-function: $indeterminate-secondary-translate-step-3;\n            transform: translateX(84.386165%);\n        }\n\n        100% {\n            transform: translateX(160.277782%);\n        }\n    }\n\n    @keyframes indeterminate-secondary-scale {\n        0% {\n            animation-timing-function: $indeterminate-secondary-scale-step-1;\n            transform: scaleX(.08);\n        }\n\n        19.15% {\n            animation-timing-function: $indeterminate-secondary-scale-step-2;\n            transform: scaleX(.457104);\n        }\n\n        44.15% {\n            animation-timing-function: $indeterminate-secondary-scale-step-3;\n            transform: scaleX(.72796);\n        }\n\n        100% {\n            transform: scaleX(.08);\n        }\n    }\n}\n\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $base-circle-color [null] - The base circle fill color.\n/// @param {Color | List<Color>} $progress-circle-color [null] - The progress circle fill color.\n/// @param {Color} $text-color [null] - The value text color.\n///\n/// @requires $light-schema\n///\n///\n/// @example scss Change the circle progress color\n///   $my-progress-circular-theme: igx-progress-circular-theme(\n///     $progress-circle-color: purple\n///   );\n///   // Pass the theme to the igx-progress-circular component mixin\n///   @include igx-progress-circular($my-progress-circle-theme);\n@function progress-circular-theme(\n    $schema: $light-schema,\n\n    $base-circle-color: null,\n    $progress-circle-color: null,\n\n    $text-color: null\n) {\n    $name: 'igx-circular-bar';\n    $circular-bar-schema: ();\n\n\n    @if map.has-key($schema, $name) {\n        $circular-bar-schema: map.get($schema, $name);\n    } @else {\n        $circular-bar-schema: $schema;\n    }\n\n    $theme: digest-schema($circular-bar-schema);\n\n    $progress-circle-color-start: map.get($theme, 'progress-circle-color');\n    $progress-circle-color-end: map.get($theme, 'progress-circle-color');\n\n    @if meta.type-of($progress-circle-color) == 'color' {\n        $progress-circle-color-start: $progress-circle-color;\n        $progress-circle-color-end: $progress-circle-color;\n    }\n\n    @if list.length($progress-circle-color) == 2 {\n        $progress-circle-color-start: list.nth($progress-circle-color, 1);\n        $progress-circle-color-end: list.nth($progress-circle-color, 2);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        base-circle-color: $base-circle-color,\n        progress-circle-color-start: $progress-circle-color-start,\n        progress-circle-color-end: $progress-circle-color-end,\n        text-color: $text-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin progress-circular($theme) {\n    // Include rotate animation\n    @include rotate-center();\n\n    @include css-vars($theme);\n\n    $variant: map.get($theme, variant);\n\n    $stroke-width: map.get((\n        material: rem(4px),\n        fluent: rem(4px),\n        bootstrap: rem(8px),\n        indigo-design: rem(6px),\n    ), $variant);\n\n    %circular-display {\n        display: inline-flex;\n        flex: 1 1 auto;\n        width: rem(32px);\n        height: rem(32px);\n        position: relative;\n\n        svg {\n            width: 100%;\n            height: 100%;\n            min-width: inherit;\n            min-height: inherit;\n            //transform-origin: 50% 50%;\n            transform: rotate(-90deg);\n        }\n    }\n\n    %circular-display--indeterminate {\n        @include animation(rotate-center 3s linear normal infinite);\n\n        [dir='rtl'] & {\n            animation-direction: reverse;\n        }\n    }\n\n    %circular-inner {\n        stroke-width: $stroke-width;\n        fill: transparent;\n        stroke: var-get($theme, 'base-circle-color');\n    }\n\n    %circular-outer {\n        fill: transparent;\n        stroke-width: $stroke-width;\n        stroke-dashoffset: 289;\n        stroke-dasharray: 289;\n\n        @if $variant == 'indigo-design' {\n            stroke-linecap: round;\n        }\n    }\n\n    %circular-outer--indeterminate {\n        stroke-dasharray: 289;\n        @include animation(indeterminate-accordion 1.5s cubic-bezier(0, .085, .68, .53) normal infinite);\n\n        [dir='rtl'] & {\n            animation-direction: reverse;\n        }\n    }\n\n    %circular-text {\n        position: absolute;\n        inset-block-start: 50%;\n        inset-inline-start: 50%;\n        transform: translate(-50%, -50%);\n        font-size: rem(16px);\n        line-height: 1;\n        text-align: center;\n        font-weight: 600;\n        fill: var-get($theme, 'text-color');\n    }\n\n    %circular-text--hidden {\n        visibility: hidden;\n    }\n\n    %circular-gradient-start {\n        stop-color: var-get($theme, 'progress-circle-color-start');\n    }\n\n    %circular-gradient-end {\n        stop-color: var-get($theme, 'progress-circle-color-end');\n    }\n\n    @include keyframes('indeterminate-accordion') {\n        from {\n            stroke-dashoffset: 578;\n            stroke-dasharray: 259;\n        }\n\n        to {\n            stroke-dashoffset: 120;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n@use '../../base' as *;\n\n/// @group themes\n/// @access public\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} background [null] - The background color of the filtering row.\n/// @param {Color} header-background [null] - The background color of the query builder header.\n/// @param {Color} header-foreground [null] - The foreground color of the query builder header.\n/// @param {Map} background-and [null] - The background color of advanced filtering \"AND\" condition.\n/// @param {Map} background-and--focus [null] - The background color on focus/selected of advanced filtering \"AND\" condition.\n/// @param {Map} background-or [null] - The background color of advanced filtering \"OR\" condition.\n/// @param {Map} background-or--focus [null] - The background color on focus/selected of advanced filtering \"OR\" condition.\n/// @example scss Set custom query-builder colors\n///   $my-query-builder-theme: query-builder-theme($$background: red);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-query-builder-theme);\n@function query-builder-theme(\n    $schema: $light-schema,\n    $elevations: null,\n\n    $background: null,\n    $header-background: null,\n    $header-foreground: null,\n    $background-and: null,\n    $background-and--focus: null,\n    $background-or: null,\n    $background-or--focus: null,\n) {\n    $name: 'igx-query-builder';\n    $selector: 'igx-query-builder';\n    $query-builder-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $query-builder-schema: map.get($schema, $name);\n    } @else {\n        $query-builder-schema: $schema;\n    }\n\n    $theme: digest-schema($query-builder-schema);\n\n    @if not($header-foreground) and $header-background {\n        $header-foreground: text-contrast($header-background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n\n        background: $background,\n        header-background: $header-background,\n        header-foreground: $header-foreground,\n        background-and: $background-and,\n        background-and--focus: $background-and--focus,\n        background-or: $background-or,\n        background-or--focus: $background-or--focus,\n    ));\n}\n\n////\n/// @group themes\n/// @access private\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $theme - The grid theme used to style the component.\n@mixin query-builder($theme) {\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: $variant == 'bootstrap';\n    $not-bootstrap-theme: not($bootstrap-theme);\n\n    $vertical-space-comfortable: rem(16px);\n    $vertical-space-cosy: rem(12px);\n    $vertical-space-compact: rem(8px);\n    $horizontal-space-comfortable: rem(16px);\n    $horizontal-space-cosy: rem(12px);\n    $horizontal-space-compact: rem(8px);\n    $icon-size: rem(18px);\n\n    @include css-vars($theme);\n\n    %advanced-filter {\n        width: auto;\n        min-width: rem(660px);\n        background-color: var-get($theme, 'background');\n        border-radius: border-radius(rem(4px));\n        box-shadow: elevation(12);\n    }\n\n    %advanced-filter__header {\n        display: flex;\n        align-items: center;\n        padding: $vertical-space-comfortable;\n        background-color: var-get($theme, 'header-background');\n        color: var-get($theme, 'header-foreground');\n        user-select: none;\n\n        h4,\n        .ig-typography__h6 {\n            margin-bottom: 0;\n        }\n    }\n\n    %advanced-filter__main {\n        display: block;\n        padding: rem(16px);\n        overflow: auto;\n        min-height: rem(214px);\n        max-height: rem(468px);\n\n        [igxButton] + [igxButton] {\n            margin-inline-start: rem(8px);\n        }\n    }\n\n    %advanced-filter__outlet {\n        igx-select-item > igx-icon {\n            width: var(--igx-icon-size, #{$icon-size});\n            height: var(--igx-icon-size, #{$icon-size});\n            font-size: var(--igx-icon-size, #{$icon-size});\n            margin-inline-end: rem(8px);\n        }\n    }\n\n    %filter-tree {\n        display: flex;\n\n        + %filter-tree,\n        + %filter-tree__expression-item,\n        + %filter-tree__inputs {\n            margin-top: $vertical-space-comfortable;\n        }\n    }\n\n    %filter-tree__line {\n        width: rem(8px);\n        min-width: rem(8px);\n        background-color: white;\n        margin-inline-end: $horizontal-space-comfortable;\n        outline-style: none;\n        border-radius: border-radius(rem(4px));\n        cursor: pointer;\n    }\n\n    %filter-tree__line--and {\n        background: var-get($theme, 'background-and');\n\n        &-selected {\n            background: var-get($theme, 'background-and--focus');\n        }\n\n        &:focus {\n            box-shadow: inset 0 0 0 rem(2px) var-get($theme, 'background-and--focus');\n        }\n    }\n\n    %filter-tree__line--or {\n        background: var-get($theme, 'background-or');\n\n        &-selected {\n            background-color: var-get($theme, 'background-or--focus');\n        }\n\n        &:focus {\n            box-shadow: inset 0 0 0 rem(2px) var-get($theme, 'background-or--focus');\n        }\n    }\n\n    %filter-tree__expression {\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n    }\n\n    %filter-tree__expression-item {\n        display: flex;\n        align-items: center;\n\n        + %filter-tree,\n        + %filter-tree__inputs,\n        + %filter-tree__expression-item {\n            margin-top: $vertical-space-comfortable;\n        }\n\n        > igx-chip igx-prefix {\n            display: flex;\n        }\n    }\n\n    %filter-tree__expression-column {\n        padding: 0 rem(8px);\n    }\n\n    %filter-tree__expression-actions {\n        display: inline-flex;\n        margin: 0 rem(8px);\n\n        igx-icon {\n            cursor: pointer;\n            color: color(null, 'gray', 500);\n            outline-style: none;\n\n            &:hover,\n            &:focus {\n                color: color(null, 'gray', 800);\n            }\n        }\n\n        igx-icon + igx-icon {\n            margin-inline-start: rem(8px);\n        }\n    }\n\n    %filter-tree__expression-condition {\n        opacity: .7;\n    }\n\n    %filter-tree__buttons {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-top: $vertical-space-comfortable;\n\n        + %filter-tree,\n        + %filter-tree__expression-item,\n        + %filter-tree__inputs {\n            margin-top: $vertical-space-comfortable;\n        }\n    }\n\n    %filter-tree__inputs {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n\n        igx-select + igx-select,\n        igx-select + igx-input-group,\n        igx-select + igx-date-picker,\n        igx-select + igx-time-picker,\n        igx-input-group + igx-select {\n            margin-inline-start: rem(8px);\n        }\n\n        + %filter-tree,\n        + %filter-tree__expression-item {\n            margin-top: $vertical-space-comfortable;\n        }\n    }\n\n    %filter-tree__inputs-actions {\n        display: flex;\n        margin: 0 rem(8px);\n        align-items: center;\n\n        [igxButton] {\n            transition: none;\n        }\n\n        [igxButton] + [igxButton] {\n            margin-inline-start: rem(8px);\n        }\n    }\n\n    %filter-legend {\n        display: flex;\n        margin-inline-start: auto;\n        pointer-events: none;\n    }\n\n    %filter-legend__item {\n        position: relative;\n        display: inline-flex;\n        align-items: center;\n        font-size: rem(12px);\n\n        &::before {\n            content: '';\n            width: rem(24px);\n            height: rem(24px);\n            background: white;\n            border-radius: border-radius(rem(4px));\n            margin-inline-end: rem(8px);\n        }\n\n        + %filter-legend__item {\n            margin-inline-start: rem(24px);\n        }\n    }\n\n    %filter-legend__item--and::before {\n        background: var-get($theme, 'background-and');\n    }\n\n    %filter-legend__item--or::before {\n        background: var-get($theme, 'background-or');\n    }\n\n    %filter-con-menu {\n        position: relative;\n        display: flex;\n        flex-flow: column;\n        width: rem(196px);\n        background-color: var-get($theme, 'background');\n        padding: rem(16px);\n        margin-inline-start: rem(16px);\n        border-radius: border-radius(rem(4px));\n        border: rem(1px) solid color(null, 'gray', 200);\n\n        > [igxButton] + [igxButton],\n        igx-buttongroup + [igxButton],\n        [igxButton] + igx-buttongroup {\n            margin-top: $vertical-space-comfortable;\n        }\n\n        > [igxButton]%filter-con-menu__close-btn + [igxButton],\n        [igxButton]%filter-con-menu__close-btn + igx-buttongroup {\n            margin-top: 0;\n        }\n\n        [igxButton] > igx-icon + * {\n            margin-inline-start: rem(8px);\n        }\n\n        igx-buttongroup > * {\n            box-shadow: none;\n        }\n    }\n\n    %filter-con-menu__delete-btn {\n        color: color(null, 'error');\n        @if $bootstrap-theme {\n            border-color: color(null, 'error');\n        }\n\n        &:hover,\n        &:focus {\n            @if $bootstrap-theme {\n                background: color(null, 'error');\n                border-color: color(null, 'error');\n                color: color(null, 'gray', 100);\n            } @else {\n                color: color(null, 'error');\n            }\n        }\n    }\n\n    %filter-con-menu__close-btn {\n        position: absolute;\n        top: rem(-18px);\n        inset-inline-end: rem(-18px);\n        background-color: var-get($theme, 'background');\n        border: rem(1px) solid color(null, 'gray', 200);\n\n        &:hover,\n        &:focus {\n            @if $not-bootstrap-theme {\n                background-color: var-get($theme, 'background');\n            }\n        }\n    }\n\n    %filter-empty {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: rem(144px);\n    }\n\n    %filter-empty__title {\n        color: color(null, 'gray', 500);\n    }\n\n    %advanced-filter--cosy {\n        %advanced-filter__main {\n            min-height: rem(164px);\n            max-height: rem(394px);\n        }\n\n        %filter-empty {\n            height: rem(107px);\n        }\n\n        %advanced-filter__main,\n        %advanced-filter__header {\n            padding: $vertical-space-cosy rem(16px);\n        }\n\n        %filter-tree__line {\n            margin-inline-end: $horizontal-space-cosy;\n        }\n\n        %filter-tree {\n            + %filter-tree,\n            + %filter-tree__expression-item,\n            + %filter-tree__inputs {\n                margin-top: $vertical-space-cosy;\n            }\n        }\n\n        %filter-tree__expression-item {\n            + %filter-tree,\n            + %filter-tree__inputs,\n            + %filter-tree__expression-item {\n                margin-top: $vertical-space-cosy;\n            }\n        }\n\n        %filter-tree__buttons {\n            margin-top: $vertical-space-cosy;\n\n            + %filter-tree,\n            + %filter-tree__expression-item,\n            + %filter-tree__inputs {\n                margin-top: $vertical-space-cosy;\n            }\n        }\n\n        %filter-tree__inputs {\n            + %filter-tree,\n            + %filter-tree__expression-item {\n                margin-top: $vertical-space-cosy;\n            }\n        }\n    }\n\n    %advanced-filter--compact {\n        %advanced-filter__main {\n            min-height: rem(138px);\n            max-height: rem(305px);\n        }\n\n        %filter-empty {\n            height: rem(92px);\n        }\n\n        %advanced-filter__main,\n        %advanced-filter__header {\n            padding: $vertical-space-compact rem(16px);\n        }\n\n        %filter-tree__expression-actions igx-icon {\n            width: var(--igx-icon-size, #{$icon-size});\n            height: var(--igx-icon-size, #{$icon-size});\n            font-size: var(--igx-icon-size, #{$icon-size});\n        }\n\n        %filter-tree__line {\n            margin-inline-end: $horizontal-space-compact;\n        }\n\n        %filter-tree {\n            + %filter-tree,\n            + %filter-tree__expression-item,\n            + %filter-tree__inputs {\n                margin-top: $vertical-space-compact;\n            }\n        }\n\n        %filter-tree__expression-item {\n            + %filter-tree,\n            + %filter-tree__inputs,\n            + %filter-tree__expression-item {\n                margin-top: $vertical-space-compact;\n            }\n        }\n\n        %filter-tree__buttons {\n            margin-top: $vertical-space-compact;\n\n            + %filter-tree,\n            + %filter-tree__expression-item,\n            + %filter-tree__inputs {\n                margin-top: $vertical-space-compact;\n            }\n        }\n\n        %filter-tree__inputs {\n            + %filter-tree,\n            + %filter-tree__expression-item {\n                margin-top: $vertical-space-compact;\n            }\n        }\n    }\n\n    %advanced-filter--inline {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        max-width: 100%;\n        height: inherit;\n        max-height: inherit;\n        min-width: rem(480px);\n        box-shadow: none;\n\n        %advanced-filter__main {\n            min-height: initial;\n            max-height: initial;\n            flex-grow: 1;\n        }\n    }\n\n    %filter-con-menu--cosy {\n        > [igxButton] + [igxButton],\n        igx-buttongroup + [igxButton],\n        [igxButton] + igx-buttongroup {\n            margin-top: $vertical-space-cosy;\n        }\n    }\n\n    %filter-con-menu--compact {\n        > [igxButton] + [igxButton],\n        igx-buttongroup + [igxButton],\n        [igxButton] + igx-buttongroup {\n            margin-top: $vertical-space-compact;\n        }\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// If only background color is specified, text/icon color will be assigned automatically to a contrasting color.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $thumb-background [null] - The background color used for the thumb.\n/// @param {Color} $track-background [null] - The background color used for the track.\n/// @param {Number | String} $size [null] - The size of the track.\n/// @requires $light-schema\n/// @example scss Change the background and track colors\n///   $my-scrollbar-theme: scrollbar-theme($thumb-background: black, $track-background: gray);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-scrollbar-theme);\n@function scrollbar-theme(\n    $schema: $light-schema,\n    $size: null,\n    $thumb-background: null,\n    $track-background: null,\n) {\n    $name: 'ig-scrollbar';\n    $selector: '.ig-scrollbar';\n    $scrollbar-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $scrollbar-schema: map.get($schema, $name);\n    } @else {\n        $scrollbar-schema: $schema;\n    }\n\n    $theme: digest-schema($scrollbar-schema);\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        thumb-background: $thumb-background,\n        track-background: $track-background,\n        size: $size\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin scrollbar($theme) {\n    @include css-vars($theme);\n\n    %scrollbar-display {\n        @if type-of(map.get($theme, 'size') == 'string') {\n            scrollbar-width: var-get($theme, 'size');\n        }\n\n        scrollbar-color: var-get($theme, 'thumb-background') var-get($theme, 'track-background');\n\n        ::-webkit-scrollbar {\n            width: var-get($theme, 'size');\n            height: var-get($theme, 'size');\n            background: var-get($theme, 'track-background');\n        }\n\n        ::-webkit-scrollbar-thumb {\n            background: var-get($theme, 'thumb-background');\n        }\n    }\n\n    @media (hover: none) {\n        %scrollbar-display ::-webkit-scrollbar {\n            width: auto;\n            height: auto;\n        }\n    }\n}\n","@use '../mixins' as *;\n\n////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin fade-in-bck {\n    @include keyframes(fade-in-bck) {\n        0% {\n            transform: translateZ(80px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateZ(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-bl {\n    @include keyframes(fade-in-bl) {\n        0% {\n            transform: translateX(-50px) translateY(50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateX(0) translateY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-bottom {\n    @include keyframes(fade-in-bottom) {\n        0% {\n            transform: translateY(50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-br {\n    @include keyframes(fade-in-br) {\n        0% {\n            transform: translateX(50px) translateY(50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateX(0) translateY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-fwd {\n    @include keyframes(fade-in-fwd) {\n        0% {\n            transform: translateZ(-80px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateZ(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-left {\n    @include keyframes(fade-in-left) {\n        0% {\n            transform: translateX(-50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateX(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-right {\n    @include keyframes(fade-in-right) {\n        0% {\n            transform: translateX(50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateX(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-tl {\n    @include keyframes(fade-in-tl) {\n        0% {\n            transform: translateX(-50px) translateY(-50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateX(0) translateY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-top {\n    @include keyframes(fade-in-top) {\n        0% {\n            transform: translateY(-50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-tr {\n    @include keyframes(fade-in-tr) {\n        0% {\n            transform: translateX(50px) translateY(-50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateX(0) translateY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in {\n    @include keyframes(fade-in) {\n        0% {\n            opacity: 0;\n        }\n\n        100% {\n            opacity: 1;\n        }\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access private\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Returns a map containing all style properties related to the theming the watermark directive.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Number} $border-radius [null] - The border radius used for the link.\n/// @param {Color} $border-color [null] - The border color used for the  link.\n/// @param {Color} $link-background [null] - The background color used for the link.\n/// @param {Color} $color [null] - The color used for the link text.\n///\n/// @requires $light-schema\n///\n///\n///\n/// @example scss Change the watermark link background\n///   $my-watermark-theme: watermark-theme($link-background: magenta);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-watermark-theme);\n@function watermark-theme(\n    $schema: $light-schema,\n\n    $border-radius: null,\n    $background-image: null,\n    $link-background: null,\n    $color: null,\n    $border-color: null,\n) {\n    $name: 'igx-watermark';\n    $watermark-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $watermark-schema: map.get($schema, $name);\n    } @else {\n        $watermark-schema: $schema;\n    }\n\n    $theme: digest-schema($watermark-schema);\n\n    @if not($color) and $link-background {\n        $color: text-contrast($link-background);\n    }\n\n    @if not($border-radius) {\n        $border-radius: border-radius(map.get($theme, 'border-radius'));\n    }\n\n    @return extend($theme, (\n        name: $name,\n        background-image: $background-image,\n        link-background: $link-background,\n        border-radius: $border-radius,\n        color: $color,\n        border-color: $border-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin watermark($theme) {\n    @include css-vars($theme);\n\n    %igx-watermark {\n        display: block;\n        position: absolute;\n        bottom: 0;\n        inset-inline-end: 0;\n        width: 100%;\n        height: 100%;\n        z-index: 10000;\n        pointer-events: none;\n    }\n\n    %igx-watermark__link {\n        display: inline-flex;\n        align-items: center;\n        position: absolute;\n        bottom: 0;\n        inset-inline-end: 0;\n        font-size: rem(14px);\n        padding: rem(2px) rem(4px);\n        line-height: normal;\n        border-radius: var-get($theme, 'border-radius');\n        border: rem(1px) solid var-get($theme, 'border-color');\n        color: var-get($theme, 'color');\n        z-index: 10002;\n        background-color: var-get($theme, 'link-background');\n        pointer-events: all;\n        text-decoration: none;\n    }\n\n    %igx-watermark__background-img {\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        top: 0;\n        inset-inline-start: 0;\n        z-index: 10001;\n        pointer-events: none;\n        background-image: var-get($theme, 'background-image');\n        background-repeat: repeat;\n        background-position: rem(16px) rem(16px);\n        // Target only IE 10,11.\n        @media all and (-ms-high-contrast: none)\n        {\n            background-image: none;\n        }\n    }\n}\n"]}