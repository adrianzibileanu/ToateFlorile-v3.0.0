import { NgModule } from '@angular/core';
import { IgxColumnComponent } from './column.component';
import { IgxColumnGroupComponent } from './column-group.component';
import { IgxColumnLayoutComponent } from './column-layout.component';
import { IgxCellEditorTemplateDirective, IgxCellFooterTemplateDirective, IgxCellHeaderTemplateDirective, IgxCellTemplateDirective, IgxCellValidationErrorDirective, IgxCollapsibleIndicatorTemplateDirective, IgxFilterCellTemplateDirective, IgxSummaryTemplateDirective } from './templates.directive';
import { IgxColumMaxLengthValidatorDirective, IgxColumnEmailValidatorDirective, IgxColumnMaxValidatorDirective, IgxColumnMinLengthValidatorDirective, IgxColumnMinValidatorDirective, IgxColumnRequiredValidatorDirective, IgxColumPatternValidatorDirective } from './validators.directive';
import * as i0 from "@angular/core";
export class IgxGridColumnModule {
}
IgxGridColumnModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: IgxGridColumnModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IgxGridColumnModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.0.0", ngImport: i0, type: IgxGridColumnModule, declarations: [IgxColumnRequiredValidatorDirective,
        IgxColumnMinValidatorDirective,
        IgxColumnMaxValidatorDirective,
        IgxColumnMinLengthValidatorDirective,
        IgxColumMaxLengthValidatorDirective,
        IgxColumnEmailValidatorDirective,
        IgxColumPatternValidatorDirective,
        IgxFilterCellTemplateDirective,
        IgxSummaryTemplateDirective,
        IgxCellTemplateDirective,
        IgxCellValidationErrorDirective,
        IgxCellHeaderTemplateDirective,
        IgxCellFooterTemplateDirective,
        IgxCellEditorTemplateDirective,
        IgxCollapsibleIndicatorTemplateDirective,
        IgxColumnComponent,
        IgxColumnGroupComponent,
        IgxColumnLayoutComponent], exports: [IgxColumnRequiredValidatorDirective,
        IgxColumnMinValidatorDirective,
        IgxColumnMaxValidatorDirective,
        IgxColumnMinLengthValidatorDirective,
        IgxColumMaxLengthValidatorDirective,
        IgxColumnEmailValidatorDirective,
        IgxColumPatternValidatorDirective,
        IgxFilterCellTemplateDirective,
        IgxSummaryTemplateDirective,
        IgxCellTemplateDirective,
        IgxCellValidationErrorDirective,
        IgxCellHeaderTemplateDirective,
        IgxCellFooterTemplateDirective,
        IgxCellEditorTemplateDirective,
        IgxCollapsibleIndicatorTemplateDirective,
        IgxColumnComponent,
        IgxColumnGroupComponent,
        IgxColumnLayoutComponent] });
IgxGridColumnModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: IgxGridColumnModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: IgxGridColumnModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        IgxColumnRequiredValidatorDirective,
                        IgxColumnMinValidatorDirective,
                        IgxColumnMaxValidatorDirective,
                        IgxColumnMinLengthValidatorDirective,
                        IgxColumMaxLengthValidatorDirective,
                        IgxColumnEmailValidatorDirective,
                        IgxColumPatternValidatorDirective,
                        IgxFilterCellTemplateDirective,
                        IgxSummaryTemplateDirective,
                        IgxCellTemplateDirective,
                        IgxCellValidationErrorDirective,
                        IgxCellHeaderTemplateDirective,
                        IgxCellFooterTemplateDirective,
                        IgxCellEditorTemplateDirective,
                        IgxCollapsibleIndicatorTemplateDirective,
                        IgxColumnComponent,
                        IgxColumnGroupComponent,
                        IgxColumnLayoutComponent
                    ],
                    exports: [
                        IgxColumnRequiredValidatorDirective,
                        IgxColumnMinValidatorDirective,
                        IgxColumnMaxValidatorDirective,
                        IgxColumnMinLengthValidatorDirective,
                        IgxColumMaxLengthValidatorDirective,
                        IgxColumnEmailValidatorDirective,
                        IgxColumPatternValidatorDirective,
                        IgxFilterCellTemplateDirective,
                        IgxSummaryTemplateDirective,
                        IgxCellTemplateDirective,
                        IgxCellValidationErrorDirective,
                        IgxCellHeaderTemplateDirective,
                        IgxCellFooterTemplateDirective,
                        IgxCellEditorTemplateDirective,
                        IgxCollapsibleIndicatorTemplateDirective,
                        IgxColumnComponent,
                        IgxColumnGroupComponent,
                        IgxColumnLayoutComponent
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9ncmlkcy9jb2x1bW5zL2NvbHVtbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNuRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNyRSxPQUFPLEVBQ0gsOEJBQThCLEVBQzlCLDhCQUE4QixFQUM5Qiw4QkFBOEIsRUFDOUIsd0JBQXdCLEVBQ3hCLCtCQUErQixFQUMvQix3Q0FBd0MsRUFDeEMsOEJBQThCLEVBQzlCLDJCQUEyQixFQUM5QixNQUFNLHVCQUF1QixDQUFDO0FBQy9CLE9BQU8sRUFDSCxtQ0FBbUMsRUFBRSxnQ0FBZ0MsRUFBRSw4QkFBOEIsRUFDckcsb0NBQW9DLEVBQUUsOEJBQThCLEVBQUUsbUNBQW1DLEVBQ3pHLGlDQUFpQyxFQUNwQyxNQUFNLHdCQUF3QixDQUFDOztBQTRDaEMsTUFBTSxPQUFPLG1CQUFtQjs7Z0hBQW5CLG1CQUFtQjtpSEFBbkIsbUJBQW1CLGlCQXhDeEIsbUNBQW1DO1FBQ25DLDhCQUE4QjtRQUM5Qiw4QkFBOEI7UUFDOUIsb0NBQW9DO1FBQ3BDLG1DQUFtQztRQUNuQyxnQ0FBZ0M7UUFDaEMsaUNBQWlDO1FBQ2pDLDhCQUE4QjtRQUM5QiwyQkFBMkI7UUFDM0Isd0JBQXdCO1FBQ3hCLCtCQUErQjtRQUMvQiw4QkFBOEI7UUFDOUIsOEJBQThCO1FBQzlCLDhCQUE4QjtRQUM5Qix3Q0FBd0M7UUFDeEMsa0JBQWtCO1FBQ2xCLHVCQUF1QjtRQUN2Qix3QkFBd0IsYUFHeEIsbUNBQW1DO1FBQ25DLDhCQUE4QjtRQUM5Qiw4QkFBOEI7UUFDOUIsb0NBQW9DO1FBQ3BDLG1DQUFtQztRQUNuQyxnQ0FBZ0M7UUFDaEMsaUNBQWlDO1FBQ2pDLDhCQUE4QjtRQUM5QiwyQkFBMkI7UUFDM0Isd0JBQXdCO1FBQ3hCLCtCQUErQjtRQUMvQiw4QkFBOEI7UUFDOUIsOEJBQThCO1FBQzlCLDhCQUE4QjtRQUM5Qix3Q0FBd0M7UUFDeEMsa0JBQWtCO1FBQ2xCLHVCQUF1QjtRQUN2Qix3QkFBd0I7aUhBR25CLG1CQUFtQjsyRkFBbkIsbUJBQW1CO2tCQTFDL0IsUUFBUTttQkFBQztvQkFDTixZQUFZLEVBQUU7d0JBQ1YsbUNBQW1DO3dCQUNuQyw4QkFBOEI7d0JBQzlCLDhCQUE4Qjt3QkFDOUIsb0NBQW9DO3dCQUNwQyxtQ0FBbUM7d0JBQ25DLGdDQUFnQzt3QkFDaEMsaUNBQWlDO3dCQUNqQyw4QkFBOEI7d0JBQzlCLDJCQUEyQjt3QkFDM0Isd0JBQXdCO3dCQUN4QiwrQkFBK0I7d0JBQy9CLDhCQUE4Qjt3QkFDOUIsOEJBQThCO3dCQUM5Qiw4QkFBOEI7d0JBQzlCLHdDQUF3Qzt3QkFDeEMsa0JBQWtCO3dCQUNsQix1QkFBdUI7d0JBQ3ZCLHdCQUF3QjtxQkFDM0I7b0JBQ0QsT0FBTyxFQUFFO3dCQUNMLG1DQUFtQzt3QkFDbkMsOEJBQThCO3dCQUM5Qiw4QkFBOEI7d0JBQzlCLG9DQUFvQzt3QkFDcEMsbUNBQW1DO3dCQUNuQyxnQ0FBZ0M7d0JBQ2hDLGlDQUFpQzt3QkFDakMsOEJBQThCO3dCQUM5QiwyQkFBMkI7d0JBQzNCLHdCQUF3Qjt3QkFDeEIsK0JBQStCO3dCQUMvQiw4QkFBOEI7d0JBQzlCLDhCQUE4Qjt3QkFDOUIsOEJBQThCO3dCQUM5Qix3Q0FBd0M7d0JBQ3hDLGtCQUFrQjt3QkFDbEIsdUJBQXVCO3dCQUN2Qix3QkFBd0I7cUJBQzNCO2lCQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElneENvbHVtbkNvbXBvbmVudCB9IGZyb20gJy4vY29sdW1uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hDb2x1bW5Hcm91cENvbXBvbmVudCB9IGZyb20gJy4vY29sdW1uLWdyb3VwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hDb2x1bW5MYXlvdXRDb21wb25lbnQgfSBmcm9tICcuL2NvbHVtbi1sYXlvdXQuY29tcG9uZW50JztcbmltcG9ydCB7XG4gICAgSWd4Q2VsbEVkaXRvclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgIElneENlbGxGb290ZXJUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hDZWxsSGVhZGVyVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgSWd4Q2VsbFRlbXBsYXRlRGlyZWN0aXZlLFxuICAgIElneENlbGxWYWxpZGF0aW9uRXJyb3JEaXJlY3RpdmUsXG4gICAgSWd4Q29sbGFwc2libGVJbmRpY2F0b3JUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hGaWx0ZXJDZWxsVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgSWd4U3VtbWFyeVRlbXBsYXRlRGlyZWN0aXZlXG59IGZyb20gJy4vdGVtcGxhdGVzLmRpcmVjdGl2ZSc7XG5pbXBvcnQge1xuICAgIElneENvbHVtTWF4TGVuZ3RoVmFsaWRhdG9yRGlyZWN0aXZlLCBJZ3hDb2x1bW5FbWFpbFZhbGlkYXRvckRpcmVjdGl2ZSwgSWd4Q29sdW1uTWF4VmFsaWRhdG9yRGlyZWN0aXZlLFxuICAgIElneENvbHVtbk1pbkxlbmd0aFZhbGlkYXRvckRpcmVjdGl2ZSwgSWd4Q29sdW1uTWluVmFsaWRhdG9yRGlyZWN0aXZlLCBJZ3hDb2x1bW5SZXF1aXJlZFZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICBJZ3hDb2x1bVBhdHRlcm5WYWxpZGF0b3JEaXJlY3RpdmVcbn0gZnJvbSAnLi92YWxpZGF0b3JzLmRpcmVjdGl2ZSc7XG5cbkBOZ01vZHVsZSh7XG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIElneENvbHVtblJlcXVpcmVkVmFsaWRhdG9yRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDb2x1bW5NaW5WYWxpZGF0b3JEaXJlY3RpdmUsXG4gICAgICAgIElneENvbHVtbk1heFZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q29sdW1uTWluTGVuZ3RoVmFsaWRhdG9yRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDb2x1bU1heExlbmd0aFZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q29sdW1uRW1haWxWYWxpZGF0b3JEaXJlY3RpdmUsXG4gICAgICAgIElneENvbHVtUGF0dGVyblZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICAgICAgSWd4RmlsdGVyQ2VsbFRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hTdW1tYXJ5VGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIElneENlbGxUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q2VsbFZhbGlkYXRpb25FcnJvckRpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q2VsbEhlYWRlclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDZWxsRm9vdGVyVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIElneENlbGxFZGl0b3JUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q29sbGFwc2libGVJbmRpY2F0b3JUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q29sdW1uQ29tcG9uZW50LFxuICAgICAgICBJZ3hDb2x1bW5Hcm91cENvbXBvbmVudCxcbiAgICAgICAgSWd4Q29sdW1uTGF5b3V0Q29tcG9uZW50XG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIElneENvbHVtblJlcXVpcmVkVmFsaWRhdG9yRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDb2x1bW5NaW5WYWxpZGF0b3JEaXJlY3RpdmUsXG4gICAgICAgIElneENvbHVtbk1heFZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q29sdW1uTWluTGVuZ3RoVmFsaWRhdG9yRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDb2x1bU1heExlbmd0aFZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q29sdW1uRW1haWxWYWxpZGF0b3JEaXJlY3RpdmUsXG4gICAgICAgIElneENvbHVtUGF0dGVyblZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICAgICAgSWd4RmlsdGVyQ2VsbFRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hTdW1tYXJ5VGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIElneENlbGxUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q2VsbFZhbGlkYXRpb25FcnJvckRpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q2VsbEhlYWRlclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hDZWxsRm9vdGVyVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIElneENlbGxFZGl0b3JUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q29sbGFwc2libGVJbmRpY2F0b3JUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q29sdW1uQ29tcG9uZW50LFxuICAgICAgICBJZ3hDb2x1bW5Hcm91cENvbXBvbmVudCxcbiAgICAgICAgSWd4Q29sdW1uTGF5b3V0Q29tcG9uZW50XG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBJZ3hHcmlkQ29sdW1uTW9kdWxlIHsgfVxuIl19