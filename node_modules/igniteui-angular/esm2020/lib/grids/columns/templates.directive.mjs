import { Directive } from '@angular/core';
import * as i0 from "@angular/core";
export class IgxFilterCellTemplateDirective {
    constructor(template) {
        this.template = template;
    }
    static ngTemplateContextGuard(_directive, context) {
        return true;
    }
    ;
}
IgxFilterCellTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: IgxFilterCellTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
IgxFilterCellTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.0.0", type: IgxFilterCellTemplateDirective, selector: "[igxFilterCellTemplate]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: IgxFilterCellTemplateDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[igxFilterCellTemplate]'
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
export class IgxCellTemplateDirective {
    constructor(template) {
        this.template = template;
    }
    static ngTemplateContextGuard(_directive, context) {
        return true;
    }
    ;
}
IgxCellTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: IgxCellTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
IgxCellTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.0.0", type: IgxCellTemplateDirective, selector: "[igxCell]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: IgxCellTemplateDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[igxCell]'
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
export class IgxCellValidationErrorDirective {
    constructor(template) {
        this.template = template;
    }
    static ngTemplateContextGuard(_directive, context) {
        return true;
    }
    ;
}
IgxCellValidationErrorDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: IgxCellValidationErrorDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
IgxCellValidationErrorDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.0.0", type: IgxCellValidationErrorDirective, selector: "[igxCellValidationError]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: IgxCellValidationErrorDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[igxCellValidationError]'
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
export class IgxCellHeaderTemplateDirective {
    constructor(template) {
        this.template = template;
    }
    static ngTemplateContextGuard(_directive, context) {
        return true;
    }
    ;
}
IgxCellHeaderTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: IgxCellHeaderTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
IgxCellHeaderTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.0.0", type: IgxCellHeaderTemplateDirective, selector: "[igxHeader]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: IgxCellHeaderTemplateDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[igxHeader]'
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
/**
 * @hidden
 */
export class IgxCellFooterTemplateDirective {
    constructor(template) {
        this.template = template;
    }
}
IgxCellFooterTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: IgxCellFooterTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
IgxCellFooterTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.0.0", type: IgxCellFooterTemplateDirective, selector: "[igxFooter]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: IgxCellFooterTemplateDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[igxFooter]'
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
export class IgxCellEditorTemplateDirective {
    constructor(template) {
        this.template = template;
    }
    static ngTemplateContextGuard(_directive, context) {
        return true;
    }
    ;
}
IgxCellEditorTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: IgxCellEditorTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
IgxCellEditorTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.0.0", type: IgxCellEditorTemplateDirective, selector: "[igxCellEditor]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: IgxCellEditorTemplateDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[igxCellEditor]'
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
export class IgxCollapsibleIndicatorTemplateDirective {
    constructor(template) {
        this.template = template;
    }
    static ngTemplateContextGuard(_directive, context) {
        return true;
    }
    ;
}
IgxCollapsibleIndicatorTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: IgxCollapsibleIndicatorTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
IgxCollapsibleIndicatorTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.0.0", type: IgxCollapsibleIndicatorTemplateDirective, selector: "[igxCollapsibleIndicator]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: IgxCollapsibleIndicatorTemplateDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[igxCollapsibleIndicator]'
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
export class IgxSummaryTemplateDirective {
    constructor(template) {
        this.template = template;
    }
    static ngTemplateContextGuard(_directive, context) {
        return true;
    }
    ;
}
IgxSummaryTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: IgxSummaryTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
IgxSummaryTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.0.0", type: IgxSummaryTemplateDirective, selector: "[igxSummary]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: IgxSummaryTemplateDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[igxSummary]'
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGVzLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9ncmlkcy9jb2x1bW5zL3RlbXBsYXRlcy5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBZSxNQUFNLGVBQWUsQ0FBQzs7QUFPdkQsTUFBTSxPQUFPLDhCQUE4QjtJQUN2QyxZQUFtQixRQUErQztRQUEvQyxhQUFRLEdBQVIsUUFBUSxDQUF1QztJQUFJLENBQUM7SUFFaEUsTUFBTSxDQUFDLHNCQUFzQixDQUFDLFVBQTBDLEVBQzNFLE9BQWdCO1FBQ2hCLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFBQSxDQUFDOzsySEFOTyw4QkFBOEI7K0dBQTlCLDhCQUE4QjsyRkFBOUIsOEJBQThCO2tCQUgxQyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSx5QkFBeUI7aUJBQ3RDOztBQWFELE1BQU0sT0FBTyx3QkFBd0I7SUFDakMsWUFBbUIsUUFBNkM7UUFBN0MsYUFBUSxHQUFSLFFBQVEsQ0FBcUM7SUFBSSxDQUFDO0lBRTlELE1BQU0sQ0FBQyxzQkFBc0IsQ0FBQyxVQUFvQyxFQUNyRSxPQUFnQjtRQUNoQixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBQUEsQ0FBQzs7cUhBTk8sd0JBQXdCO3lHQUF4Qix3QkFBd0I7MkZBQXhCLHdCQUF3QjtrQkFIcEMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsV0FBVztpQkFDeEI7O0FBYUQsTUFBTSxPQUFPLCtCQUErQjtJQUN4QyxZQUFtQixRQUE2QztRQUE3QyxhQUFRLEdBQVIsUUFBUSxDQUFxQztJQUFJLENBQUM7SUFFOUQsTUFBTSxDQUFDLHNCQUFzQixDQUFDLFVBQTJDLEVBQzVFLE9BQWdCO1FBQ2hCLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFBQSxDQUFDOzs0SEFOTywrQkFBK0I7Z0hBQS9CLCtCQUErQjsyRkFBL0IsK0JBQStCO2tCQUgzQyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSwwQkFBMEI7aUJBQ3ZDOztBQWFELE1BQU0sT0FBTyw4QkFBOEI7SUFDdkMsWUFBbUIsUUFBK0M7UUFBL0MsYUFBUSxHQUFSLFFBQVEsQ0FBdUM7SUFBSSxDQUFDO0lBRWhFLE1BQU0sQ0FBQyxzQkFBc0IsQ0FBQyxVQUEwQyxFQUMzRSxPQUFnQjtRQUNoQixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBQUEsQ0FBQzs7MkhBTk8sOEJBQThCOytHQUE5Qiw4QkFBOEI7MkZBQTlCLDhCQUE4QjtrQkFIMUMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsYUFBYTtpQkFDMUI7O0FBVUQ7O0dBRUc7QUFJSCxNQUFNLE9BQU8sOEJBQThCO0lBQ3ZDLFlBQW1CLFFBQTBCO1FBQTFCLGFBQVEsR0FBUixRQUFRLENBQWtCO0lBQUksQ0FBQzs7MkhBRHpDLDhCQUE4QjsrR0FBOUIsOEJBQThCOzJGQUE5Qiw4QkFBOEI7a0JBSDFDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLGFBQWE7aUJBQzFCOztBQVFELE1BQU0sT0FBTyw4QkFBOEI7SUFDdkMsWUFBbUIsUUFBNkM7UUFBN0MsYUFBUSxHQUFSLFFBQVEsQ0FBcUM7SUFBSSxDQUFDO0lBRTlELE1BQU0sQ0FBQyxzQkFBc0IsQ0FBQyxVQUEwQyxFQUMzRSxPQUFnQjtRQUNoQixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBQUEsQ0FBQzs7MkhBTk8sOEJBQThCOytHQUE5Qiw4QkFBOEI7MkZBQTlCLDhCQUE4QjtrQkFIMUMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsaUJBQWlCO2lCQUM5Qjs7QUFhRCxNQUFNLE9BQU8sd0NBQXdDO0lBQ2pELFlBQW1CLFFBQStDO1FBQS9DLGFBQVEsR0FBUixRQUFRLENBQXVDO0lBQUksQ0FBQztJQUVoRSxNQUFNLENBQUMsc0JBQXNCLENBQUMsVUFBb0QsRUFDckYsT0FBZ0I7UUFDaEIsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUFBLENBQUM7O3FJQU5PLHdDQUF3Qzt5SEFBeEMsd0NBQXdDOzJGQUF4Qyx3Q0FBd0M7a0JBSHBELFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLDJCQUEyQjtpQkFDeEM7O0FBYUQsTUFBTSxPQUFPLDJCQUEyQjtJQUNwQyxZQUFtQixRQUFnRDtRQUFoRCxhQUFRLEdBQVIsUUFBUSxDQUF3QztJQUFJLENBQUM7SUFFakUsTUFBTSxDQUFDLHNCQUFzQixDQUFDLFVBQXVDLEVBQ3hFLE9BQWdCO1FBQ2hCLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFBQSxDQUFDOzt3SEFOTywyQkFBMkI7NEdBQTNCLDJCQUEyQjsyRkFBM0IsMkJBQTJCO2tCQUh2QyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSxjQUFjO2lCQUMzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElneENlbGxUZW1wbGF0ZUNvbnRleHQsIElneENvbHVtblRlbXBsYXRlQ29udGV4dCwgSWd4U3VtbWFyeVRlbXBsYXRlQ29udGV4dCB9IGZyb20gJy4uL2NvbW1vbi9ncmlkLmludGVyZmFjZSc7XG5cblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbaWd4RmlsdGVyQ2VsbFRlbXBsYXRlXSdcbn0pXG5leHBvcnQgY2xhc3MgSWd4RmlsdGVyQ2VsbFRlbXBsYXRlRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgdGVtcGxhdGU6IFRlbXBsYXRlUmVmPElneENvbHVtblRlbXBsYXRlQ29udGV4dD4pIHsgfVxuXG4gICAgcHVibGljIHN0YXRpYyBuZ1RlbXBsYXRlQ29udGV4dEd1YXJkKF9kaXJlY3RpdmU6IElneEZpbHRlckNlbGxUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgY29udGV4dDogdW5rbm93bik6IGNvbnRleHQgaXMgSWd4Q29sdW1uVGVtcGxhdGVDb250ZXh0IHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfTtcbn1cblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbaWd4Q2VsbF0nXG59KVxuZXhwb3J0IGNsYXNzIElneENlbGxUZW1wbGF0ZURpcmVjdGl2ZSB7XG4gICAgY29uc3RydWN0b3IocHVibGljIHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxJZ3hDZWxsVGVtcGxhdGVDb250ZXh0PikgeyB9XG5cbiAgICBwdWJsaWMgc3RhdGljIG5nVGVtcGxhdGVDb250ZXh0R3VhcmQoX2RpcmVjdGl2ZTogSWd4Q2VsbFRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBjb250ZXh0OiB1bmtub3duKTogY29udGV4dCBpcyBJZ3hDZWxsVGVtcGxhdGVDb250ZXh0IHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfTtcbn1cblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbaWd4Q2VsbFZhbGlkYXRpb25FcnJvcl0nXG59KVxuZXhwb3J0IGNsYXNzIElneENlbGxWYWxpZGF0aW9uRXJyb3JEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8SWd4Q2VsbFRlbXBsYXRlQ29udGV4dD4pIHsgfVxuXG4gICAgcHVibGljIHN0YXRpYyBuZ1RlbXBsYXRlQ29udGV4dEd1YXJkKF9kaXJlY3RpdmU6IElneENlbGxWYWxpZGF0aW9uRXJyb3JEaXJlY3RpdmUsXG4gICAgICAgIGNvbnRleHQ6IHVua25vd24pOiBjb250ZXh0IGlzIElneENlbGxUZW1wbGF0ZUNvbnRleHQge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9O1xufVxuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tpZ3hIZWFkZXJdJ1xufSlcbmV4cG9ydCBjbGFzcyBJZ3hDZWxsSGVhZGVyVGVtcGxhdGVEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8SWd4Q29sdW1uVGVtcGxhdGVDb250ZXh0PikgeyB9XG5cbiAgICBwdWJsaWMgc3RhdGljIG5nVGVtcGxhdGVDb250ZXh0R3VhcmQoX2RpcmVjdGl2ZTogSWd4Q2VsbEhlYWRlclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBjb250ZXh0OiB1bmtub3duKTogY29udGV4dCBpcyBJZ3hDb2x1bW5UZW1wbGF0ZUNvbnRleHQge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9O1xufVxuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbaWd4Rm9vdGVyXSdcbn0pXG5leHBvcnQgY2xhc3MgSWd4Q2VsbEZvb3RlclRlbXBsYXRlRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgdGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT4pIHsgfVxufVxuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tpZ3hDZWxsRWRpdG9yXSdcbn0pXG5leHBvcnQgY2xhc3MgSWd4Q2VsbEVkaXRvclRlbXBsYXRlRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgdGVtcGxhdGU6IFRlbXBsYXRlUmVmPElneENlbGxUZW1wbGF0ZUNvbnRleHQ+KSB7IH1cblxuICAgIHB1YmxpYyBzdGF0aWMgbmdUZW1wbGF0ZUNvbnRleHRHdWFyZChfZGlyZWN0aXZlOiBJZ3hDZWxsRWRpdG9yVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIGNvbnRleHQ6IHVua25vd24pOiBjb250ZXh0IGlzIElneENlbGxUZW1wbGF0ZUNvbnRleHQge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9O1xufVxuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tpZ3hDb2xsYXBzaWJsZUluZGljYXRvcl0nXG59KVxuZXhwb3J0IGNsYXNzIElneENvbGxhcHNpYmxlSW5kaWNhdG9yVGVtcGxhdGVEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8SWd4Q29sdW1uVGVtcGxhdGVDb250ZXh0PikgeyB9XG5cbiAgICBwdWJsaWMgc3RhdGljIG5nVGVtcGxhdGVDb250ZXh0R3VhcmQoX2RpcmVjdGl2ZTogSWd4Q29sbGFwc2libGVJbmRpY2F0b3JUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgY29udGV4dDogdW5rbm93bik6IGNvbnRleHQgaXMgSWd4Q29sdW1uVGVtcGxhdGVDb250ZXh0IHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfTtcbn1cblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbaWd4U3VtbWFyeV0nXG59KVxuZXhwb3J0IGNsYXNzIElneFN1bW1hcnlUZW1wbGF0ZURpcmVjdGl2ZSB7XG4gICAgY29uc3RydWN0b3IocHVibGljIHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxJZ3hTdW1tYXJ5VGVtcGxhdGVDb250ZXh0PikgeyB9XG5cbiAgICBwdWJsaWMgc3RhdGljIG5nVGVtcGxhdGVDb250ZXh0R3VhcmQoX2RpcmVjdGl2ZTogSWd4U3VtbWFyeVRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBjb250ZXh0OiB1bmtub3duKTogY29udGV4dCBpcyBJZ3hTdW1tYXJ5VGVtcGxhdGVDb250ZXh0IHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfTtcbn1cbiJdfQ==